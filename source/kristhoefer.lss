
kristhoefer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000b72  00000c06  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b72  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010e  0080010e  00000c14  2**0
                  ALLOC
  3 .stab         0000144c  00000000  00000000  00000c14  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00001057  00000000  00000000  00002060  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000030b7  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000030c8  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  00003108  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  000036fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  00003c9e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  00003cb8  2**0
                  CONTENTS, READONLY, DEBUGGING
Contents of section .data:
 800100 00000002 00000000 4a020000 0000      ........J.....  
Contents of section .text:
 0000 0c940001 0c941d01 0c941d01 0c941d01  ................
 0010 0c941d01 0c941d01 0c941d01 0c941d01  ................
 0020 0c941d01 0c941d01 0c941d01 0c941d01  ................
 0030 0c941d01 0c941d01 0c941d01 0c941d01  ................
 0040 0c941d01 0c941d01 0c941d01 0c941d01  ................
 0050 0c941d01 0c941d01 0c941d01 0c941d01  ................
 0060 0c941d01 0c941d01 49012f01 2f012f01  ........I./././.
 0070 2f012f01 2f012f01 52012f01 2f012f01  /./././.R./././.
 0080 2f012f01 2f012f01 5b012f01 2f012f01  /./././.[./././.
 0090 2f012f01 2f012f01 64012f01 2f012f01  /./././.d./././.
 00a0 2f012f01 2f012f01 6d012f01 2f012f01  /./././.m./././.
 00b0 2f012f01 2f012f01 76012f01 2f012f01  /./././.v./././.
 00c0 2f012f01 2f012f01 7f012f01 2f012f01  /./././.../././.
 00d0 2f012f01 2f012f01 88012f01 2f012f01  /./././.../././.
 00e0 2f012f01 2f012f01 91012f01 2f012f01  /./././.../././.
 00f0 2f012f01 2f012f01 9a012f01 2f012f01  /./././.../././.
 0100 2f012f01 2f012f01 40012d2d 2d2d2d2d  /./././.@.------
 0110 4f464620 48494748 2d2d2d2d 2d2d0a00  OFF HIGH------..
 0120 2d2d2d2d 2d2d4f46 46204c4f 572d2d2d  ------OFF LOW---
 0130 2d2d2d0a 002d2d2d 2d2d2d4f 4e204849  ---..------ON HI
 0140 47482d2d 2d2d2d2d 0a002d2d 2d2d2d2d  GH------..------
 0150 4f4e204c 4f572d2d 2d2d2d2d 0a004e2f  ON LOW------..N/
 0160 41202530 32580a00 4d522044 4154412b  A %02X..MR DATA+
 0170 522c204e 414b0a00 4d522044 4154412b  R, NAK..MR DATA+
 0180 522c2041 434b0a00 4d522053 4c412b52  R, ACK..MR SLA+R
 0190 2c204e41 4b0a004d 5220534c 412b522c  , NAK..MR SLA+R,
 01a0 2041434b 0a004d54 20444154 412b572c   ACK..MT DATA+W,
 01b0 204e414b 0a004d54 20444154 412b572c   NAK..MT DATA+W,
 01c0 2041434b 0a004d54 20534c41 2b572c20   ACK..MT SLA+W, 
 01d0 4e414b0a 004d5420 534c412b 572c2041  NAK..MT SLA+W, A
 01e0 434b0a00 4e4f4152 422f4e41 4b0a0052  CK..NOARB/NAK..R
 01f0 45535441 52540a00 53544152 540a0000  ESTART..START...
 0200 11241fbe cfefd8e0 debfcdbf 11e0a0e0  .$..............
 0210 b1e0e2e7 fbe002c0 05900d92 ae30b107  .............0..
 0220 d9f721e0 aee0b1e0 01c01d92 a431b207  ..!..........1..
 0230 e1f70e94 79020c94 b7050c94 000084e0  ....y...........
 0240 8093bc00 1092b900 88e48093 b8000895  ................
 0250 482f50e0 fa013897 e135f105 68f01f92  H/P...8..5..h...
 0260 8f938ee5 91e09f93 8f930e94 c9020f90  ................
 0270 0f900f90 0f900895 ec5cff4f 0c94c302  .........\.O....
 0280 88e691e0 9f938f93 0e94c902 0f900f90  ................
 0290 089588ef 91e09f93 8f930e94 c9020f90  ................
 02a0 0f900895 8fee91e0 9f938f93 0e94c902  ................
 02b0 0f900f90 089585ed 91e09f93 8f930e94  ................
 02c0 c9020f90 0f900895 86ec91e0 9f938f93  ................
 02d0 0e94c902 0f900f90 089586eb 91e09f93  ................
 02e0 8f930e94 c9020f90 0f900895 86ea91e0  ................
 02f0 9f938f93 0e94c902 0f900f90 089584ee  ................
 0300 91e09f93 8f930e94 c9020f90 0f900895  ................
 0310 87e991e0 9f938f93 0e94c902 0f900f90  ................
 0320 089588e8 91e09f93 8f930e94 c9020f90  ................
 0330 0f900895 88e791e0 9f938f93 0e94c902  ................
 0340 0f900f90 089584ea 8093bc00 8091bc00  ................
 0350 87fffccf 089584e9 8093bc00 8091bc00  ................
 0360 84fdfccf 08958091 b900887f 08958e7f  ................
 0370 6170682b 6093bb00 84e88093 bc008091  aph+`...........
 0380 bc0087ff fccf0895 8093bb00 84e88093  ................
 0390 bc008091 bc0087ff fccf0895 34ea20e8  ............4. .
 03a0 94e88091 b900887f 883199f0 3093bc00  .........1..0...
 03b0 8091bc00 87fffccf 2093bb00 9093bc00  ........ .......
 03c0 8091bc00 87fffccf 8091b900 887f8831  ...............1
 03d0 69f70895 cf93df93 d82fc62f 84ea8093  i.......././....
 03e0 bc008091 bc0087ff fccf8091 b900887f  ................
 03f0 0e942801 80e88093 bb0084e8 8093bc00  ..(.............
 0400 8091bc00 87fffccf 8091b900 887f0e94  ................
 0410 2801d093 bb0084e8 8093bc00 8091bc00  (...............
 0420 87fffccf 8091b900 887f0e94 2801c093  ............(...
 0430 bb0084e8 8093bc00 8091bc00 87fffccf  ................
 0440 8091b900 887f0e94 280184e9 8093bc00  ........(.......
 0450 8091bc00 84fdfccf 34ea20e8 94e88091  ........4. .....
 0460 b900887f 883199f0 3093bc00 8091bc00  .....1..0.......
 0470 87fffccf 2093bb00 9093bc00 8091bc00  .... ...........
 0480 87fffccf 8091b900 887f8831 69f7df91  ...........1i...
 0490 cf910895 cf93c82f 8a3051f0 8091c000  ......./.0Q.....
 04a0 85fffccf c093c600 80e090e0 cf910895  ................
 04b0 60e070e0 8de00e94 4a02f0cf 1092c500  `.p.....J.......
 04c0 89e18093 c4001092 c00088e1 8093c100  ................
 04d0 86e08093 c20080e0 91e09093 11018093  ................
 04e0 10010895 8091c000 87fffccf 8091c600  ................
 04f0 08950e94 1f010e94 5e0261e0 80e00e94  ........^.a.....
 0500 ea0169e7 8eef0e94 ea0160e0 80e00e94  ..i.......`.....
 0510 ea0160e0 86e00e94 ea018ae4 91e09f93  ..`.............
 0520 8f930e94 c90260e0 87e00e94 ea0185e3  ......`.........
 0530 91e09f93 8f930e94 c9026fef 88e00e94  ..........o.....
 0540 ea0180e2 91e09f93 8f930e94 c90265e0  ..............e.
 0550 89e00e94 ea018ae0 91e09f93 8f930e94  ................
 0560 c9022fef 83ed90e3 21508040 9040e1f7  ../.....!P.@.@..
 0570 00c00000 8db79eb7 08960fb6 f8949ebf  ................
 0580 0fbe8dbf ffcfee0f ff1f0590 f491e02d  ...............-
 0590 0994a0e0 b0e0efec f2e00c94 8e05ae01  ................
 05a0 495f5f4f da016d91 7d91ad01 0ee011e0  I__O..m.}.......
 05b0 f8018281 9381dc01 13962c91 13972860  ..........,...(`
 05c0 13962c93 0e94ef02 d8011296 ed91fc91  ..,.............
 05d0 13972381 277f2383 e4e00c94 aa05abe0  ..#.'.#.........
 05e0 b0e0e5ef f2e00c94 80056c01 7b018a01  ..........l.{...
 05f0 fc011782 16828381 81ffccc1 ce010196  ................
 0600 3c01f601 9381f701 93fd8591 93ff8191  <...............
 0610 7f018823 09f4bac1 853239f4 93fd8591  ...#.....29.....
 0620 93ff8191 7f018532 29f4b601 90e00e94  .......2).......
 0630 e604e7cf 912c212c 312cffe1 f315d8f0  .....,!,1,......
 0640 8b3279f0 38f48032 79f08332 a1f4232d  .2y.8..2y..2..#-
 0650 20611dc0 8d3261f0 803369f4 232d2160   a...2a..3i.#-!`
 0660 16c0832d 8260382e e32de460 3e2e2ac0  ...-.`8..-.`>.*.
 0670 f32df860 1dc037fc 2dc020ed 280f2a30  .-.`..7.-. .(.*0
 0680 40f08e32 b9f436fc 81c1232d 2064322e  @..2..6...#- d2.
 0690 19c036fe 06c08ae0 989e200d 1124922e  ..6....... ..$..
 06a0 11c0eae0 2e9e200d 1124222e f32df062  ...... ..$"..-.b
 06b0 3f2e08c0 8c3621f4 832d8068 382e02c0  ?....6!..-.h8...
 06c0 883641f4 f70193fd 859193ff 81917f01  .6A.............
 06d0 8111b3cf 982f9f7d 95549330 28f40c5f  ...../.}.T.0(.._
 06e0 1f4f9fe3 99830dc0 833631f0 833771f0  .O.......61..7q.
 06f0 833509f0 59c021c0 f8018081 89830e5f  .5..Y.!........_
 0700 1f4f8824 8394912c 530113c0 2801f2e0  .O.$...,S...(...
 0710 4f0e511c f801a080 b18036fe 03c0692d  O.Q.......6...i-
 0720 70e002c0 6fef7fef c5010e94 db044c01  p...o.........L.
 0730 8201f32d ff773f2e 16c02801 22e0420e  ...-.w?...(.".B.
 0740 511cf801 a080b180 36fe03c0 692d70e0  Q.......6...i-p.
 0750 02c06fef 7fefc501 0e94d004 4c01f32d  ..o.........L..-
 0760 f0683f2e 820133fc 1bc0822d 90e08816  .h?...3....-....
 0770 9906b0f4 b60180e2 90e00e94 e6042a94  ..............*.
 0780 f4cff501 37fc8591 37fe8191 5f01b601  ....7...7..._...
 0790 90e00e94 e6042110 2a9421e0 821a9108  ......!.*.!.....
 07a0 81149104 71f7e8c0 843611f0 893641f5  ....q....6...6A.
 07b0 f80137fe 07c06081 71818281 93810c5f  ..7...`.q......_
 07c0 1f4f08c0 60817181 072e000c 880b990b  .O..`.q.........
 07d0 0e5f1f4f f32dff76 3f2e97ff 09c09095  ._.O.-.v?.......
 07e0 80957095 61957f4f 8f4f9f4f f0683f2e  ..p.a..O.O.O.h?.
 07f0 2ae030e0 a3010e94 2205882e 861845c0  *.0.....".....E.
 0800 853731f4 232d2f7e b22e2ae0 30e025c0  .71.#-/~..*.0.%.
 0810 932d997f b92e8f36 c1f018f4 883579f0  .-.....6.....5y.
 0820 b5c08037 19f08837 21f0b0c0 e92fe061  ...7...7!..../.a
 0830 be2eb4fe 0dc0fb2d f460bf2e 09c034fe  .......-.`....4.
 0840 0ac0292f 2660b22e 06c028e0 30e005c0  ..)/&`....(.0...
 0850 20e130e0 02c020e1 32e0f801 b7fe07c0   .0... .2.......
 0860 60817181 82819381 0c5f1f4f 06c06081  `.q......_.O..`.
 0870 718180e0 90e00e5f 1f4fa301 0e942205  q......_.O....".
 0880 882e8618 fb2dff77 3f2e36fe 0dc0232d  .....-.w?.6...#-
 0890 2e7fa22e 891458f4 34fe0bc0 32fc09c0  ......X.4...2...
 08a0 832d8e7e a82e05c0 b82ca32c 03c0b82c  .-.~.....,.,...,
 08b0 01c0b92c a4fe0fc0 fe01e80d f11d8081  ...,............
 08c0 803321f4 9a2d997e a92e09c0 a2fe06c0  .3!..-.~........
 08d0 b394b394 04c08a2d 867809f0 b394a3fc  .......-.x......
 08e0 11c0a0fe 06c0b214 88f4280c 922c9b18  ..........(..,..
 08f0 0ec0b214 60f4b601 80e290e0 0e94e604  ....`...........
 0900 b394f7cf b21418f4 2b1802c0 982c212c  ........+....,!,
 0910 a4fe10c0 b60180e3 90e00e94 e604a2fe  ................
 0920 17c0a1fc 03c088e7 90e002c0 88e590e0  ................
 0930 b6010cc0 8a2d8678 59f0a1fe 02c08be2  .....-.xY.......
 0940 01c080e2 a7fc8de2 b60190e0 0e94e604  ................
 0950 891438f4 b60180e3 90e00e94 e6049a94  ..8.............
 0960 f7cf8a94 f301e80d f11d8081 b60190e0  ................
 0970 0e94e604 8110f5cf 222009f4 42ceb601  ........" ..B...
 0980 80e290e0 0e94e604 2a94f6cf f6018681  ........*.......
 0990 978102c0 8fef9fef 2b96e2e1 0c949c05  ........+.......
 09a0 fc010590 61507040 0110d8f7 80959095  ....aPp@........
 09b0 8e0f9f1f 0895fc01 61507040 01900110  ........aPp@....
 09c0 d8f78095 90958e0f 9f1f0895 0f931f93  ................
 09d0 cf93df93 fb012381 21fd03c0 8fef9fef  ......#.!.......
 09e0 2cc022ff 16c04681 57812481 35814217  ,."...F.W.$.5.B.
 09f0 530744f4 a081b181 9d012f5f 3f4f3183  S.D......./_?O1.
 0a00 20838c93 26813781 2f5f3f4f 37832683   ...&.7./_?O7.&.
 0a10 14c08b01 ec01fb01 0084f185 e02d0995  .............-..
 0a20 892be1f6 d8011696 8d919c91 17970196  .+..............
 0a30 17969c93 8e931697 ce01df91 cf911f91  ................
 0a40 0f910895 fa01aa27 283051f1 203181f1  .......'(0Q. 1..
 0a50 e8946f93 6e7f6e5f 7f4f8f4f 9f4faf4f  ..o.n.n_.O.O.O.O
 0a60 b1e03ed0 b4e03cd0 670f781f 891f9a1f  ..>...<.g.x.....
 0a70 a11d680f 791f8a1f 911da11d 6a0f711d  ..h.y.......j.q.
 0a80 811d911d a11d20d0 09f46894 3f912ae0  ...... ...h.?.*.
 0a90 269f1124 3019305d 3193def6 cf010895  &..$0.0]1.......
 0aa0 462f4770 405d4193 b3e00fd0 c9f7f6cf  F/Gp@]A.........
 0ab0 462f4f70 405d4a33 18f0495d 31fd4052  F/Op@]J3..I]1.@R
 0ac0 419302d0 a9f7eacf b4e0a695 97958795  A...............
 0ad0 77956795 ba95c9f7 00976105 71050895  w.g.......a.q...
 0ae0 9b01ac01 0a2e0694 57954795 37952795  ........W.G.7.'.
 0af0 ba95c9f7 620f731f 841f951f a01d0895  ....b.s.........
 0b00 2f923f92 4f925f92 6f927f92 8f929f92  /.?.O._.o.......
 0b10 af92bf92 cf92df92 ef92ff92 0f931f93  ................
 0b20 cf93df93 cdb7deb7 ca1bdb0b 0fb6f894  ................
 0b30 debf0fbe cdbf0994 2a883988 48885f84  ........*.9.H._.
 0b40 6e847d84 8c849b84 aa84b984 c884df80  n.}.............
 0b50 ee80fd80 0c811b81 aa81b981 ce0fd11d  ................
 0b60 0fb6f894 debf0fbe cdbfed01 0895f894  ................
 0b70 ffcf                                 ..              
Contents of section .stab:
 0000 01000000 0000b001 57100000 08000000  ........W.......
 0010 64000200 3e020000 01000000 64000200  d...>.......d...
 0020 3e020000 3f000000 3c000000 00000000  >...?...<.......
 0030 4e000000 80000000 00000000 6e000000  N...........n...
 0040 80000000 00000000 88000000 80000000  ................
 0050 00000000 bf000000 80000000 00000000  ................
 0060 e5000000 80000000 00000000 1a010000  ................
 0070 80000000 00000000 92010000 80000000  ................
 0080 00000000 e8010000 80000000 00000000  ................
 0090 3a020000 80000000 00000000 7f020000  :...............
 00a0 80000000 00000000 a7020000 80000000  ................
 00b0 00000000 d5020000 80000000 00000000  ................
 00c0 ff020000 80000000 00000000 28030000  ............(...
 00d0 80000000 00000000 42030000 80000000  ........B.......
 00e0 00000000 5d030000 80000000 00000000  ....]...........
 00f0 7d030000 80000000 00000000 9e030000  }...............
 0100 80000000 00000000 b9030000 80000000  ................
 0110 00000000 d9030000 80000000 00000000  ................
 0120 fe030000 80000000 00000000 28040000  ............(...
 0130 80000000 00000000 4c040000 80000000  ........L.......
 0140 00000000 75040000 80000000 00000000  ....u...........
 0150 a3040000 80000000 00000000 c9040000  ................
 0160 80000000 00000000 e9040000 80000000  ................
 0170 00000000 0e050000 80000000 00000000  ................
 0180 38050000 80000000 00000000 67050000  8...........g...
 0190 80000000 00000000 90050000 80000000  ................
 01a0 00000000 be050000 80000000 00000000  ................
 01b0 f1050000 80000000 00000000 12060000  ................
 01c0 80000000 00000000 2d060000 80000000  ........-.......
 01d0 00000000 4d060000 80000000 00000000  ....M...........
 01e0 72060000 80000000 00000000 9c060000  r...............
 01f0 80000000 00000000 c0060000 80000000  ................
 0200 00000000 e9060000 80000000 00000000  ................
 0210 17070000 80000000 00000000 3d070000  ............=...
 0220 80000000 00000000 5d070000 80000000  ........].......
 0230 00000000 82070000 80000000 00000000  ................
 0240 ac070000 80000000 00000000 db070000  ................
 0250 80000000 00000000 04080000 80000000  ................
 0260 00000000 32080000 80000000 00000000  ....2...........
 0270 65080000 80000000 00000000 79080000  e...........y...
 0280 82000000 00000000 9e080000 82000000  ................
 0290 00000000 bc080000 82000000 00000000  ................
 02a0 e0080000 82000000 250f0000 00090000  ........%.......
 02b0 82000000 00000000 28090000 82000000  ........(.......
 02c0 3bb80000 46090000 80007d00 00000000  ;...F.....}.....
 02d0 5b090000 80007e00 00000000 71090000  [.....~.....q...
 02e0 80007f00 00000000 86090000 80008000  ................
 02f0 00000000 9c090000 80008100 00000000  ................
 0300 b1090000 80008200 00000000 c7090000  ................
 0310 80008400 00000000 dc090000 80008500  ................
 0320 00000000 f2090000 80009200 00000000  ................
 0330 080a0000 80009700 00000000 200a0000  ............ ...
 0340 8000a300 00000000 3b0a0000 8000a800  ........;.......
 0350 00000000 570a0000 8000ad00 00000000  ....W...........
 0360 730a0000 8000b200 00000000 900a0000  s...............
 0370 8000b700 00000000 ac0a0000 8000bc00  ................
 0380 00000000 c90a0000 8000c400 00000000  ................
 0390 e50a0000 8000cb00 00000000 020b0000  ................
 03a0 8000d900 00000000 1c0b0000 8000de00  ................
 03b0 00000000 370b0000 8000e300 00000000  ....7...........
 03c0 520b0000 8000e800 00000000 6e0b0000  R...........n...
 03d0 8000ed00 00000000 890b0000 8000f200  ................
 03e0 00000000 a50b0000 8000fa00 00000000  ................
 03f0 c00b0000 80000101 00000000 dc0b0000  ................
 0400 80001501 00000000 f30b0000 80001a01  ................
 0410 00000000 00000000 a2000000 00000000  ................
 0420 00000000 a2000000 00000000 0b0c0000  ................
 0430 80004d00 00000000 250c0000 80005100  ..M.....%.....Q.
 0440 00000000 00000000 a2000000 00000000  ................
 0450 00000000 a2000000 00000000 400c0000  ............@...
 0460 82000000 6e130000 600c0000 8000f400  ....n...`.......
 0470 00000000 00000000 a2000000 00000000  ................
 0480 00000000 a2000000 00000000 00000000  ................
 0490 a2000000 00000000 ae0c0000 82000000  ................
 04a0 00000000 d20c0000 82000000 d8040000  ................
 04b0 fa0c0000 8000d800 00000000 00000000  ................
 04c0 a2000000 00000000 00000000 a2000000  ................
 04d0 00000000 0e0d0000 82000000 85330000  .............3..
 04e0 2b0d0000 82000000 900e0000 530d0000  +...........S...
 04f0 80002800 00000000 790d0000 80006200  ..(.....y.....b.
 0500 00000000 00000000 a2000000 00000000  ................
 0510 900d0000 80000000 00000000 5a0e0000  ............Z...
 0520 80001501 00000000 6e0e0000 8000b603  ........n.......
 0530 00000000 00000000 a2000000 00000000  ................
 0540 830e0000 24000b00 f2040000 00000000  ....$...........
 0550 2e000000 f2040000 00000000 44000b00  ............D...
 0560 00000000 00000000 44000c00 00000000  ........D.......
 0570 00000000 44000d00 04000000 00000000  ....D...........
 0580 44001100 08000000 00000000 44001200  D...........D...
 0590 10000000 00000000 44001300 18000000  ........D.......
 05a0 00000000 44001900 20000000 00000000  ....D... .......
 05b0 44001a00 28000000 00000000 44001b00  D...(.......D...
 05c0 34000000 00000000 44001c00 3c000000  4.......D...<...
 05d0 00000000 44001e00 48000000 00000000  ....D...H.......
 05e0 44001f00 50000000 00000000 44002000  D...P.......D. .
 05f0 5c000000 00000000 44002100 64000000  \.......D.!.d...
 0600 8f0e0000 84000000 62050000 00000000  ........b.......
 0610 4400bb00 70000000 00000000 24000000  D...p.......$...
 0620 94000000 00000000 4e000000 86050000  ........N.......
 0630 00000000 64000000 3e020000 08000000  ....d...>.......
 0640 64000200 3e020000 b10e0000 64000200  d...>.......d...
 0650 3e020000 3f000000 3c000000 00000000  >...?...<.......
 0660 4e000000 80000000 00000000 6e000000  N...........n...
 0670 80000000 00000000 88000000 80000000  ................
 0680 00000000 bf000000 80000000 00000000  ................
 0690 e5000000 80000000 00000000 1a010000  ................
 06a0 80000000 00000000 92010000 80000000  ................
 06b0 00000000 e8010000 80000000 00000000  ................
 06c0 3a020000 80000000 00000000 7f020000  :...............
 06d0 80000000 00000000 a7020000 80000000  ................
 06e0 00000000 d5020000 80000000 00000000  ................
 06f0 ff020000 80000000 00000000 28030000  ............(...
 0700 80000000 00000000 42030000 80000000  ........B.......
 0710 00000000 5d030000 80000000 00000000  ....]...........
 0720 7d030000 80000000 00000000 9e030000  }...............
 0730 80000000 00000000 b9030000 80000000  ................
 0740 00000000 d9030000 80000000 00000000  ................
 0750 fe030000 80000000 00000000 28040000  ............(...
 0760 80000000 00000000 4c040000 80000000  ........L.......
 0770 00000000 75040000 80000000 00000000  ....u...........
 0780 a3040000 80000000 00000000 c9040000  ................
 0790 80000000 00000000 e9040000 80000000  ................
 07a0 00000000 0e050000 80000000 00000000  ................
 07b0 38050000 80000000 00000000 67050000  8...........g...
 07c0 80000000 00000000 90050000 80000000  ................
 07d0 00000000 be050000 80000000 00000000  ................
 07e0 f1050000 80000000 00000000 12060000  ................
 07f0 80000000 00000000 2d060000 80000000  ........-.......
 0800 00000000 4d060000 80000000 00000000  ....M...........
 0810 72060000 80000000 00000000 9c060000  r...............
 0820 80000000 00000000 c0060000 80000000  ................
 0830 00000000 e9060000 80000000 00000000  ................
 0840 17070000 80000000 00000000 3d070000  ............=...
 0850 80000000 00000000 5d070000 80000000  ........].......
 0860 00000000 82070000 80000000 00000000  ................
 0870 ac070000 80000000 00000000 db070000  ................
 0880 80000000 00000000 04080000 80000000  ................
 0890 00000000 32080000 80000000 00000000  ....2...........
 08a0 65080000 80000000 00000000 9e080000  e...............
 08b0 c2000000 00000000 bc080000 c2000000  ................
 08c0 00000000 e0080000 c2000000 250f0000  ............%...
 08d0 00090000 c2000000 00000000 28090000  ............(...
 08e0 c2000000 3bb80000 400c0000 c2000000  ....;...@.......
 08f0 6e130000 ae0c0000 c2000000 00000000  n...............
 0900 d20c0000 c2000000 d8040000 0e0d0000  ................
 0910 c2000000 85330000 2b0d0000 c2000000  .....3..+.......
 0920 900e0000 b70e0000 24000a00 3e020000  ........$...>...
 0930 00000000 2e000000 3e020000 00000000  ........>.......
 0940 44000a00 00000000 00000000 44001500  D...........D...
 0950 00000000 00000000 44001600 06000000  ........D.......
 0960 00000000 44001800 0a000000 00000000  ....D...........
 0970 24000000 12000000 00000000 4e000000  $...........N...
 0980 50020000 c80e0000 24001b00 50020000  P.......$...P...
 0990 e60e0000 40001b00 18000000 00000000  ....@...........
 09a0 2e000000 50020000 00000000 44001b00  ....P.......D...
 09b0 00000000 00000000 44001f00 00000000  ........D.......
 09c0 00000000 44004400 0e000000 00000000  ....D.D.........
 09d0 44004500 1e000000 00000000 44001f00  D.E.........D...
 09e0 28000000 00000000 44004100 30000000  (.......D.A.0...
 09f0 00000000 44004200 3c000000 00000000  ....D.B.<.......
 0a00 44002100 42000000 00000000 44002200  D.!.B.......D.".
 0a10 4e000000 00000000 44002400 54000000  N.......D.$.T...
 0a20 00000000 44002500 60000000 00000000  ....D.%.`.......
 0a30 44002b00 66000000 00000000 44002c00  D.+.f.......D.,.
 0a40 72000000 00000000 44002e00 78000000  r.......D...x...
 0a50 00000000 44002f00 84000000 00000000  ....D./.........
 0a60 44003100 8a000000 00000000 44003200  D.1.........D.2.
 0a70 96000000 00000000 44003400 9c000000  ........D.4.....
 0a80 00000000 44003500 a8000000 00000000  ....D.5.........
 0a90 44002700 ae000000 00000000 44002800  D.'.........D.(.
 0aa0 ba000000 00000000 44003800 c0000000  ........D.8.....
 0ab0 00000000 44003900 cc000000 00000000  ....D.9.........
 0ac0 44003b00 d2000000 00000000 44003c00  D.;.........D.<.
 0ad0 de000000 00000000 44003e00 e4000000  ........D.>.....
 0ae0 00000000 44003f00 f0000000 00000000  ....D.?.........
 0af0 24000000 f6000000 00000000 4e000000  $...........N...
 0b00 46030000 f40e0000 24004900 46030000  F.......$.I.F...
 0b10 00000000 2e000000 46030000 00000000  ........F.......
 0b20 44004900 00000000 00000000 44005100  D.I.........D.Q.
 0b30 00000000 00000000 44005300 06000000  ........D.S.....
 0b40 00000000 44005400 0e000000 00000000  ....D.T.........
 0b50 24000000 10000000 00000000 4e000000  $...........N...
 0b60 56030000 060f0000 24005600 56030000  V.......$.V.V...
 0b70 00000000 2e000000 56030000 00000000  ........V.......
 0b80 44005600 00000000 00000000 44005f00  D.V.........D._.
 0b90 00000000 00000000 44006100 06000000  ........D.a.....
 0ba0 00000000 44006200 0e000000 00000000  ....D.b.........
 0bb0 24000000 10000000 00000000 4e000000  $...........N...
 0bc0 66030000 170f0000 24006400 66030000  f.......$.d.f...
 0bd0 00000000 2e000000 66030000 00000000  ........f.......
 0be0 44006400 00000000 00000000 44006b00  D.d.........D.k.
 0bf0 00000000 00000000 44006e00 04000000  ........D.n.....
 0c00 00000000 24000000 08000000 00000000  ....$...........
 0c10 4e000000 6e030000 2d0f0000 24007000  N...n...-...$.p.
 0c20 6e030000 430f0000 40007000 18000000  n...C...@.p.....
 0c30 560f0000 40007000 16000000 00000000  V...@.p.........
 0c40 2e000000 6e030000 00000000 44007000  ....n.......D.p.
 0c50 00000000 00000000 44007d00 00000000  ........D.}.....
 0c60 00000000 44007f00 0a000000 00000000  ....D...........
 0c70 44008100 10000000 00000000 44008200  D...........D...
 0c80 18000000 00000000 24000000 1a000000  ........$.......
 0c90 00000000 4e000000 88030000 640f0000  ....N.......d...
 0ca0 24008400 88030000 7a0f0000 40008400  $.......z...@...
 0cb0 18000000 00000000 2e000000 88030000  ................
 0cc0 00000000 44008400 00000000 00000000  ....D...........
 0cd0 44008d00 00000000 00000000 44008f00  D...........D...
 0ce0 04000000 00000000 44009100 0a000000  ........D.......
 0cf0 00000000 44009200 12000000 00000000  ....D...........
 0d00 24000000 14000000 00000000 4e000000  $...........N...
 0d10 9c030000 860f0000 24009600 9c030000  ........$.......
 0d20 00000000 2e000000 9c030000 00000000  ................
 0d30 44009600 00000000 00000000 44005100  D...........D.Q.
 0d40 00000000 00000000 44007d00 02000000  ........D.}.....
 0d50 00000000 44007f00 04000000 00000000  ....D...........
 0d60 44006b00 06000000 00000000 44009e00  D.k.........D...
 0d70 0a000000 00000000 44005100 10000000  ........D.Q.....
 0d80 00000000 44005300 14000000 00000000  ....D.S.........
 0d90 44007d00 1c000000 00000000 44007f00  D.}.........D...
 0da0 20000000 00000000 44008100 24000000   .......D...$...
 0db0 00000000 44006b00 2c000000 00000000  ....D.k.,.......
 0dc0 44009e00 30000000 00000000 4400a200  D...0.......D...
 0dd0 36000000 00000000 24000000 38000000  6.......$...8...
 0de0 00000000 4e000000 d4030000 af0f0000  ....N...........
 0df0 2400a400 d4030000 c90f0000 4000a400  $...........@...
 0e00 1d000000 7a0f0000 4000a400 1c000000  ....z...@.......
 0e10 00000000 2e000000 d4030000 00000000  ................
 0e20 4400a400 00000000 00000000 44005100  D...........D.Q.
 0e30 08000000 00000000 44005300 0e000000  ........D.S.....
 0e40 00000000 44006b00 16000000 00000000  ....D.k.........
 0e50 4400af00 1a000000 00000000 44007d00  D...........D.}.
 0e60 20000000 00000000 44007f00 26000000   .......D...&...
 0e70 00000000 44008100 2c000000 00000000  ....D...,.......
 0e80 44006b00 34000000 00000000 4400b100  D.k.4.......D...
 0e90 38000000 00000000 44008d00 3e000000  8.......D...>...
 0ea0 00000000 44008f00 42000000 00000000  ....D...B.......
 0eb0 44009100 48000000 00000000 44006b00  D...H.......D.k.
 0ec0 50000000 00000000 4400b400 54000000  P.......D...T...
 0ed0 00000000 44008d00 5a000000 00000000  ....D...Z.......
 0ee0 44008f00 5e000000 00000000 44009100  D...^.......D...
 0ef0 64000000 00000000 44006b00 6c000000  d.......D.k.l...
 0f00 00000000 4400b700 70000000 00000000  ....D...p.......
 0f10 44005f00 76000000 00000000 44006100  D._.v.......D.a.
 0f20 7c000000 00000000 44005100 84000000  |.......D.Q.....
 0f30 00000000 44007d00 86000000 00000000  ....D.}.........
 0f40 44007f00 88000000 00000000 44006b00  D...........D.k.
 0f50 8a000000 00000000 44009e00 8e000000  ........D.......
 0f60 00000000 44005100 94000000 00000000  ....D.Q.........
 0f70 44005300 98000000 00000000 44007d00  D.S.........D.}.
 0f80 a0000000 00000000 44007f00 a4000000  ........D.......
 0f90 00000000 44008100 a8000000 00000000  ....D...........
 0fa0 44006b00 b0000000 00000000 44009e00  D.k.........D...
 0fb0 b4000000 00000000 4400bd00 ba000000  ........D.......
 0fc0 00000000 24000000 c0000000 00000000  ....$...........
 0fd0 4e000000 94040000 00000000 64000000  N...........d...
 0fe0 94040000 08000000 64000200 94040000  ........d.......
 0ff0 e00f0000 64000200 94040000 3f000000  ....d.......?...
 1000 3c000000 00000000 4e000000 80000000  <.......N.......
 1010 00000000 6e000000 80000000 00000000  ....n...........
 1020 88000000 80000000 00000000 bf000000  ................
 1030 80000000 00000000 e5000000 80000000  ................
 1040 00000000 1a010000 80000000 00000000  ................
 1050 92010000 80000000 00000000 e8010000  ................
 1060 80000000 00000000 3a020000 80000000  ........:.......
 1070 00000000 7f020000 80000000 00000000  ................
 1080 a7020000 80000000 00000000 d5020000  ................
 1090 80000000 00000000 ff020000 80000000  ................
 10a0 00000000 28030000 80000000 00000000  ....(...........
 10b0 42030000 80000000 00000000 5d030000  B...........]...
 10c0 80000000 00000000 7d030000 80000000  ........}.......
 10d0 00000000 9e030000 80000000 00000000  ................
 10e0 b9030000 80000000 00000000 d9030000  ................
 10f0 80000000 00000000 fe030000 80000000  ................
 1100 00000000 28040000 80000000 00000000  ....(...........
 1110 4c040000 80000000 00000000 75040000  L...........u...
 1120 80000000 00000000 a3040000 80000000  ................
 1130 00000000 c9040000 80000000 00000000  ................
 1140 e9040000 80000000 00000000 0e050000  ................
 1150 80000000 00000000 38050000 80000000  ........8.......
 1160 00000000 67050000 80000000 00000000  ....g...........
 1170 90050000 80000000 00000000 be050000  ................
 1180 80000000 00000000 f1050000 80000000  ................
 1190 00000000 12060000 80000000 00000000  ................
 11a0 2d060000 80000000 00000000 4d060000  -...........M...
 11b0 80000000 00000000 72060000 80000000  ........r.......
 11c0 00000000 9c060000 80000000 00000000  ................
 11d0 c0060000 80000000 00000000 e9060000  ................
 11e0 80000000 00000000 17070000 80000000  ................
 11f0 00000000 3d070000 80000000 00000000  ....=...........
 1200 5d070000 80000000 00000000 82070000  ]...............
 1210 80000000 00000000 ac070000 80000000  ................
 1220 00000000 db070000 80000000 00000000  ................
 1230 04080000 80000000 00000000 32080000  ............2...
 1240 80000000 00000000 65080000 80000000  ........e.......
 1250 00000000 9e080000 c2000000 00000000  ................
 1260 bc080000 c2000000 00000000 e0080000  ................
 1270 c2000000 250f0000 00090000 c2000000  ....%...........
 1280 00000000 28090000 c2000000 3bb80000  ....(.......;...
 1290 400c0000 c2000000 6e130000 0e0d0000  @.......n.......
 12a0 c2000000 85330000 2b0d0000 c2000000  .....3..+.......
 12b0 900e0000 d20c0000 c2000000 d8040000  ................
 12c0 e90f0000 24001300 94040000 fd0f0000  ....$...........
 12d0 40001300 1c000000 08100000 40001300  @...........@...
 12e0 16000000 00000000 2e000000 94040000  ................
 12f0 00000000 44001300 00000000 00000000  ....D...........
 1300 44001400 04000000 00000000 44001700  D...........D...
 1310 08000000 00000000 44001900 10000000  ........D.......
 1320 00000000 44001b00 14000000 00000000  ....D...........
 1330 44001500 1c000000 00000000 24000000  D...........$...
 1340 28000000 00000000 4e000000 bc040000  (.......N.......
 1350 1e100000 24000900 bc040000 00000000  ....$...........
 1360 2e000000 bc040000 00000000 44000900  ............D...
 1370 00000000 00000000 44000a00 00000000  ........D.......
 1380 00000000 44000b00 04000000 00000000  ....D...........
 1390 44000c00 0a000000 00000000 44000d00  D...........D...
 13a0 0e000000 00000000 44000e00 14000000  ........D.......
 13b0 00000000 44001000 1a000000 00000000  ....D...........
 13c0 24000000 28000000 00000000 4e000000  $...(.......N...
 13d0 e4040000 30100000 24001d00 e4040000  ....0...$.......
 13e0 00000000 2e000000 e4040000 00000000  ................
 13f0 44001d00 00000000 00000000 44001e00  D...........D...
 1400 00000000 00000000 44002000 08000000  ........D. .....
 1410 00000000 44002100 0c000000 00000000  ....D.!.........
 1420 24000000 0e000000 00000000 4e000000  $...........N...
 1430 f2040000 44100000 26000700 00018000  ....D...&.......
 1440 00000000 64000000 f2040000           ....d.......    
Contents of section .stabstr:
 0000 006d6169 6e2e6300 2f2f6d6e 742f632f  .main.c.//mnt/c/
 0010 55736572 732f5573 65723132 332f6769  Users/User123/gi
 0020 742f4b72 69737468 6f656665 722d526f  t/Kristhoefer-Ro
 0030 626f7469 63732f73 6f757263 652f0067  botics/source/.g
 0040 6363325f 636f6d70 696c6564 2e00696e  cc2_compiled..in
 0050 743a7428 302c3129 3d722830 2c31293b  t:t(0,1)=r(0,1);
 0060 2d333237 36383b33 32373637 3b006368  -32768;32767;.ch
 0070 61723a74 28302c32 293d7228 302c3229  ar:t(0,2)=r(0,2)
 0080 3b303b31 32373b00 6c6f6e67 20696e74  ;0;127;.long int
 0090 3a742830 2c33293d 40733332 3b722830  :t(0,3)=@s32;r(0
 00a0 2c33293b 30323030 30303030 30303030  ,3);020000000000
 00b0 3b303137 37373737 37373737 373b0075  ;017777777777;.u
 00c0 6e736967 6e656420 696e743a 7428302c  nsigned int:t(0,
 00d0 34293d72 28302c34 293b303b 30313737  4)=r(0,4);0;0177
 00e0 3737373b 006c6f6e 6720756e 7369676e  777;.long unsign
 00f0 65642069 6e743a74 28302c35 293d4073  ed int:t(0,5)=@s
 0100 33323b72 28302c35 293b303b 30333737  32;r(0,5);0;0377
 0110 37373737 37373737 3b005f5f 696e7431  77777777;.__int1
 0120 32383a74 28302c36 293d4073 3132383b  28:t(0,6)=@s128;
 0130 7228302c 36293b30 32303030 30303030  r(0,6);020000000
 0140 30303030 30303030 30303030 30303030  0000000000000000
 0150 30303030 30303030 30303030 30303030  0000000000000000
 0160 3030303b 30313737 37373737 37373737  000;017777777777
 0170 37373737 37373737 37373737 37373737  7777777777777777
 0180 37373737 37373737 37373737 37373737  7777777777777777
 0190 3b005f5f 696e7431 32382075 6e736967  ;.__int128 unsig
 01a0 6e65643a 7428302c 37293d40 73313238  ned:t(0,7)=@s128
 01b0 3b722830 2c37293b 303b3033 37373737  ;r(0,7);0;037777
 01c0 37373737 37373737 37373737 37373737  7777777777777777
 01d0 37373737 37373737 37373737 37373737  7777777777777777
 01e0 37373737 37373b00 6c6f6e67 206c6f6e  777777;.long lon
 01f0 6720696e 743a7428 302c3829 3d407336  g int:t(0,8)=@s6
 0200 343b7228 302c3829 3b303130 30303030  4;r(0,8);0100000
 0210 30303030 30303030 30303030 30303030  0000000000000000
 0220 3b303037 37373737 37373737 37373737  ;007777777777777
 0230 37373737 37373737 3b006c6f 6e67206c  77777777;.long l
 0240 6f6e6720 756e7369 676e6564 20696e74  ong unsigned int
 0250 3a742830 2c39293d 40733634 3b722830  :t(0,9)=@s64;r(0
 0260 2c39293b 303b3031 37373737 37373737  ,9);0;0177777777
 0270 37373737 37373737 37373737 373b0073  7777777777777;.s
 0280 686f7274 20696e74 3a742830 2c313029  hort int:t(0,10)
 0290 3d722830 2c313029 3b2d3332 3736383b  =r(0,10);-32768;
 02a0 33323736 373b0073 686f7274 20756e73  32767;.short uns
 02b0 69676e65 6420696e 743a7428 302c3131  igned int:t(0,11
 02c0 293d7228 302c3131 293b303b 30313737  )=r(0,11);0;0177
 02d0 3737373b 00736967 6e656420 63686172  777;.signed char
 02e0 3a742830 2c313229 3d407338 3b722830  :t(0,12)=@s8;r(0
 02f0 2c313229 3b2d3132 383b3132 373b0075  ,12);-128;127;.u
 0300 6e736967 6e656420 63686172 3a742830  nsigned char:t(0
 0310 2c313329 3d407338 3b722830 2c313329  ,13)=@s8;r(0,13)
 0320 3b303b32 35353b00 666c6f61 743a7428  ;0;255;.float:t(
 0330 302c3134 293d7228 302c3129 3b343b30  0,14)=r(0,1);4;0
 0340 3b00646f 75626c65 3a742830 2c313529  ;.double:t(0,15)
 0350 3d722830 2c31293b 343b303b 006c6f6e  =r(0,1);4;0;.lon
 0360 6720646f 75626c65 3a742830 2c313629  g double:t(0,16)
 0370 3d722830 2c31293b 343b303b 0073686f  =r(0,1);4;0;.sho
 0380 7274205f 46726163 743a7428 302c3137  rt _Fract:t(0,17
 0390 293d7228 302c3129 3b313b30 3b005f46  )=r(0,1);1;0;._F
 03a0 72616374 3a742830 2c313829 3d722830  ract:t(0,18)=r(0
 03b0 2c31293b 323b303b 006c6f6e 67205f46  ,1);2;0;.long _F
 03c0 72616374 3a742830 2c313929 3d722830  ract:t(0,19)=r(0
 03d0 2c31293b 343b303b 006c6f6e 67206c6f  ,1);4;0;.long lo
 03e0 6e67205f 46726163 743a7428 302c3230  ng _Fract:t(0,20
 03f0 293d7228 302c3129 3b383b30 3b00756e  )=r(0,1);8;0;.un
 0400 7369676e 65642073 686f7274 205f4672  signed short _Fr
 0410 6163743a 7428302c 3231293d 7228302c  act:t(0,21)=r(0,
 0420 31293b31 3b303b00 756e7369 676e6564  1);1;0;.unsigned
 0430 205f4672 6163743a 7428302c 3232293d   _Fract:t(0,22)=
 0440 7228302c 31293b32 3b303b00 756e7369  r(0,1);2;0;.unsi
 0450 676e6564 206c6f6e 67205f46 72616374  gned long _Fract
 0460 3a742830 2c323329 3d722830 2c31293b  :t(0,23)=r(0,1);
 0470 343b303b 00756e73 69676e65 64206c6f  4;0;.unsigned lo
 0480 6e67206c 6f6e6720 5f467261 63743a74  ng long _Fract:t
 0490 28302c32 34293d72 28302c31 293b383b  (0,24)=r(0,1);8;
 04a0 303b005f 53617420 73686f72 74205f46  0;._Sat short _F
 04b0 72616374 3a742830 2c323529 3d722830  ract:t(0,25)=r(0
 04c0 2c31293b 313b303b 005f5361 74205f46  ,1);1;0;._Sat _F
 04d0 72616374 3a742830 2c323629 3d722830  ract:t(0,26)=r(0
 04e0 2c31293b 323b303b 005f5361 74206c6f  ,1);2;0;._Sat lo
 04f0 6e67205f 46726163 743a7428 302c3237  ng _Fract:t(0,27
 0500 293d7228 302c3129 3b343b30 3b005f53  )=r(0,1);4;0;._S
 0510 6174206c 6f6e6720 6c6f6e67 205f4672  at long long _Fr
 0520 6163743a 7428302c 3238293d 7228302c  act:t(0,28)=r(0,
 0530 31293b38 3b303b00 5f536174 20756e73  1);8;0;._Sat uns
 0540 69676e65 64207368 6f727420 5f467261  igned short _Fra
 0550 63743a74 28302c32 39293d72 28302c31  ct:t(0,29)=r(0,1
 0560 293b313b 303b005f 53617420 756e7369  );1;0;._Sat unsi
 0570 676e6564 205f4672 6163743a 7428302c  gned _Fract:t(0,
 0580 3330293d 7228302c 31293b32 3b303b00  30)=r(0,1);2;0;.
 0590 5f536174 20756e73 69676e65 64206c6f  _Sat unsigned lo
 05a0 6e67205f 46726163 743a7428 302c3331  ng _Fract:t(0,31
 05b0 293d7228 302c3129 3b343b30 3b005f53  )=r(0,1);4;0;._S
 05c0 61742075 6e736967 6e656420 6c6f6e67  at unsigned long
 05d0 206c6f6e 67205f46 72616374 3a742830   long _Fract:t(0
 05e0 2c333229 3d722830 2c31293b 383b303b  ,32)=r(0,1);8;0;
 05f0 0073686f 7274205f 41636375 6d3a7428  .short _Accum:t(
 0600 302c3333 293d7228 302c3129 3b323b30  0,33)=r(0,1);2;0
 0610 3b005f41 6363756d 3a742830 2c333429  ;._Accum:t(0,34)
 0620 3d722830 2c31293b 343b303b 006c6f6e  =r(0,1);4;0;.lon
 0630 67205f41 6363756d 3a742830 2c333529  g _Accum:t(0,35)
 0640 3d722830 2c31293b 383b303b 006c6f6e  =r(0,1);8;0;.lon
 0650 67206c6f 6e67205f 41636375 6d3a7428  g long _Accum:t(
 0660 302c3336 293d7228 302c3129 3b383b30  0,36)=r(0,1);8;0
 0670 3b00756e 7369676e 65642073 686f7274  ;.unsigned short
 0680 205f4163 63756d3a 7428302c 3337293d   _Accum:t(0,37)=
 0690 7228302c 31293b32 3b303b00 756e7369  r(0,1);2;0;.unsi
 06a0 676e6564 205f4163 63756d3a 7428302c  gned _Accum:t(0,
 06b0 3338293d 7228302c 31293b34 3b303b00  38)=r(0,1);4;0;.
 06c0 756e7369 676e6564 206c6f6e 67205f41  unsigned long _A
 06d0 6363756d 3a742830 2c333929 3d722830  ccum:t(0,39)=r(0
 06e0 2c31293b 383b303b 00756e73 69676e65  ,1);8;0;.unsigne
 06f0 64206c6f 6e67206c 6f6e6720 5f416363  d long long _Acc
 0700 756d3a74 28302c34 30293d72 28302c31  um:t(0,40)=r(0,1
 0710 293b383b 303b005f 53617420 73686f72  );8;0;._Sat shor
 0720 74205f41 6363756d 3a742830 2c343129  t _Accum:t(0,41)
 0730 3d722830 2c31293b 323b303b 005f5361  =r(0,1);2;0;._Sa
 0740 74205f41 6363756d 3a742830 2c343229  t _Accum:t(0,42)
 0750 3d722830 2c31293b 343b303b 005f5361  =r(0,1);4;0;._Sa
 0760 74206c6f 6e67205f 41636375 6d3a7428  t long _Accum:t(
 0770 302c3433 293d7228 302c3129 3b383b30  0,43)=r(0,1);8;0
 0780 3b005f53 6174206c 6f6e6720 6c6f6e67  ;._Sat long long
 0790 205f4163 63756d3a 7428302c 3434293d   _Accum:t(0,44)=
 07a0 7228302c 31293b38 3b303b00 5f536174  r(0,1);8;0;._Sat
 07b0 20756e73 69676e65 64207368 6f727420   unsigned short 
 07c0 5f416363 756d3a74 28302c34 35293d72  _Accum:t(0,45)=r
 07d0 28302c31 293b323b 303b005f 53617420  (0,1);2;0;._Sat 
 07e0 756e7369 676e6564 205f4163 63756d3a  unsigned _Accum:
 07f0 7428302c 3436293d 7228302c 31293b34  t(0,46)=r(0,1);4
 0800 3b303b00 5f536174 20756e73 69676e65  ;0;._Sat unsigne
 0810 64206c6f 6e67205f 41636375 6d3a7428  d long _Accum:t(
 0820 302c3437 293d7228 302c3129 3b383b30  0,47)=r(0,1);8;0
 0830 3b005f53 61742075 6e736967 6e656420  ;._Sat unsigned 
 0840 6c6f6e67 206c6f6e 67205f41 6363756d  long long _Accum
 0850 3a742830 2c343829 3d722830 2c31293b  :t(0,48)=r(0,1);
 0860 383b303b 00766f69 643a7428 302c3439  8;0;.void:t(0,49
 0870 293d2830 2c343929 002f7573 722f6c69  )=(0,49)./usr/li
 0880 622f6176 722f696e 636c7564 652f6176  b/avr/include/av
 0890 722f696e 74657272 7570742e 68002f75  r/interrupt.h./u
 08a0 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 08b0 64652f61 76722f69 6f2e6800 2f757372  de/avr/io.h./usr
 08c0 2f6c6962 2f617672 2f696e63 6c756465  /lib/avr/include
 08d0 2f617672 2f736672 5f646566 732e6800  /avr/sfr_defs.h.
 08e0 2f757372 2f6c6962 2f617672 2f696e63  /usr/lib/avr/inc
 08f0 6c756465 2f696e74 74797065 732e6800  lude/inttypes.h.
 0900 2f757372 2f6c6962 2f676363 2f617672  /usr/lib/gcc/avr
 0910 2f352e34 2e302f69 6e636c75 64652f73  /5.4.0/include/s
 0920 7464696e 742e6800 2f757372 2f6c6962  tdint.h./usr/lib
 0930 2f617672 2f696e63 6c756465 2f737464  /avr/include/std
 0940 696e742e 6800696e 74385f74 3a742836  int.h.int8_t:t(6
 0950 2c31293d 28302c31 32290075 696e7438  ,1)=(0,12).uint8
 0960 5f743a74 28362c32 293d2830 2c313329  _t:t(6,2)=(0,13)
 0970 00696e74 31365f74 3a742836 2c33293d  .int16_t:t(6,3)=
 0980 28302c31 29007569 6e743136 5f743a74  (0,1).uint16_t:t
 0990 28362c34 293d2830 2c342900 696e7433  (6,4)=(0,4).int3
 09a0 325f743a 7428362c 35293d28 302c3329  2_t:t(6,5)=(0,3)
 09b0 0075696e 7433325f 743a7428 362c3629  .uint32_t:t(6,6)
 09c0 3d28302c 35290069 6e743634 5f743a74  =(0,5).int64_t:t
 09d0 28362c37 293d2830 2c382900 75696e74  (6,7)=(0,8).uint
 09e0 36345f74 3a742836 2c38293d 28302c39  64_t:t(6,8)=(0,9
 09f0 2900696e 74707472 5f743a74 28362c39  ).intptr_t:t(6,9
 0a00 293d2836 2c332900 75696e74 7074725f  )=(6,3).uintptr_
 0a10 743a7428 362c3130 293d2836 2c342900  t:t(6,10)=(6,4).
 0a20 696e745f 6c656173 74385f74 3a742836  int_least8_t:t(6
 0a30 2c313129 3d28362c 31290075 696e745f  ,11)=(6,1).uint_
 0a40 6c656173 74385f74 3a742836 2c313229  least8_t:t(6,12)
 0a50 3d28362c 32290069 6e745f6c 65617374  =(6,2).int_least
 0a60 31365f74 3a742836 2c313329 3d28362c  16_t:t(6,13)=(6,
 0a70 33290075 696e745f 6c656173 7431365f  3).uint_least16_
 0a80 743a7428 362c3134 293d2836 2c342900  t:t(6,14)=(6,4).
 0a90 696e745f 6c656173 7433325f 743a7428  int_least32_t:t(
 0aa0 362c3135 293d2836 2c352900 75696e74  6,15)=(6,5).uint
 0ab0 5f6c6561 73743332 5f743a74 28362c31  _least32_t:t(6,1
 0ac0 36293d28 362c3629 00696e74 5f6c6561  6)=(6,6).int_lea
 0ad0 73743634 5f743a74 28362c31 37293d28  st64_t:t(6,17)=(
 0ae0 362c3729 0075696e 745f6c65 61737436  6,7).uint_least6
 0af0 345f743a 7428362c 3138293d 28362c38  4_t:t(6,18)=(6,8
 0b00 2900696e 745f6661 7374385f 743a7428  ).int_fast8_t:t(
 0b10 362c3139 293d2836 2c312900 75696e74  6,19)=(6,1).uint
 0b20 5f666173 74385f74 3a742836 2c323029  _fast8_t:t(6,20)
 0b30 3d28362c 32290069 6e745f66 61737431  =(6,2).int_fast1
 0b40 365f743a 7428362c 3231293d 28362c33  6_t:t(6,21)=(6,3
 0b50 29007569 6e745f66 61737431 365f743a  ).uint_fast16_t:
 0b60 7428362c 3232293d 28362c34 2900696e  t(6,22)=(6,4).in
 0b70 745f6661 73743332 5f743a74 28362c32  t_fast32_t:t(6,2
 0b80 33293d28 362c3529 0075696e 745f6661  3)=(6,5).uint_fa
 0b90 73743332 5f743a74 28362c32 34293d28  st32_t:t(6,24)=(
 0ba0 362c3629 00696e74 5f666173 7436345f  6,6).int_fast64_
 0bb0 743a7428 362c3235 293d2836 2c372900  t:t(6,25)=(6,7).
 0bc0 75696e74 5f666173 7436345f 743a7428  uint_fast64_t:t(
 0bd0 362c3236 293d2836 2c382900 696e746d  6,26)=(6,8).intm
 0be0 61785f74 3a742836 2c323729 3d28362c  ax_t:t(6,27)=(6,
 0bf0 37290075 696e746d 61785f74 3a742836  7).uintmax_t:t(6
 0c00 2c323829 3d28362c 38290069 6e745f66  ,28)=(6,8).int_f
 0c10 61727074 725f743a 7428342c 31293d28  arptr_t:t(4,1)=(
 0c20 362c3529 0075696e 745f6661 72707472  6,5).uint_farptr
 0c30 5f743a74 28342c32 293d2836 2c362900  _t:t(4,2)=(6,6).
 0c40 2f757372 2f6c6962 2f617672 2f696e63  /usr/lib/avr/inc
 0c50 6c756465 2f617672 2f667573 652e6800  lude/avr/fuse.h.
 0c60 5f5f6675 73655f74 3a742837 2c31293d  __fuse_t:t(7,1)=
 0c70 28372c32 293d7333 6c6f773a 28302c31  (7,2)=s3low:(0,1
 0c80 33292c30 2c383b68 6967683a 28302c31  3),0,8;high:(0,1
 0c90 33292c38 2c383b65 7874656e 6465643a  3),8,8;extended:
 0ca0 28302c31 33292c31 362c383b 3b002f75  (0,13),16,8;;./u
 0cb0 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 0cc0 64652f61 76722f70 676d7370 6163652e  de/avr/pgmspace.
 0cd0 68002f75 73722f6c 69622f67 63632f61  h./usr/lib/gcc/a
 0ce0 76722f35 2e342e30 2f696e63 6c756465  vr/5.4.0/include
 0cf0 2f737464 6465662e 68007369 7a655f74  /stddef.h.size_t
 0d00 3a742839 2c31293d 28302c34 29002f75  :t(9,1)=(0,4)./u
 0d10 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 0d20 64652f73 7464696f 2e68002f 7573722f  de/stdio.h./usr/
 0d30 6c69622f 6763632f 6176722f 352e342e  lib/gcc/avr/5.4.
 0d40 302f696e 636c7564 652f7374 64617267  0/include/stdarg
 0d50 2e68005f 5f676e75 635f7661 5f6c6973  .h.__gnuc_va_lis
 0d60 743a7428 31312c31 293d2831 312c3229  t:t(11,1)=(11,2)
 0d70 3d2a2830 2c343929 0076615f 6c697374  =*(0,49).va_list
 0d80 3a742831 312c3329 3d283131 2c312900  :t(11,3)=(11,1).
 0d90 5f5f6669 6c653a54 2831302c 31293d73  __file:T(10,1)=s
 0da0 31346275 663a2831 302c3229 3d2a2830  14buf:(10,2)=*(0
 0db0 2c32292c 302c3136 3b756e67 65743a28  ,2),0,16;unget:(
 0dc0 302c3133 292c3136 2c383b66 6c616773  0,13),16,8;flags
 0dd0 3a28362c 32292c32 342c383b 73697a65  :(6,2),24,8;size
 0de0 3a28302c 31292c33 322c3136 3b6c656e  :(0,1),32,16;len
 0df0 3a28302c 31292c34 382c3136 3b707574  :(0,1),48,16;put
 0e00 3a283130 2c33293d 2a283130 2c34293d  :(10,3)=*(10,4)=
 0e10 6628302c 31292c36 342c3136 3b676574  f(0,1),64,16;get
 0e20 3a283130 2c35293d 2a283130 2c36293d  :(10,5)=*(10,6)=
 0e30 6628302c 31292c38 302c3136 3b756461  f(0,1),80,16;uda
 0e40 74613a28 31302c37 293d2a28 302c3439  ta:(10,7)=*(0,49
 0e50 292c3936 2c31363b 3b004649 4c453a74  ),96,16;;.FILE:t
 0e60 2831302c 38293d28 31302c31 29006670  (10,8)=(10,1).fp
 0e70 6f735f74 3a742831 302c3929 3d28302c  os_t:t(10,9)=(0,
 0e80 3829006d 61696e3a 4628302c 3129002f  8).main:F(0,1)./
 0e90 7573722f 6c69622f 6176722f 696e636c  usr/lib/avr/incl
 0ea0 7564652f 7574696c 2f64656c 61792e68  ude/util/delay.h
 0eb0 00693263 2e630069 32635f69 6e69743a  .i2c.c.i2c_init:
 0ec0 4628302c 34392900 6932635f 6d65616e  F(0,49).i2c_mean
 0ed0 696e6766 756c5f73 74617475 733a4628  ingful_status:F(
 0ee0 302c3439 29007374 61747573 3a502835  0,49).status:P(5
 0ef0 2c322900 6932635f 73746172 743a4628  ,2).i2c_start:F(
 0f00 302c3439 29006932 635f7374 6f703a46  0,49).i2c_stop:F
 0f10 28302c34 39290069 32635f67 65745f73  (0,49).i2c_get_s
 0f20 74617475 733a4628 352c3229 00693263  tatus:F(5,2).i2c
 0f30 5f786d69 745f6164 64723a46 28302c34  _xmit_addr:F(0,4
 0f40 39290065 6570726f 6d5f6164 64723a50  9).eeprom_addr:P
 0f50 28352c32 29006932 635f7277 3a502835  (5,2).i2c_rw:P(5
 0f60 2c322900 6932635f 786d6974 5f627974  ,2).i2c_xmit_byt
 0f70 653a4628 302c3439 29006279 74653a50  e:F(0,49).byte:P
 0f80 28352c32 29006565 70726f6d 5f776169  (5,2).eeprom_wai
 0f90 745f756e 74696c5f 77726974 655f636f  t_until_write_co
 0fa0 6d706c65 74653a46 28302c34 39290065  mplete:F(0,49).e
 0fb0 6570726f 6d5f7772 6974655f 62797465  eprom_write_byte
 0fc0 3a462830 2c343929 00636f6e 74726f6c  :F(0,49).control
 0fd0 52656769 73746572 3a502835 2c322900  Register:P(5,2).
 0fe0 73657269 616c2e63 00756172 745f7075  serial.c.uart_pu
 0ff0 74636861 723a4628 302c3129 00636872  tchar:F(0,1).chr
 1000 3a502830 2c322900 73747265 616d3a50  :P(0,2).stream:P
 1010 28302c35 30293d2a 28372c38 29007561  (0,50)=*(7,8).ua
 1020 72745f69 6e69743a 4628302c 34392900  rt_init:F(0,49).
 1030 75617274 5f676574 63686172 3a462830  uart_getchar:F(0
 1040 2c322900 75617274 5f737464 6f75743a  ,2).uart_stdout:
 1050 5328372c 382900                      S(7,8).         
Contents of section .comment:
 0000 4743433a 2028474e 55292035 2e342e30  GCC: (GNU) 5.4.0
 0010 00                                   .               
Contents of section .note.gnu.avr.deviceinfo:
 0000 04000000 2d000000 01000000 41565200  ....-.......AVR.
 0010 00000000 00800000 00010000 00080000  ................
 0020 00000000 00040000 08000000 01000000  ................
 0030 0061746d 65676133 32387000 00000000  .atmega328p.....
Contents of section .debug_info:
 0000 f0050000 02000000 00000401 00000000  ................
 0010 00000000 020f0000 00010803 17000000  ................
 0020 02070414 00000005 1b000000 ff030006  ................
 0030 20000000 00002200 00000105 03000081   .....".........
 0040 00072900 00000000 14000000 010503c6  ..).............
 0050 00800008 2e000000 00001400 00000105  ................
 0060 03c00080 00093500 00000000 14000000  ......5.........
 0070 010503c1 0080000a 3c000000 00001400  ........<.......
 0080 00000105 03c20080 000b4300 00000000  ..........C.....
 0090 1b000000 010503c4 0080000c 49000000  ............I...
 00a0 00001400 00000105 03bd0080 000d4f00  ..............O.
 00b0 00000000 14000000 010503b8 0080000e  ................
 00c0 54000000 00001400 00000105 03bc0080  T...............
 00d0 000f5900 00000000 14000000 010503b9  ..Y.............
 00e0 00800010 5e000000 00001400 00000105  ....^...........
 00f0 03bb0080 00116300 00000000 14000000  ......c.........
 0100 010503ba 00800012 68000000 00001400  ........h.......
 0110 00000105 036f0080 00136f00 00000000  .....o....o.....
 0120 14000000 01050336 00800014 75000000  .......6....u...
 0130 00001400 00000105 03800080 00157c00  ..............|.
 0140 00000000 14000000 01050381 00800016  ................
 0150 83000000 00001400 00000105 03820080  ................
 0160 00178a00 00000000 1b000000 01050384  ................
 0170 00800018 90000000 00001b00 00000105  ................
 0180 03880080 00199600 00000000 1b000000  ................
 0190 0105038a 0080001a 9c000000 00001b00  ................
 01a0 00000105 03860080 001ba100 00000000  ................
 01b0 14000000 01050343 0080001c a7000000  .......C........
 01c0 00001400 00000105 03700080 001dae00  .........p......
 01d0 00000000 14000000 01050337 0080001e  ...........7....
 01e0 b4000000 00001400 00000105 03b00080  ................
 01f0 001fbb00 00000000 14000000 010503b1  ................
 0200 00800020 c2000000 00001400 00000105  ... ............
 0210 03b20080 0021c800 00000000 14000000  .....!..........
 0220 010503b4 00800022 ce000000 00001400  ......."........
 0230 00000105 03b30080 0023d400 00000000  .........#......
 0240 14000000 010503b6 00800024 d9000000  ...........$....
 0250 00001400 00000105 03430080 0025df00  .........C...%..
 0260 00000000 14000000 0105037c 00800026  ...........|...&
 0270 e5000000 00001b00 00000105 03780080  .............x..
 0280 0027e900 00000000 14000000 0105037a  .'.............z
 0290 00800028 f0000000 00001400 00000105  ...(............
 02a0 037b0080 0029f700 00000000 14000000  .{...)..........
 02b0 0105037e 0080002a fd000000 00001400  ...~...*........
 02c0 00000105 03500080 002b0201 00000000  .....P...+......
 02d0 14000000 0105037f 0080002c 08010000  ...........,....
 02e0 00001400 00000105 03250080 002d0e01  .........%...-..
 02f0 00000000 14000000 01050324 0080002e  ...........$....
 0300 13010000 00001400 00000105 03230080  .............#..
 0310 002f1801 00000000 14000000 01050328  ./.............(
 0320 00800030 1e010000 00001400 00000105  ...0............
 0330 03270080 00312301 00000000 14000000  .'...1#.........
 0340 01050326 00800032 28010000 00001400  ...&...2(.......
 0350 00000105 032b0080 00332e01 00000000  .....+...3......
 0360 14000000 0105032a 00800034 33010000  .......*...43...
 0370 00001400 00000105 03290080 00353801  .........)...58.
 0380 00000000 14000000 01050348 00800036  ...........H...6
 0390 3e010000 00001400 00000105 03470080  >............G..
 03a0 00374401 00000000 14000000 01050346  .7D............F
 03b0 00800038 4a010000 00001400 00000105  ...8J...........
 03c0 03450080 00395101 00000000 14000000  .E...9Q.........
 03d0 01050344 0080003a 58010000 00001400  ...D...:X.......
 03e0 00000105 036e0080 003b5f01 00000000  .....n...;_.....
 03f0 14000000 01050335 0080003c 65010000  .......5...<e...
 0400 00001400 00000105 03430080 003d6b01  .........C...=k.
 0410 00000000 14000000 01050369 0080003e  ...........i...>
 0420 71010000 00001400 00000105 033d0080  q............=..
 0430 003f7701 00000000 14000000 0105033c  .?w............<
 0440 00800040 7c010000 00001400 00000105  ...@|...........
 0450 03680080 00418201 00000000 14000000  .h...A..........
 0460 0105036d 00800042 89010000 00001400  ...m...B........
 0470 00000105 036c0080 00439001 00000000  .....l...C......
 0480 14000000 0105036b 00800044 97010000  .......k...D....
 0490 00001400 00000105 033b0080 00459d01  .........;...E..
 04a0 00000000 14000000 0105034e 00800046  ...........N...F
 04b0 a2010000 00001400 00000105 034d0080  .............M..
 04c0 0047a701 00000000 14000000 0105034c  .G.............L
 04d0 00800048 ac010000 00001400 00000105  ...H............
 04e0 03600080 0049b301 00000000 14000000  .`...I..........
 04f0 01050364 0080004a b7010000 00001400  ...d...J........
 0500 00000105 03660080 004bbe01 00000000  .....f...K......
 0510 14000000 01050361 0080004c c4010000  .......a...L....
 0520 00001400 00000105 035f0080 004dc901  ........._...M..
 0530 00000000 1b000000 0105035d 0080004e  ...........]...N
 0540 cc010000 00001400 00000105 03570080  .............W..
 0550 004fd301 00000000 14000000 01050355  .O.............U
 0560 00800050 d9010000 00001400 00000105  ...P............
 0570 03540080 0051df01 00000000 14000000  .T...Q..........
 0580 01050353 00800052 e4010000 00001400  ...S...R........
 0590 00000105 034b0080 0053eb01 00000000  .....K...S......
 05a0 14000000 0105034a 00800054 f2010000  .......J...T....
 05b0 00001400 00000105 033e0080 0055f901  .........>...U..
 05c0 00000000 1b000000 01050341 00800056  ...........A...V
 05d0 fe010000 00001400 00000105 03400080  .............@..
 05e0 00570302 00000000 14000000 0105033f  .W.............?
 05f0 00800000                             ....            
Contents of section .debug_abbrev:
 0000 01110125 0e100600 00022400 030e0b0b  ...%......$.....
 0010 3e0b0000 03240003 0e0b0b3e 0b000004  >....$.....>....
 0020 01014913 00000521 0049132f 05000006  ..I....!.I./....
 0030 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0040 07340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0050 00083400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0060 00000934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0070 0a00000a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0080 020a0000 0b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 0090 0c020a00 000c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 00a0 3f0c020a 00000d34 00030e3a 0b3b0b49  ?......4...:.;.I
 00b0 133f0c02 0a00000e 3400030e 3a0b3b0b  .?......4...:.;.
 00c0 49133f0c 020a0000 0f340003 0e3a0b3b  I.?......4...:.;
 00d0 0b49133f 0c020a00 00103400 030e3a0b  .I.?......4...:.
 00e0 3b0b4913 3f0c020a 00001134 00030e3a  ;.I.?......4...:
 00f0 0b3b0b49 133f0c02 0a000012 3400030e  .;.I.?......4...
 0100 3a0b3b0b 49133f0c 020a0000 13340003  :.;.I.?......4..
 0110 0e3a0b3b 0b49133f 0c020a00 00143400  .:.;.I.?......4.
 0120 030e3a0b 3b0b4913 3f0c020a 00001534  ..:.;.I.?......4
 0130 00030e3a 0b3b0b49 133f0c02 0a000016  ...:.;.I.?......
 0140 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0150 17340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0160 00183400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0170 00001934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0180 0a00001a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0190 020a0000 1b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 01a0 0c020a00 001c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 01b0 3f0c020a 00001d34 00030e3a 0b3b0b49  ?......4...:.;.I
 01c0 133f0c02 0a00001e 3400030e 3a0b3b0b  .?......4...:.;.
 01d0 49133f0c 020a0000 1f340003 0e3a0b3b  I.?......4...:.;
 01e0 0b49133f 0c020a00 00203400 030e3a0b  .I.?..... 4...:.
 01f0 3b0b4913 3f0c020a 00002134 00030e3a  ;.I.?.....!4...:
 0200 0b3b0b49 133f0c02 0a000022 3400030e  .;.I.?....."4...
 0210 3a0b3b0b 49133f0c 020a0000 23340003  :.;.I.?.....#4..
 0220 0e3a0b3b 0b49133f 0c020a00 00243400  .:.;.I.?.....$4.
 0230 030e3a0b 3b0b4913 3f0c020a 00002534  ..:.;.I.?.....%4
 0240 00030e3a 0b3b0b49 133f0c02 0a000026  ...:.;.I.?.....&
 0250 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0260 27340003 0e3a0b3b 0b49133f 0c020a00  '4...:.;.I.?....
 0270 00283400 030e3a0b 3b0b4913 3f0c020a  .(4...:.;.I.?...
 0280 00002934 00030e3a 0b3b0b49 133f0c02  ..)4...:.;.I.?..
 0290 0a00002a 3400030e 3a0b3b0b 49133f0c  ...*4...:.;.I.?.
 02a0 020a0000 2b340003 0e3a0b3b 0b49133f  ....+4...:.;.I.?
 02b0 0c020a00 002c3400 030e3a0b 3b0b4913  .....,4...:.;.I.
 02c0 3f0c020a 00002d34 00030e3a 0b3b0b49  ?.....-4...:.;.I
 02d0 133f0c02 0a00002e 3400030e 3a0b3b0b  .?......4...:.;.
 02e0 49133f0c 020a0000 2f340003 0e3a0b3b  I.?...../4...:.;
 02f0 0b49133f 0c020a00 00303400 030e3a0b  .I.?.....04...:.
 0300 3b0b4913 3f0c020a 00003134 00030e3a  ;.I.?.....14...:
 0310 0b3b0b49 133f0c02 0a000032 3400030e  .;.I.?.....24...
 0320 3a0b3b0b 49133f0c 020a0000 33340003  :.;.I.?.....34..
 0330 0e3a0b3b 0b49133f 0c020a00 00343400  .:.;.I.?.....44.
 0340 030e3a0b 3b0b4913 3f0c020a 00003534  ..:.;.I.?.....54
 0350 00030e3a 0b3b0b49 133f0c02 0a000036  ...:.;.I.?.....6
 0360 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0370 37340003 0e3a0b3b 0b49133f 0c020a00  74...:.;.I.?....
 0380 00383400 030e3a0b 3b0b4913 3f0c020a  .84...:.;.I.?...
 0390 00003934 00030e3a 0b3b0b49 133f0c02  ..94...:.;.I.?..
 03a0 0a00003a 3400030e 3a0b3b0b 49133f0c  ...:4...:.;.I.?.
 03b0 020a0000 3b340003 0e3a0b3b 0b49133f  ....;4...:.;.I.?
 03c0 0c020a00 003c3400 030e3a0b 3b0b4913  .....<4...:.;.I.
 03d0 3f0c020a 00003d34 00030e3a 0b3b0b49  ?.....=4...:.;.I
 03e0 133f0c02 0a00003e 3400030e 3a0b3b0b  .?.....>4...:.;.
 03f0 49133f0c 020a0000 3f340003 0e3a0b3b  I.?.....?4...:.;
 0400 0b49133f 0c020a00 00403400 030e3a0b  .I.?.....@4...:.
 0410 3b0b4913 3f0c020a 00004134 00030e3a  ;.I.?.....A4...:
 0420 0b3b0b49 133f0c02 0a000042 3400030e  .;.I.?.....B4...
 0430 3a0b3b0b 49133f0c 020a0000 43340003  :.;.I.?.....C4..
 0440 0e3a0b3b 0b49133f 0c020a00 00443400  .:.;.I.?.....D4.
 0450 030e3a0b 3b0b4913 3f0c020a 00004534  ..:.;.I.?.....E4
 0460 00030e3a 0b3b0b49 133f0c02 0a000046  ...:.;.I.?.....F
 0470 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0480 47340003 0e3a0b3b 0b49133f 0c020a00  G4...:.;.I.?....
 0490 00483400 030e3a0b 3b0b4913 3f0c020a  .H4...:.;.I.?...
 04a0 00004934 00030e3a 0b3b0b49 133f0c02  ..I4...:.;.I.?..
 04b0 0a00004a 3400030e 3a0b3b0b 49133f0c  ...J4...:.;.I.?.
 04c0 020a0000 4b340003 0e3a0b3b 0b49133f  ....K4...:.;.I.?
 04d0 0c020a00 004c3400 030e3a0b 3b0b4913  .....L4...:.;.I.
 04e0 3f0c020a 00004d34 00030e3a 0b3b0b49  ?.....M4...:.;.I
 04f0 133f0c02 0a00004e 3400030e 3a0b3b0b  .?.....N4...:.;.
 0500 49133f0c 020a0000 4f340003 0e3a0b3b  I.?.....O4...:.;
 0510 0b49133f 0c020a00 00503400 030e3a0b  .I.?.....P4...:.
 0520 3b0b4913 3f0c020a 00005134 00030e3a  ;.I.?.....Q4...:
 0530 0b3b0b49 133f0c02 0a000052 3400030e  .;.I.?.....R4...
 0540 3a0b3b0b 49133f0c 020a0000 53340003  :.;.I.?.....S4..
 0550 0e3a0b3b 0b49133f 0c020a00 00543400  .:.;.I.?.....T4.
 0560 030e3a0b 3b0b4913 3f0c020a 00005534  ..:.;.I.?.....U4
 0570 00030e3a 0b3b0b49 133f0c02 0a000056  ...:.;.I.?.....V
 0580 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0590 57340003 0e3a0b3b 0b49133f 0c020a00  W4...:.;.I.?....
 05a0 0000                                 ..              
Contents of section .debug_line:
 0000 16000000 02001000 00000201 fb0e0a00  ................
 0010 01010101 00000001 0000               ..........      
Contents of section .debug_str:
 0000 6176722d 6c696263 20322e30 2e300075  avr-libc 2.0.0.u
 0010 696e7438 5f740075 696e7431 365f7400  int8_t.uint16_t.
 0020 5f5f6565 70726f6d 00554452 30005543  __eeprom.UDR0.UC
 0030 53523041 00554353 52304200 55435352  SR0A.UCSR0B.UCSR
 0040 30430055 42525230 00545741 4d520054  0C.UBRR0.TWAMR.T
 0050 57425200 54574352 00545753 52005457  WBR.TWCR.TWSR.TW
 0060 44520054 57415200 54494d53 4b310054  DR.TWAR.TIMSK1.T
 0070 49465231 00544343 52314100 54434352  IFR1.TCCR1A.TCCR
 0080 31420054 43435231 43005443 4e543100  1B.TCCR1C.TCNT1.
 0090 4f435231 41004f43 52314200 49435231  OCR1A.OCR1B.ICR1
 00a0 00475443 43520054 494d534b 32005449  .GTCCR.TIMSK2.TI
 00b0 46523200 54434352 32410054 43435232  FR2.TCCR2A.TCCR2
 00c0 42005443 4e543200 4f435232 42004f43  B.TCNT2.OCR2B.OC
 00d0 52324100 41535352 00475443 43520041  R2A.ASSR.GTCCR.A
 00e0 444d5558 00414443 00414443 53524100  DMUX.ADC.ADCSRA.
 00f0 41444353 52420044 49445230 00414353  ADCSRB.DIDR0.ACS
 0100 52004449 44523100 504f5254 42004444  R.DIDR1.PORTB.DD
 0110 52420050 494e4200 504f5254 43004444  RB.PINB.PORTC.DD
 0120 52430050 494e4300 504f5254 44004444  RC.PINC.PORTD.DD
 0130 52440050 494e4400 4f435230 42004f43  RD.PIND.OCR0B.OC
 0140 52304100 54434e54 30005443 43523042  R0A.TCNT0.TCCR0B
 0150 00544343 52304100 54494d53 4b300054  .TCCR0A.TIMSK0.T
 0160 49465230 00475443 43520045 49435241  IFR0.GTCCR.EICRA
 0170 0045494d 534b0045 49465200 50434943  .EIMSK.EIFR.PCIC
 0180 52005043 4d534b32 0050434d 534b3100  R.PCMSK2.PCMSK1.
 0190 50434d53 4b300050 43494652 00535044  PCMSK0.PCIFR.SPD
 01a0 52005350 53520053 50435200 57445443  R.SPSR.SPCR.WDTC
 01b0 53520050 5252004f 53434341 4c00434c  SR.PRR.OSCCAL.CL
 01c0 4b505200 53524547 00535000 53504d43  KPR.SREG.SP.SPMC
 01d0 5352004d 43554352 004d4355 53520053  SR.MCUCR.MCUSR.S
 01e0 4d435200 4750494f 52320047 50494f52  MCR.GPIOR2.GPIOR
 01f0 31004750 494f5230 00454541 52004545  1.GPIOR0.EEAR.EE
 0200 44520045 45435200                    DR.EECR.        

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 00 01 	jmp	0x200	; 0x200 <__ctors_end>
   4:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
   8:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
   c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  10:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  14:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  18:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  1c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  20:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  24:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  28:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  2c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  30:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  34:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  38:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  3c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  40:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  44:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  48:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  4c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  50:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  54:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  58:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  5c:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  60:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  64:	0c 94 1d 01 	jmp	0x23a	; 0x23a <__bad_interrupt>
  68:	49 01       	movw	r8, r18
  6a:	2f 01       	movw	r4, r30
  6c:	2f 01       	movw	r4, r30
  6e:	2f 01       	movw	r4, r30
  70:	2f 01       	movw	r4, r30
  72:	2f 01       	movw	r4, r30
  74:	2f 01       	movw	r4, r30
  76:	2f 01       	movw	r4, r30
  78:	52 01       	movw	r10, r4
  7a:	2f 01       	movw	r4, r30
  7c:	2f 01       	movw	r4, r30
  7e:	2f 01       	movw	r4, r30
  80:	2f 01       	movw	r4, r30
  82:	2f 01       	movw	r4, r30
  84:	2f 01       	movw	r4, r30
  86:	2f 01       	movw	r4, r30
  88:	5b 01       	movw	r10, r22
  8a:	2f 01       	movw	r4, r30
  8c:	2f 01       	movw	r4, r30
  8e:	2f 01       	movw	r4, r30
  90:	2f 01       	movw	r4, r30
  92:	2f 01       	movw	r4, r30
  94:	2f 01       	movw	r4, r30
  96:	2f 01       	movw	r4, r30
  98:	64 01       	movw	r12, r8
  9a:	2f 01       	movw	r4, r30
  9c:	2f 01       	movw	r4, r30
  9e:	2f 01       	movw	r4, r30
  a0:	2f 01       	movw	r4, r30
  a2:	2f 01       	movw	r4, r30
  a4:	2f 01       	movw	r4, r30
  a6:	2f 01       	movw	r4, r30
  a8:	6d 01       	movw	r12, r26
  aa:	2f 01       	movw	r4, r30
  ac:	2f 01       	movw	r4, r30
  ae:	2f 01       	movw	r4, r30
  b0:	2f 01       	movw	r4, r30
  b2:	2f 01       	movw	r4, r30
  b4:	2f 01       	movw	r4, r30
  b6:	2f 01       	movw	r4, r30
  b8:	76 01       	movw	r14, r12
  ba:	2f 01       	movw	r4, r30
  bc:	2f 01       	movw	r4, r30
  be:	2f 01       	movw	r4, r30
  c0:	2f 01       	movw	r4, r30
  c2:	2f 01       	movw	r4, r30
  c4:	2f 01       	movw	r4, r30
  c6:	2f 01       	movw	r4, r30
  c8:	7f 01       	movw	r14, r30
  ca:	2f 01       	movw	r4, r30
  cc:	2f 01       	movw	r4, r30
  ce:	2f 01       	movw	r4, r30
  d0:	2f 01       	movw	r4, r30
  d2:	2f 01       	movw	r4, r30
  d4:	2f 01       	movw	r4, r30
  d6:	2f 01       	movw	r4, r30
  d8:	88 01       	movw	r16, r16
  da:	2f 01       	movw	r4, r30
  dc:	2f 01       	movw	r4, r30
  de:	2f 01       	movw	r4, r30
  e0:	2f 01       	movw	r4, r30
  e2:	2f 01       	movw	r4, r30
  e4:	2f 01       	movw	r4, r30
  e6:	2f 01       	movw	r4, r30
  e8:	91 01       	movw	r18, r2
  ea:	2f 01       	movw	r4, r30
  ec:	2f 01       	movw	r4, r30
  ee:	2f 01       	movw	r4, r30
  f0:	2f 01       	movw	r4, r30
  f2:	2f 01       	movw	r4, r30
  f4:	2f 01       	movw	r4, r30
  f6:	2f 01       	movw	r4, r30
  f8:	9a 01       	movw	r18, r20
  fa:	2f 01       	movw	r4, r30
  fc:	2f 01       	movw	r4, r30
  fe:	2f 01       	movw	r4, r30
 100:	2f 01       	movw	r4, r30
 102:	2f 01       	movw	r4, r30
 104:	2f 01       	movw	r4, r30
 106:	2f 01       	movw	r4, r30
 108:	40 01       	movw	r8, r0

0000010a <__trampolines_end>:
 10a:	2d 2d       	mov	r18, r13
 10c:	2d 2d       	mov	r18, r13
 10e:	2d 2d       	mov	r18, r13
 110:	4f 46       	sbci	r20, 0x6F	; 111
 112:	46 20       	and	r4, r6
 114:	48 49       	sbci	r20, 0x98	; 152
 116:	47 48       	sbci	r20, 0x87	; 135
 118:	2d 2d       	mov	r18, r13
 11a:	2d 2d       	mov	r18, r13
 11c:	2d 2d       	mov	r18, r13
 11e:	0a 00       	.word	0x000a	; ????

00000120 <__c.2255>:
 120:	2d 2d 2d 2d 2d 2d 4f 46 46 20 4c 4f 57 2d 2d 2d     ------OFF LOW---
 130:	2d 2d 2d 0a 00                                      ---..

00000135 <__c.2253>:
 135:	2d 2d 2d 2d 2d 2d 4f 4e 20 48 49 47 48 2d 2d 2d     ------ON HIGH---
 145:	2d 2d 2d 0a 00                                      ---..

0000014a <__c.2251>:
 14a:	2d 2d 2d 2d 2d 2d 4f 4e 20 4c 4f 57 2d 2d 2d 2d     ------ON LOW----
 15a:	2d 2d 0a 00                                         --..

0000015e <__c.2289>:
 15e:	4e 2f 41 20 25 30 32 58 0a 00                       N/A %02X..

00000168 <__c.2286>:
 168:	4d 52 20 44 41 54 41 2b 52 2c 20 4e 41 4b 0a 00     MR DATA+R, NAK..

00000178 <__c.2283>:
 178:	4d 52 20 44 41 54 41 2b 52 2c 20 41 43 4b 0a 00     MR DATA+R, ACK..

00000188 <__c.2280>:
 188:	4d 52 20 53 4c 41 2b 52 2c 20 4e 41 4b 0a 00        MR SLA+R, NAK..

00000197 <__c.2277>:
 197:	4d 52 20 53 4c 41 2b 52 2c 20 41 43 4b 0a 00        MR SLA+R, ACK..

000001a6 <__c.2274>:
 1a6:	4d 54 20 44 41 54 41 2b 57 2c 20 4e 41 4b 0a 00     MT DATA+W, NAK..

000001b6 <__c.2271>:
 1b6:	4d 54 20 44 41 54 41 2b 57 2c 20 41 43 4b 0a 00     MT DATA+W, ACK..

000001c6 <__c.2268>:
 1c6:	4d 54 20 53 4c 41 2b 57 2c 20 4e 41 4b 0a 00        MT SLA+W, NAK..

000001d5 <__c.2265>:
 1d5:	4d 54 20 53 4c 41 2b 57 2c 20 41 43 4b 0a 00        MT SLA+W, ACK..

000001e4 <__c.2262>:
 1e4:	4e 4f 41 52 42 2f 4e 41 4b 0a 00                    NOARB/NAK..

000001ef <__c.2259>:
 1ef:	52 45 53 54 41 52 54 0a 00                          RESTART..

000001f8 <__c.2255>:
 1f8:	53 54 41 52 54 0a 00 00                             START...

00000200 <__ctors_end>:
 200:	11 24       	eor	r1, r1
 202:	1f be       	out	0x3f, r1	; 63
 204:	cf ef       	ldi	r28, 0xFF	; 255
 206:	d8 e0       	ldi	r29, 0x08	; 8
 208:	de bf       	out	0x3e, r29	; 62
 20a:	cd bf       	out	0x3d, r28	; 61

0000020c <__do_copy_data>:
 20c:	11 e0       	ldi	r17, 0x01	; 1
 20e:	a0 e0       	ldi	r26, 0x00	; 0
 210:	b1 e0       	ldi	r27, 0x01	; 1
 212:	e2 e7       	ldi	r30, 0x72	; 114
 214:	fb e0       	ldi	r31, 0x0B	; 11
 216:	02 c0       	rjmp	.+4      	; 0x21c <__do_copy_data+0x10>
 218:	05 90       	lpm	r0, Z+
 21a:	0d 92       	st	X+, r0
 21c:	ae 30       	cpi	r26, 0x0E	; 14
 21e:	b1 07       	cpc	r27, r17
 220:	d9 f7       	brne	.-10     	; 0x218 <__do_copy_data+0xc>

00000222 <__do_clear_bss>:
 222:	21 e0       	ldi	r18, 0x01	; 1
 224:	ae e0       	ldi	r26, 0x0E	; 14
 226:	b1 e0       	ldi	r27, 0x01	; 1
 228:	01 c0       	rjmp	.+2      	; 0x22c <.do_clear_bss_start>

0000022a <.do_clear_bss_loop>:
 22a:	1d 92       	st	X+, r1

0000022c <.do_clear_bss_start>:
 22c:	a4 31       	cpi	r26, 0x14	; 20
 22e:	b2 07       	cpc	r27, r18
 230:	e1 f7       	brne	.-8      	; 0x22a <.do_clear_bss_loop>
 232:	0e 94 79 02 	call	0x4f2	; 0x4f2 <main>
 236:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <_exit>

0000023a <__bad_interrupt>:
 23a:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000023e <i2c_init>:
		Calculation for TWBR:
			SCLfreq = F_CPU / (16 + (2 * TWBR * Prescaler))
			100 000 = 16 000 000 / (16 + (2 * TWBR * 1)
			TWBR = 72 = 0x48
	*/
	TWCR = (1 << TWEN);
 23e:	84 e0       	ldi	r24, 0x04	; 4
 240:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	TWSR = 0x00;
 244:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>

	TWBR = 0x48;
 248:	88 e4       	ldi	r24, 0x48	; 72
 24a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
 24e:	08 95       	ret

00000250 <i2c_meaningful_status>:

void i2c_meaningful_status(uint8_t status) {
	/*
		Status of the TWI logic
	*/
	switch (status) {
 250:	48 2f       	mov	r20, r24
 252:	50 e0       	ldi	r21, 0x00	; 0
 254:	fa 01       	movw	r30, r20
 256:	38 97       	sbiw	r30, 0x08	; 8
 258:	e1 35       	cpi	r30, 0x51	; 81
 25a:	f1 05       	cpc	r31, r1
 25c:	68 f0       	brcs	.+26     	; 0x278 <i2c_meaningful_status+0x28>
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
		break;
	default:
		printf_P(PSTR("N/A %02X\n"), status);
 25e:	1f 92       	push	r1
 260:	8f 93       	push	r24
 262:	8e e5       	ldi	r24, 0x5E	; 94
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	9f 93       	push	r25
 268:	8f 93       	push	r24
 26a:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	0f 90       	pop	r0
 274:	0f 90       	pop	r0
 276:	08 95       	ret

void i2c_meaningful_status(uint8_t status) {
	/*
		Status of the TWI logic
	*/
	switch (status) {
 278:	ec 5c       	subi	r30, 0xCC	; 204
 27a:	ff 4f       	sbci	r31, 0xFF	; 255
 27c:	0c 94 c3 02 	jmp	0x586	; 0x586 <__tablejump2__>
		break;
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
 280:	88 e6       	ldi	r24, 0x68	; 104
 282:	91 e0       	ldi	r25, 0x01	; 1
 284:	9f 93       	push	r25
 286:	8f 93       	push	r24
 288:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 28c:	0f 90       	pop	r0
 28e:	0f 90       	pop	r0
 290:	08 95       	ret
	/*
		Status of the TWI logic
	*/
	switch (status) {
	case 0x08: // START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("START\n"));
 292:	88 ef       	ldi	r24, 0xF8	; 248
 294:	91 e0       	ldi	r25, 0x01	; 1
 296:	9f 93       	push	r25
 298:	8f 93       	push	r24
 29a:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 29e:	0f 90       	pop	r0
 2a0:	0f 90       	pop	r0
 2a2:	08 95       	ret
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
 2a4:	8f ee       	ldi	r24, 0xEF	; 239
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	9f 93       	push	r25
 2aa:	8f 93       	push	r24
 2ac:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 2b0:	0f 90       	pop	r0
 2b2:	0f 90       	pop	r0
 2b4:	08 95       	ret
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
		break;
		// MASTER TRANSMIT
	case 0x18: // SLA+W transmitted, ACK received
		printf_P(PSTR("MT SLA+W, ACK\n"));
 2b6:	85 ed       	ldi	r24, 0xD5	; 213
 2b8:	91 e0       	ldi	r25, 0x01	; 1
 2ba:	9f 93       	push	r25
 2bc:	8f 93       	push	r24
 2be:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	08 95       	ret
	case 0x20: // SLA+W transmitted, NAK received
		printf_P(PSTR("MT SLA+W, NAK\n"));
 2c8:	86 ec       	ldi	r24, 0xC6	; 198
 2ca:	91 e0       	ldi	r25, 0x01	; 1
 2cc:	9f 93       	push	r25
 2ce:	8f 93       	push	r24
 2d0:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 2d4:	0f 90       	pop	r0
 2d6:	0f 90       	pop	r0
 2d8:	08 95       	ret
	case 0x28: // DATA transmitted, ACK received
		printf_P(PSTR("MT DATA+W, ACK\n"));
 2da:	86 eb       	ldi	r24, 0xB6	; 182
 2dc:	91 e0       	ldi	r25, 0x01	; 1
 2de:	9f 93       	push	r25
 2e0:	8f 93       	push	r24
 2e2:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 2e6:	0f 90       	pop	r0
 2e8:	0f 90       	pop	r0
 2ea:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
 2ec:	86 ea       	ldi	r24, 0xA6	; 166
 2ee:	91 e0       	ldi	r25, 0x01	; 1
 2f0:	9f 93       	push	r25
 2f2:	8f 93       	push	r24
 2f4:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 2f8:	0f 90       	pop	r0
 2fa:	0f 90       	pop	r0
 2fc:	08 95       	ret
		break;
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
		break;
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
 2fe:	84 ee       	ldi	r24, 0xE4	; 228
 300:	91 e0       	ldi	r25, 0x01	; 1
 302:	9f 93       	push	r25
 304:	8f 93       	push	r24
 306:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 30a:	0f 90       	pop	r0
 30c:	0f 90       	pop	r0
 30e:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
		break;
		// MASTER RECEIVE
	case 0x40: // SLA+R transmitted, ACK received
		printf_P(PSTR("MR SLA+R, ACK\n"));
 310:	87 e9       	ldi	r24, 0x97	; 151
 312:	91 e0       	ldi	r25, 0x01	; 1
 314:	9f 93       	push	r25
 316:	8f 93       	push	r24
 318:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 31c:	0f 90       	pop	r0
 31e:	0f 90       	pop	r0
 320:	08 95       	ret
	case 0x48: // SLA+R transmitted, NAK received
		printf_P(PSTR("MR SLA+R, NAK\n"));
 322:	88 e8       	ldi	r24, 0x88	; 136
 324:	91 e0       	ldi	r25, 0x01	; 1
 326:	9f 93       	push	r25
 328:	8f 93       	push	r24
 32a:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 32e:	0f 90       	pop	r0
 330:	0f 90       	pop	r0
 332:	08 95       	ret
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
 334:	88 e7       	ldi	r24, 0x78	; 120
 336:	91 e0       	ldi	r25, 0x01	; 1
 338:	9f 93       	push	r25
 33a:	8f 93       	push	r24
 33c:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
		break;
 340:	0f 90       	pop	r0
 342:	0f 90       	pop	r0
 344:	08 95       	ret

00000346 <i2c_start>:
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 346:	84 ea       	ldi	r24, 0xA4	; 164
 348:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 34c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 350:	87 ff       	sbrs	r24, 7
 352:	fc cf       	rjmp	.-8      	; 0x34c <i2c_start+0x6>
}
 354:	08 95       	ret

00000356 <i2c_stop>:
		TWSTO bit set in TWCR register generates a stop condition on the 2-wire serial bus.
		After stop condition is executed the TWSTO bit is clearead automatically.

		Await until TWSTO bit is cleared
	*/
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 356:	84 e9       	ldi	r24, 0x94	; 148
 358:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while ((TWCR & (1 << TWSTO)));
 35c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 360:	84 fd       	sbrc	r24, 4
 362:	fc cf       	rjmp	.-8      	; 0x35c <i2c_stop+0x6>
}
 364:	08 95       	ret

00000366 <i2c_get_status>:
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 366:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>

	return status;
}
 36a:	88 7f       	andi	r24, 0xF8	; 248
 36c:	08 95       	ret

0000036e <i2c_xmit_addr>:
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (eeprom_addr & 0xfe) | (i2c_rw & 0x01);
 36e:	8e 7f       	andi	r24, 0xFE	; 254
 370:	61 70       	andi	r22, 0x01	; 1
 372:	68 2b       	or	r22, r24
 374:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 378:	84 e8       	ldi	r24, 0x84	; 132
 37a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 37e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 382:	87 ff       	sbrs	r24, 7
 384:	fc cf       	rjmp	.-8      	; 0x37e <i2c_xmit_addr+0x10>
}
 386:	08 95       	ret

00000388 <i2c_xmit_byte>:

		Assign TWDR register with byte to send

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/
	TWDR = byte;
 388:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 38c:	84 e8       	ldi	r24, 0x84	; 132
 38e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 392:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 396:	87 ff       	sbrs	r24, 7
 398:	fc cf       	rjmp	.-8      	; 0x392 <i2c_xmit_byte+0xa>
}
 39a:	08 95       	ret

0000039c <eeprom_wait_until_write_complete>:
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 39c:	34 ea       	ldi	r19, 0xA4	; 164
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (eeprom_addr & 0xfe) | (i2c_rw & 0x01);
 39e:	20 e8       	ldi	r18, 0x80	; 128

	TWCR = (1 << TWINT) | (1 << TWEN);
 3a0:	94 e8       	ldi	r25, 0x84	; 132
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 3a2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 3a6:	88 7f       	andi	r24, 0xF8	; 248
 3a8:	88 31       	cpi	r24, 0x18	; 24
 3aa:	99 f0       	breq	.+38     	; 0x3d2 <eeprom_wait_until_write_complete+0x36>
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 3ac:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 3b0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3b4:	87 ff       	sbrs	r24, 7
 3b6:	fc cf       	rjmp	.-8      	; 0x3b0 <eeprom_wait_until_write_complete+0x14>
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (eeprom_addr & 0xfe) | (i2c_rw & 0x01);
 3b8:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 3bc:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 3c0:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3c4:	87 ff       	sbrs	r24, 7
 3c6:	fc cf       	rjmp	.-8      	; 0x3c0 <eeprom_wait_until_write_complete+0x24>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 3c8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 3cc:	88 7f       	andi	r24, 0xF8	; 248
 3ce:	88 31       	cpi	r24, 0x18	; 24
 3d0:	69 f7       	brne	.-38     	; 0x3ac <eeprom_wait_until_write_complete+0x10>
		i2c_start();
		i2c_xmit_addr(0x80, I2C_W);
	}
}
 3d2:	08 95       	ret

000003d4 <eeprom_write_byte>:

void eeprom_write_byte(uint8_t controlRegister, uint8_t byte) {
 3d4:	cf 93       	push	r28
 3d6:	df 93       	push	r29
 3d8:	d8 2f       	mov	r29, r24
 3da:	c6 2f       	mov	r28, r22
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 3dc:	84 ea       	ldi	r24, 0xA4	; 164
 3de:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 3e2:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3e6:	87 ff       	sbrs	r24, 7
 3e8:	fc cf       	rjmp	.-8      	; 0x3e2 <eeprom_write_byte+0xe>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 3ea:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		Transmit the byte to write

		Stop communication and make sure device is finished with writing.
	*/
	i2c_start();
	i2c_meaningful_status(i2c_get_status());	// START
 3ee:	88 7f       	andi	r24, 0xF8	; 248
 3f0:	0e 94 28 01 	call	0x250	; 0x250 <i2c_meaningful_status>
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (eeprom_addr & 0xfe) | (i2c_rw & 0x01);
 3f4:	80 e8       	ldi	r24, 0x80	; 128
 3f6:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 3fa:	84 e8       	ldi	r24, 0x84	; 132
 3fc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 400:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 404:	87 ff       	sbrs	r24, 7
 406:	fc cf       	rjmp	.-8      	; 0x400 <__LOCK_REGION_LENGTH__>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 408:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		Stop communication and make sure device is finished with writing.
	*/
	i2c_start();
	i2c_meaningful_status(i2c_get_status());	// START
	i2c_xmit_addr(0x80, I2C_W);
	i2c_meaningful_status(i2c_get_status());	// MT SLA + W, ACK
 40c:	88 7f       	andi	r24, 0xF8	; 248
 40e:	0e 94 28 01 	call	0x250	; 0x250 <i2c_meaningful_status>

		Assign TWDR register with byte to send

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/
	TWDR = byte;
 412:	d0 93 bb 00 	sts	0x00BB, r29	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 416:	84 e8       	ldi	r24, 0x84	; 132
 418:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 41c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 420:	87 ff       	sbrs	r24, 7
 422:	fc cf       	rjmp	.-8      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 424:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	i2c_meaningful_status(i2c_get_status());	// START
	i2c_xmit_addr(0x80, I2C_W);
	i2c_meaningful_status(i2c_get_status());	// MT SLA + W, ACK

	i2c_xmit_byte(controlRegister);				
	i2c_meaningful_status(i2c_get_status());	// MT DATA+W, ACK
 428:	88 7f       	andi	r24, 0xF8	; 248
 42a:	0e 94 28 01 	call	0x250	; 0x250 <i2c_meaningful_status>

		Assign TWDR register with byte to send

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/
	TWDR = byte;
 42e:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 432:	84 e8       	ldi	r24, 0x84	; 132
 434:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 438:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 43c:	87 ff       	sbrs	r24, 7
 43e:	fc cf       	rjmp	.-8      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 440:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>

	i2c_xmit_byte(controlRegister);				
	i2c_meaningful_status(i2c_get_status());	// MT DATA+W, ACK

	i2c_xmit_byte(byte);
	i2c_meaningful_status(i2c_get_status());	// MT DATA+W, ACK
 444:	88 7f       	andi	r24, 0xF8	; 248
 446:	0e 94 28 01 	call	0x250	; 0x250 <i2c_meaningful_status>
		TWSTO bit set in TWCR register generates a stop condition on the 2-wire serial bus.
		After stop condition is executed the TWSTO bit is clearead automatically.

		Await until TWSTO bit is cleared
	*/
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 44a:	84 e9       	ldi	r24, 0x94	; 148
 44c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while ((TWCR & (1 << TWSTO)));
 450:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 454:	84 fd       	sbrc	r24, 4
 456:	fc cf       	rjmp	.-8      	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 458:	34 ea       	ldi	r19, 0xA4	; 164
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (eeprom_addr & 0xfe) | (i2c_rw & 0x01);
 45a:	20 e8       	ldi	r18, 0x80	; 128

	TWCR = (1 << TWINT) | (1 << TWEN);
 45c:	94 e8       	ldi	r25, 0x84	; 132
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 45e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 462:	88 7f       	andi	r24, 0xF8	; 248
 464:	88 31       	cpi	r24, 0x18	; 24
 466:	99 f0       	breq	.+38     	; 0x48e <__LOCK_REGION_LENGTH__+0x8e>
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 468:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 46c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 470:	87 ff       	sbrs	r24, 7
 472:	fc cf       	rjmp	.-8      	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (eeprom_addr & 0xfe) | (i2c_rw & 0x01);
 474:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 478:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 47c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 480:	87 ff       	sbrs	r24, 7
 482:	fc cf       	rjmp	.-8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 484:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 488:	88 7f       	andi	r24, 0xF8	; 248
 48a:	88 31       	cpi	r24, 0x18	; 24
 48c:	69 f7       	brne	.-38     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>

	i2c_stop();
	
	eeprom_wait_until_write_complete();
	
}
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	08 95       	ret

00000494 <uart_putchar>:
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);

	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE* stream) {
 494:	cf 93       	push	r28
 496:	c8 2f       	mov	r28, r24
	if (chr == '\n') {
 498:	8a 30       	cpi	r24, 0x0A	; 10
 49a:	51 f0       	breq	.+20     	; 0x4b0 <uart_putchar+0x1c>
		uart_putchar('\r', NULL);
	}
	while (!(UCSR0A & (1 << UDRE0)))
 49c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 4a0:	85 ff       	sbrs	r24, 5
 4a2:	fc cf       	rjmp	.-8      	; 0x49c <uart_putchar+0x8>
		;
	UDR0 = chr;
 4a4:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	cf 91       	pop	r28
 4ae:	08 95       	ret
	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE* stream) {
	if (chr == '\n') {
		uart_putchar('\r', NULL);
 4b0:	60 e0       	ldi	r22, 0x00	; 0
 4b2:	70 e0       	ldi	r23, 0x00	; 0
 4b4:	8d e0       	ldi	r24, 0x0D	; 13
 4b6:	0e 94 4a 02 	call	0x494	; 0x494 <uart_putchar>
 4ba:	f0 cf       	rjmp	.-32     	; 0x49c <uart_putchar+0x8>

000004bc <uart_init>:
#include "serial.h"

static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void uart_init(void) {
	UBRR0H = (unsigned char)(UBRR >> 8);
 4bc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (unsigned char)(UBRR);
 4c0:	89 e1       	ldi	r24, 0x19	; 25
 4c2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0A = 0;
 4c6:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	UCSR0B = (1 << TXEN0 | 1 << RXEN0);
 4ca:	88 e1       	ldi	r24, 0x18	; 24
 4cc:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);
 4d0:	86 e0       	ldi	r24, 0x06	; 6
 4d2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>

	stdout = &uart_stdout;
 4d6:	80 e0       	ldi	r24, 0x00	; 0
 4d8:	91 e0       	ldi	r25, 0x01	; 1
 4da:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
 4de:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>
 4e2:	08 95       	ret

000004e4 <uart_getchar>:
 4e4:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 4e8:	87 ff       	sbrs	r24, 7
 4ea:	fc cf       	rjmp	.-8      	; 0x4e4 <uart_getchar>
 4ec:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
 4f0:	08 95       	ret

000004f2 <main>:
#include <string.h>

#include "i2c.h"

int main(void) {
	i2c_init();
 4f2:	0e 94 1f 01 	call	0x23e	; 0x23e <i2c_init>
	uart_init();
 4f6:	0e 94 5e 02 	call	0x4bc	; 0x4bc <uart_init>

	//eeprom_write_byte(PCA9685_MODE1, 0x00);
	
	eeprom_write_byte(PCA9685_MODE1, 0x01); // sleep mode enabled for changing prescaler
 4fa:	61 e0       	ldi	r22, 0x01	; 1
 4fc:	80 e0       	ldi	r24, 0x00	; 0
 4fe:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	eeprom_write_byte(PCA9685_PRESCALE, 0x79); // changing prescaler 121 = 0x79
 502:	69 e7       	ldi	r22, 0x79	; 121
 504:	8e ef       	ldi	r24, 0xFE	; 254
 506:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	eeprom_write_byte(PCA9685_MODE1, 0x00); // disabled sleep mode for normal operation
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	80 e0       	ldi	r24, 0x00	; 0
 50e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	/*
		Prescale value = (osc_clock / (4096 * update_rate)) - 1
		121 = (25 Mhz / (4096 * 50)) - 1  
	*/
	
	eeprom_write_byte(PCA9685_LED0_ON_L, 0x00); // ON LOW
 512:	60 e0       	ldi	r22, 0x00	; 0
 514:	86 e0       	ldi	r24, 0x06	; 6
 516:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	printf_P(PSTR("------ON LOW------\n"));
 51a:	8a e4       	ldi	r24, 0x4A	; 74
 51c:	91 e0       	ldi	r25, 0x01	; 1
 51e:	9f 93       	push	r25
 520:	8f 93       	push	r24
 522:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
	eeprom_write_byte(PCA9685_LED0_ON_H, 0x00); // ON HIGH
 526:	60 e0       	ldi	r22, 0x00	; 0
 528:	87 e0       	ldi	r24, 0x07	; 7
 52a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	printf_P(PSTR("------ON HIGH------\n"));
 52e:	85 e3       	ldi	r24, 0x35	; 53
 530:	91 e0       	ldi	r25, 0x01	; 1
 532:	9f 93       	push	r25
 534:	8f 93       	push	r24
 536:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>

	eeprom_write_byte(PCA9685_LED0_OFF_L, 0xFF); // OFF LOW
 53a:	6f ef       	ldi	r22, 0xFF	; 255
 53c:	88 e0       	ldi	r24, 0x08	; 8
 53e:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	printf_P(PSTR("------OFF LOW------\n"));
 542:	80 e2       	ldi	r24, 0x20	; 32
 544:	91 e0       	ldi	r25, 0x01	; 1
 546:	9f 93       	push	r25
 548:	8f 93       	push	r24
 54a:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
	eeprom_write_byte(PCA9685_LED0_OFF_H, 0x05); // OFF HIGH
 54e:	65 e0       	ldi	r22, 0x05	; 5
 550:	89 e0       	ldi	r24, 0x09	; 9
 552:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <eeprom_write_byte>
	printf_P(PSTR("------OFF HIGH------\n"));
 556:	8a e0       	ldi	r24, 0x0A	; 10
 558:	91 e0       	ldi	r25, 0x01	; 1
 55a:	9f 93       	push	r25
 55c:	8f 93       	push	r24
 55e:	0e 94 c9 02 	call	0x592	; 0x592 <printf_P>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 562:	2f ef       	ldi	r18, 0xFF	; 255
 564:	83 ed       	ldi	r24, 0xD3	; 211
 566:	90 e3       	ldi	r25, 0x30	; 48
 568:	21 50       	subi	r18, 0x01	; 1
 56a:	80 40       	sbci	r24, 0x00	; 0
 56c:	90 40       	sbci	r25, 0x00	; 0
 56e:	e1 f7       	brne	.-8      	; 0x568 <main+0x76>
 570:	00 c0       	rjmp	.+0      	; 0x572 <main+0x80>
 572:	00 00       	nop
 574:	8d b7       	in	r24, 0x3d	; 61
 576:	9e b7       	in	r25, 0x3e	; 62
 578:	08 96       	adiw	r24, 0x08	; 8
 57a:	0f b6       	in	r0, 0x3f	; 63
 57c:	f8 94       	cli
 57e:	9e bf       	out	0x3e, r25	; 62
 580:	0f be       	out	0x3f, r0	; 63
 582:	8d bf       	out	0x3d, r24	; 61
 584:	ff cf       	rjmp	.-2      	; 0x584 <main+0x92>

00000586 <__tablejump2__>:
 586:	ee 0f       	add	r30, r30
 588:	ff 1f       	adc	r31, r31
 58a:	05 90       	lpm	r0, Z+
 58c:	f4 91       	lpm	r31, Z
 58e:	e0 2d       	mov	r30, r0
 590:	09 94       	ijmp

00000592 <printf_P>:
 592:	a0 e0       	ldi	r26, 0x00	; 0
 594:	b0 e0       	ldi	r27, 0x00	; 0
 596:	ef ec       	ldi	r30, 0xCF	; 207
 598:	f2 e0       	ldi	r31, 0x02	; 2
 59a:	0c 94 8e 05 	jmp	0xb1c	; 0xb1c <__prologue_saves__+0x1c>
 59e:	ae 01       	movw	r20, r28
 5a0:	49 5f       	subi	r20, 0xF9	; 249
 5a2:	5f 4f       	sbci	r21, 0xFF	; 255
 5a4:	da 01       	movw	r26, r20
 5a6:	6d 91       	ld	r22, X+
 5a8:	7d 91       	ld	r23, X+
 5aa:	ad 01       	movw	r20, r26
 5ac:	0e e0       	ldi	r16, 0x0E	; 14
 5ae:	11 e0       	ldi	r17, 0x01	; 1
 5b0:	f8 01       	movw	r30, r16
 5b2:	82 81       	ldd	r24, Z+2	; 0x02
 5b4:	93 81       	ldd	r25, Z+3	; 0x03
 5b6:	dc 01       	movw	r26, r24
 5b8:	13 96       	adiw	r26, 0x03	; 3
 5ba:	2c 91       	ld	r18, X
 5bc:	13 97       	sbiw	r26, 0x03	; 3
 5be:	28 60       	ori	r18, 0x08	; 8
 5c0:	13 96       	adiw	r26, 0x03	; 3
 5c2:	2c 93       	st	X, r18
 5c4:	0e 94 ef 02 	call	0x5de	; 0x5de <vfprintf>
 5c8:	d8 01       	movw	r26, r16
 5ca:	12 96       	adiw	r26, 0x02	; 2
 5cc:	ed 91       	ld	r30, X+
 5ce:	fc 91       	ld	r31, X
 5d0:	13 97       	sbiw	r26, 0x03	; 3
 5d2:	23 81       	ldd	r18, Z+3	; 0x03
 5d4:	27 7f       	andi	r18, 0xF7	; 247
 5d6:	23 83       	std	Z+3, r18	; 0x03
 5d8:	e4 e0       	ldi	r30, 0x04	; 4
 5da:	0c 94 aa 05 	jmp	0xb54	; 0xb54 <__epilogue_restores__+0x1c>

000005de <vfprintf>:
 5de:	ab e0       	ldi	r26, 0x0B	; 11
 5e0:	b0 e0       	ldi	r27, 0x00	; 0
 5e2:	e5 ef       	ldi	r30, 0xF5	; 245
 5e4:	f2 e0       	ldi	r31, 0x02	; 2
 5e6:	0c 94 80 05 	jmp	0xb00	; 0xb00 <__prologue_saves__>
 5ea:	6c 01       	movw	r12, r24
 5ec:	7b 01       	movw	r14, r22
 5ee:	8a 01       	movw	r16, r20
 5f0:	fc 01       	movw	r30, r24
 5f2:	17 82       	std	Z+7, r1	; 0x07
 5f4:	16 82       	std	Z+6, r1	; 0x06
 5f6:	83 81       	ldd	r24, Z+3	; 0x03
 5f8:	81 ff       	sbrs	r24, 1
 5fa:	cc c1       	rjmp	.+920    	; 0x994 <__stack+0x95>
 5fc:	ce 01       	movw	r24, r28
 5fe:	01 96       	adiw	r24, 0x01	; 1
 600:	3c 01       	movw	r6, r24
 602:	f6 01       	movw	r30, r12
 604:	93 81       	ldd	r25, Z+3	; 0x03
 606:	f7 01       	movw	r30, r14
 608:	93 fd       	sbrc	r25, 3
 60a:	85 91       	lpm	r24, Z+
 60c:	93 ff       	sbrs	r25, 3
 60e:	81 91       	ld	r24, Z+
 610:	7f 01       	movw	r14, r30
 612:	88 23       	and	r24, r24
 614:	09 f4       	brne	.+2      	; 0x618 <vfprintf+0x3a>
 616:	ba c1       	rjmp	.+884    	; 0x98c <__stack+0x8d>
 618:	85 32       	cpi	r24, 0x25	; 37
 61a:	39 f4       	brne	.+14     	; 0x62a <vfprintf+0x4c>
 61c:	93 fd       	sbrc	r25, 3
 61e:	85 91       	lpm	r24, Z+
 620:	93 ff       	sbrs	r25, 3
 622:	81 91       	ld	r24, Z+
 624:	7f 01       	movw	r14, r30
 626:	85 32       	cpi	r24, 0x25	; 37
 628:	29 f4       	brne	.+10     	; 0x634 <vfprintf+0x56>
 62a:	b6 01       	movw	r22, r12
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 632:	e7 cf       	rjmp	.-50     	; 0x602 <vfprintf+0x24>
 634:	91 2c       	mov	r9, r1
 636:	21 2c       	mov	r2, r1
 638:	31 2c       	mov	r3, r1
 63a:	ff e1       	ldi	r31, 0x1F	; 31
 63c:	f3 15       	cp	r31, r3
 63e:	d8 f0       	brcs	.+54     	; 0x676 <vfprintf+0x98>
 640:	8b 32       	cpi	r24, 0x2B	; 43
 642:	79 f0       	breq	.+30     	; 0x662 <vfprintf+0x84>
 644:	38 f4       	brcc	.+14     	; 0x654 <vfprintf+0x76>
 646:	80 32       	cpi	r24, 0x20	; 32
 648:	79 f0       	breq	.+30     	; 0x668 <vfprintf+0x8a>
 64a:	83 32       	cpi	r24, 0x23	; 35
 64c:	a1 f4       	brne	.+40     	; 0x676 <vfprintf+0x98>
 64e:	23 2d       	mov	r18, r3
 650:	20 61       	ori	r18, 0x10	; 16
 652:	1d c0       	rjmp	.+58     	; 0x68e <vfprintf+0xb0>
 654:	8d 32       	cpi	r24, 0x2D	; 45
 656:	61 f0       	breq	.+24     	; 0x670 <vfprintf+0x92>
 658:	80 33       	cpi	r24, 0x30	; 48
 65a:	69 f4       	brne	.+26     	; 0x676 <vfprintf+0x98>
 65c:	23 2d       	mov	r18, r3
 65e:	21 60       	ori	r18, 0x01	; 1
 660:	16 c0       	rjmp	.+44     	; 0x68e <vfprintf+0xb0>
 662:	83 2d       	mov	r24, r3
 664:	82 60       	ori	r24, 0x02	; 2
 666:	38 2e       	mov	r3, r24
 668:	e3 2d       	mov	r30, r3
 66a:	e4 60       	ori	r30, 0x04	; 4
 66c:	3e 2e       	mov	r3, r30
 66e:	2a c0       	rjmp	.+84     	; 0x6c4 <vfprintf+0xe6>
 670:	f3 2d       	mov	r31, r3
 672:	f8 60       	ori	r31, 0x08	; 8
 674:	1d c0       	rjmp	.+58     	; 0x6b0 <vfprintf+0xd2>
 676:	37 fc       	sbrc	r3, 7
 678:	2d c0       	rjmp	.+90     	; 0x6d4 <vfprintf+0xf6>
 67a:	20 ed       	ldi	r18, 0xD0	; 208
 67c:	28 0f       	add	r18, r24
 67e:	2a 30       	cpi	r18, 0x0A	; 10
 680:	40 f0       	brcs	.+16     	; 0x692 <vfprintf+0xb4>
 682:	8e 32       	cpi	r24, 0x2E	; 46
 684:	b9 f4       	brne	.+46     	; 0x6b4 <vfprintf+0xd6>
 686:	36 fc       	sbrc	r3, 6
 688:	81 c1       	rjmp	.+770    	; 0x98c <__stack+0x8d>
 68a:	23 2d       	mov	r18, r3
 68c:	20 64       	ori	r18, 0x40	; 64
 68e:	32 2e       	mov	r3, r18
 690:	19 c0       	rjmp	.+50     	; 0x6c4 <vfprintf+0xe6>
 692:	36 fe       	sbrs	r3, 6
 694:	06 c0       	rjmp	.+12     	; 0x6a2 <vfprintf+0xc4>
 696:	8a e0       	ldi	r24, 0x0A	; 10
 698:	98 9e       	mul	r9, r24
 69a:	20 0d       	add	r18, r0
 69c:	11 24       	eor	r1, r1
 69e:	92 2e       	mov	r9, r18
 6a0:	11 c0       	rjmp	.+34     	; 0x6c4 <vfprintf+0xe6>
 6a2:	ea e0       	ldi	r30, 0x0A	; 10
 6a4:	2e 9e       	mul	r2, r30
 6a6:	20 0d       	add	r18, r0
 6a8:	11 24       	eor	r1, r1
 6aa:	22 2e       	mov	r2, r18
 6ac:	f3 2d       	mov	r31, r3
 6ae:	f0 62       	ori	r31, 0x20	; 32
 6b0:	3f 2e       	mov	r3, r31
 6b2:	08 c0       	rjmp	.+16     	; 0x6c4 <vfprintf+0xe6>
 6b4:	8c 36       	cpi	r24, 0x6C	; 108
 6b6:	21 f4       	brne	.+8      	; 0x6c0 <vfprintf+0xe2>
 6b8:	83 2d       	mov	r24, r3
 6ba:	80 68       	ori	r24, 0x80	; 128
 6bc:	38 2e       	mov	r3, r24
 6be:	02 c0       	rjmp	.+4      	; 0x6c4 <vfprintf+0xe6>
 6c0:	88 36       	cpi	r24, 0x68	; 104
 6c2:	41 f4       	brne	.+16     	; 0x6d4 <vfprintf+0xf6>
 6c4:	f7 01       	movw	r30, r14
 6c6:	93 fd       	sbrc	r25, 3
 6c8:	85 91       	lpm	r24, Z+
 6ca:	93 ff       	sbrs	r25, 3
 6cc:	81 91       	ld	r24, Z+
 6ce:	7f 01       	movw	r14, r30
 6d0:	81 11       	cpse	r24, r1
 6d2:	b3 cf       	rjmp	.-154    	; 0x63a <vfprintf+0x5c>
 6d4:	98 2f       	mov	r25, r24
 6d6:	9f 7d       	andi	r25, 0xDF	; 223
 6d8:	95 54       	subi	r25, 0x45	; 69
 6da:	93 30       	cpi	r25, 0x03	; 3
 6dc:	28 f4       	brcc	.+10     	; 0x6e8 <vfprintf+0x10a>
 6de:	0c 5f       	subi	r16, 0xFC	; 252
 6e0:	1f 4f       	sbci	r17, 0xFF	; 255
 6e2:	9f e3       	ldi	r25, 0x3F	; 63
 6e4:	99 83       	std	Y+1, r25	; 0x01
 6e6:	0d c0       	rjmp	.+26     	; 0x702 <vfprintf+0x124>
 6e8:	83 36       	cpi	r24, 0x63	; 99
 6ea:	31 f0       	breq	.+12     	; 0x6f8 <vfprintf+0x11a>
 6ec:	83 37       	cpi	r24, 0x73	; 115
 6ee:	71 f0       	breq	.+28     	; 0x70c <vfprintf+0x12e>
 6f0:	83 35       	cpi	r24, 0x53	; 83
 6f2:	09 f0       	breq	.+2      	; 0x6f6 <vfprintf+0x118>
 6f4:	59 c0       	rjmp	.+178    	; 0x7a8 <vfprintf+0x1ca>
 6f6:	21 c0       	rjmp	.+66     	; 0x73a <vfprintf+0x15c>
 6f8:	f8 01       	movw	r30, r16
 6fa:	80 81       	ld	r24, Z
 6fc:	89 83       	std	Y+1, r24	; 0x01
 6fe:	0e 5f       	subi	r16, 0xFE	; 254
 700:	1f 4f       	sbci	r17, 0xFF	; 255
 702:	88 24       	eor	r8, r8
 704:	83 94       	inc	r8
 706:	91 2c       	mov	r9, r1
 708:	53 01       	movw	r10, r6
 70a:	13 c0       	rjmp	.+38     	; 0x732 <vfprintf+0x154>
 70c:	28 01       	movw	r4, r16
 70e:	f2 e0       	ldi	r31, 0x02	; 2
 710:	4f 0e       	add	r4, r31
 712:	51 1c       	adc	r5, r1
 714:	f8 01       	movw	r30, r16
 716:	a0 80       	ld	r10, Z
 718:	b1 80       	ldd	r11, Z+1	; 0x01
 71a:	36 fe       	sbrs	r3, 6
 71c:	03 c0       	rjmp	.+6      	; 0x724 <vfprintf+0x146>
 71e:	69 2d       	mov	r22, r9
 720:	70 e0       	ldi	r23, 0x00	; 0
 722:	02 c0       	rjmp	.+4      	; 0x728 <vfprintf+0x14a>
 724:	6f ef       	ldi	r22, 0xFF	; 255
 726:	7f ef       	ldi	r23, 0xFF	; 255
 728:	c5 01       	movw	r24, r10
 72a:	0e 94 db 04 	call	0x9b6	; 0x9b6 <strnlen>
 72e:	4c 01       	movw	r8, r24
 730:	82 01       	movw	r16, r4
 732:	f3 2d       	mov	r31, r3
 734:	ff 77       	andi	r31, 0x7F	; 127
 736:	3f 2e       	mov	r3, r31
 738:	16 c0       	rjmp	.+44     	; 0x766 <vfprintf+0x188>
 73a:	28 01       	movw	r4, r16
 73c:	22 e0       	ldi	r18, 0x02	; 2
 73e:	42 0e       	add	r4, r18
 740:	51 1c       	adc	r5, r1
 742:	f8 01       	movw	r30, r16
 744:	a0 80       	ld	r10, Z
 746:	b1 80       	ldd	r11, Z+1	; 0x01
 748:	36 fe       	sbrs	r3, 6
 74a:	03 c0       	rjmp	.+6      	; 0x752 <vfprintf+0x174>
 74c:	69 2d       	mov	r22, r9
 74e:	70 e0       	ldi	r23, 0x00	; 0
 750:	02 c0       	rjmp	.+4      	; 0x756 <vfprintf+0x178>
 752:	6f ef       	ldi	r22, 0xFF	; 255
 754:	7f ef       	ldi	r23, 0xFF	; 255
 756:	c5 01       	movw	r24, r10
 758:	0e 94 d0 04 	call	0x9a0	; 0x9a0 <strnlen_P>
 75c:	4c 01       	movw	r8, r24
 75e:	f3 2d       	mov	r31, r3
 760:	f0 68       	ori	r31, 0x80	; 128
 762:	3f 2e       	mov	r3, r31
 764:	82 01       	movw	r16, r4
 766:	33 fc       	sbrc	r3, 3
 768:	1b c0       	rjmp	.+54     	; 0x7a0 <vfprintf+0x1c2>
 76a:	82 2d       	mov	r24, r2
 76c:	90 e0       	ldi	r25, 0x00	; 0
 76e:	88 16       	cp	r8, r24
 770:	99 06       	cpc	r9, r25
 772:	b0 f4       	brcc	.+44     	; 0x7a0 <vfprintf+0x1c2>
 774:	b6 01       	movw	r22, r12
 776:	80 e2       	ldi	r24, 0x20	; 32
 778:	90 e0       	ldi	r25, 0x00	; 0
 77a:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 77e:	2a 94       	dec	r2
 780:	f4 cf       	rjmp	.-24     	; 0x76a <vfprintf+0x18c>
 782:	f5 01       	movw	r30, r10
 784:	37 fc       	sbrc	r3, 7
 786:	85 91       	lpm	r24, Z+
 788:	37 fe       	sbrs	r3, 7
 78a:	81 91       	ld	r24, Z+
 78c:	5f 01       	movw	r10, r30
 78e:	b6 01       	movw	r22, r12
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 796:	21 10       	cpse	r2, r1
 798:	2a 94       	dec	r2
 79a:	21 e0       	ldi	r18, 0x01	; 1
 79c:	82 1a       	sub	r8, r18
 79e:	91 08       	sbc	r9, r1
 7a0:	81 14       	cp	r8, r1
 7a2:	91 04       	cpc	r9, r1
 7a4:	71 f7       	brne	.-36     	; 0x782 <vfprintf+0x1a4>
 7a6:	e8 c0       	rjmp	.+464    	; 0x978 <__stack+0x79>
 7a8:	84 36       	cpi	r24, 0x64	; 100
 7aa:	11 f0       	breq	.+4      	; 0x7b0 <vfprintf+0x1d2>
 7ac:	89 36       	cpi	r24, 0x69	; 105
 7ae:	41 f5       	brne	.+80     	; 0x800 <vfprintf+0x222>
 7b0:	f8 01       	movw	r30, r16
 7b2:	37 fe       	sbrs	r3, 7
 7b4:	07 c0       	rjmp	.+14     	; 0x7c4 <vfprintf+0x1e6>
 7b6:	60 81       	ld	r22, Z
 7b8:	71 81       	ldd	r23, Z+1	; 0x01
 7ba:	82 81       	ldd	r24, Z+2	; 0x02
 7bc:	93 81       	ldd	r25, Z+3	; 0x03
 7be:	0c 5f       	subi	r16, 0xFC	; 252
 7c0:	1f 4f       	sbci	r17, 0xFF	; 255
 7c2:	08 c0       	rjmp	.+16     	; 0x7d4 <vfprintf+0x1f6>
 7c4:	60 81       	ld	r22, Z
 7c6:	71 81       	ldd	r23, Z+1	; 0x01
 7c8:	07 2e       	mov	r0, r23
 7ca:	00 0c       	add	r0, r0
 7cc:	88 0b       	sbc	r24, r24
 7ce:	99 0b       	sbc	r25, r25
 7d0:	0e 5f       	subi	r16, 0xFE	; 254
 7d2:	1f 4f       	sbci	r17, 0xFF	; 255
 7d4:	f3 2d       	mov	r31, r3
 7d6:	ff 76       	andi	r31, 0x6F	; 111
 7d8:	3f 2e       	mov	r3, r31
 7da:	97 ff       	sbrs	r25, 7
 7dc:	09 c0       	rjmp	.+18     	; 0x7f0 <vfprintf+0x212>
 7de:	90 95       	com	r25
 7e0:	80 95       	com	r24
 7e2:	70 95       	com	r23
 7e4:	61 95       	neg	r22
 7e6:	7f 4f       	sbci	r23, 0xFF	; 255
 7e8:	8f 4f       	sbci	r24, 0xFF	; 255
 7ea:	9f 4f       	sbci	r25, 0xFF	; 255
 7ec:	f0 68       	ori	r31, 0x80	; 128
 7ee:	3f 2e       	mov	r3, r31
 7f0:	2a e0       	ldi	r18, 0x0A	; 10
 7f2:	30 e0       	ldi	r19, 0x00	; 0
 7f4:	a3 01       	movw	r20, r6
 7f6:	0e 94 22 05 	call	0xa44	; 0xa44 <__ultoa_invert>
 7fa:	88 2e       	mov	r8, r24
 7fc:	86 18       	sub	r8, r6
 7fe:	45 c0       	rjmp	.+138    	; 0x88a <vfprintf+0x2ac>
 800:	85 37       	cpi	r24, 0x75	; 117
 802:	31 f4       	brne	.+12     	; 0x810 <vfprintf+0x232>
 804:	23 2d       	mov	r18, r3
 806:	2f 7e       	andi	r18, 0xEF	; 239
 808:	b2 2e       	mov	r11, r18
 80a:	2a e0       	ldi	r18, 0x0A	; 10
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	25 c0       	rjmp	.+74     	; 0x85a <vfprintf+0x27c>
 810:	93 2d       	mov	r25, r3
 812:	99 7f       	andi	r25, 0xF9	; 249
 814:	b9 2e       	mov	r11, r25
 816:	8f 36       	cpi	r24, 0x6F	; 111
 818:	c1 f0       	breq	.+48     	; 0x84a <vfprintf+0x26c>
 81a:	18 f4       	brcc	.+6      	; 0x822 <vfprintf+0x244>
 81c:	88 35       	cpi	r24, 0x58	; 88
 81e:	79 f0       	breq	.+30     	; 0x83e <vfprintf+0x260>
 820:	b5 c0       	rjmp	.+362    	; 0x98c <__stack+0x8d>
 822:	80 37       	cpi	r24, 0x70	; 112
 824:	19 f0       	breq	.+6      	; 0x82c <vfprintf+0x24e>
 826:	88 37       	cpi	r24, 0x78	; 120
 828:	21 f0       	breq	.+8      	; 0x832 <vfprintf+0x254>
 82a:	b0 c0       	rjmp	.+352    	; 0x98c <__stack+0x8d>
 82c:	e9 2f       	mov	r30, r25
 82e:	e0 61       	ori	r30, 0x10	; 16
 830:	be 2e       	mov	r11, r30
 832:	b4 fe       	sbrs	r11, 4
 834:	0d c0       	rjmp	.+26     	; 0x850 <vfprintf+0x272>
 836:	fb 2d       	mov	r31, r11
 838:	f4 60       	ori	r31, 0x04	; 4
 83a:	bf 2e       	mov	r11, r31
 83c:	09 c0       	rjmp	.+18     	; 0x850 <vfprintf+0x272>
 83e:	34 fe       	sbrs	r3, 4
 840:	0a c0       	rjmp	.+20     	; 0x856 <vfprintf+0x278>
 842:	29 2f       	mov	r18, r25
 844:	26 60       	ori	r18, 0x06	; 6
 846:	b2 2e       	mov	r11, r18
 848:	06 c0       	rjmp	.+12     	; 0x856 <vfprintf+0x278>
 84a:	28 e0       	ldi	r18, 0x08	; 8
 84c:	30 e0       	ldi	r19, 0x00	; 0
 84e:	05 c0       	rjmp	.+10     	; 0x85a <vfprintf+0x27c>
 850:	20 e1       	ldi	r18, 0x10	; 16
 852:	30 e0       	ldi	r19, 0x00	; 0
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0x27c>
 856:	20 e1       	ldi	r18, 0x10	; 16
 858:	32 e0       	ldi	r19, 0x02	; 2
 85a:	f8 01       	movw	r30, r16
 85c:	b7 fe       	sbrs	r11, 7
 85e:	07 c0       	rjmp	.+14     	; 0x86e <vfprintf+0x290>
 860:	60 81       	ld	r22, Z
 862:	71 81       	ldd	r23, Z+1	; 0x01
 864:	82 81       	ldd	r24, Z+2	; 0x02
 866:	93 81       	ldd	r25, Z+3	; 0x03
 868:	0c 5f       	subi	r16, 0xFC	; 252
 86a:	1f 4f       	sbci	r17, 0xFF	; 255
 86c:	06 c0       	rjmp	.+12     	; 0x87a <vfprintf+0x29c>
 86e:	60 81       	ld	r22, Z
 870:	71 81       	ldd	r23, Z+1	; 0x01
 872:	80 e0       	ldi	r24, 0x00	; 0
 874:	90 e0       	ldi	r25, 0x00	; 0
 876:	0e 5f       	subi	r16, 0xFE	; 254
 878:	1f 4f       	sbci	r17, 0xFF	; 255
 87a:	a3 01       	movw	r20, r6
 87c:	0e 94 22 05 	call	0xa44	; 0xa44 <__ultoa_invert>
 880:	88 2e       	mov	r8, r24
 882:	86 18       	sub	r8, r6
 884:	fb 2d       	mov	r31, r11
 886:	ff 77       	andi	r31, 0x7F	; 127
 888:	3f 2e       	mov	r3, r31
 88a:	36 fe       	sbrs	r3, 6
 88c:	0d c0       	rjmp	.+26     	; 0x8a8 <vfprintf+0x2ca>
 88e:	23 2d       	mov	r18, r3
 890:	2e 7f       	andi	r18, 0xFE	; 254
 892:	a2 2e       	mov	r10, r18
 894:	89 14       	cp	r8, r9
 896:	58 f4       	brcc	.+22     	; 0x8ae <vfprintf+0x2d0>
 898:	34 fe       	sbrs	r3, 4
 89a:	0b c0       	rjmp	.+22     	; 0x8b2 <vfprintf+0x2d4>
 89c:	32 fc       	sbrc	r3, 2
 89e:	09 c0       	rjmp	.+18     	; 0x8b2 <vfprintf+0x2d4>
 8a0:	83 2d       	mov	r24, r3
 8a2:	8e 7e       	andi	r24, 0xEE	; 238
 8a4:	a8 2e       	mov	r10, r24
 8a6:	05 c0       	rjmp	.+10     	; 0x8b2 <vfprintf+0x2d4>
 8a8:	b8 2c       	mov	r11, r8
 8aa:	a3 2c       	mov	r10, r3
 8ac:	03 c0       	rjmp	.+6      	; 0x8b4 <vfprintf+0x2d6>
 8ae:	b8 2c       	mov	r11, r8
 8b0:	01 c0       	rjmp	.+2      	; 0x8b4 <vfprintf+0x2d6>
 8b2:	b9 2c       	mov	r11, r9
 8b4:	a4 fe       	sbrs	r10, 4
 8b6:	0f c0       	rjmp	.+30     	; 0x8d6 <vfprintf+0x2f8>
 8b8:	fe 01       	movw	r30, r28
 8ba:	e8 0d       	add	r30, r8
 8bc:	f1 1d       	adc	r31, r1
 8be:	80 81       	ld	r24, Z
 8c0:	80 33       	cpi	r24, 0x30	; 48
 8c2:	21 f4       	brne	.+8      	; 0x8cc <vfprintf+0x2ee>
 8c4:	9a 2d       	mov	r25, r10
 8c6:	99 7e       	andi	r25, 0xE9	; 233
 8c8:	a9 2e       	mov	r10, r25
 8ca:	09 c0       	rjmp	.+18     	; 0x8de <vfprintf+0x300>
 8cc:	a2 fe       	sbrs	r10, 2
 8ce:	06 c0       	rjmp	.+12     	; 0x8dc <vfprintf+0x2fe>
 8d0:	b3 94       	inc	r11
 8d2:	b3 94       	inc	r11
 8d4:	04 c0       	rjmp	.+8      	; 0x8de <vfprintf+0x300>
 8d6:	8a 2d       	mov	r24, r10
 8d8:	86 78       	andi	r24, 0x86	; 134
 8da:	09 f0       	breq	.+2      	; 0x8de <vfprintf+0x300>
 8dc:	b3 94       	inc	r11
 8de:	a3 fc       	sbrc	r10, 3
 8e0:	11 c0       	rjmp	.+34     	; 0x904 <__stack+0x5>
 8e2:	a0 fe       	sbrs	r10, 0
 8e4:	06 c0       	rjmp	.+12     	; 0x8f2 <vfprintf+0x314>
 8e6:	b2 14       	cp	r11, r2
 8e8:	88 f4       	brcc	.+34     	; 0x90c <__stack+0xd>
 8ea:	28 0c       	add	r2, r8
 8ec:	92 2c       	mov	r9, r2
 8ee:	9b 18       	sub	r9, r11
 8f0:	0e c0       	rjmp	.+28     	; 0x90e <__stack+0xf>
 8f2:	b2 14       	cp	r11, r2
 8f4:	60 f4       	brcc	.+24     	; 0x90e <__stack+0xf>
 8f6:	b6 01       	movw	r22, r12
 8f8:	80 e2       	ldi	r24, 0x20	; 32
 8fa:	90 e0       	ldi	r25, 0x00	; 0
 8fc:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 900:	b3 94       	inc	r11
 902:	f7 cf       	rjmp	.-18     	; 0x8f2 <vfprintf+0x314>
 904:	b2 14       	cp	r11, r2
 906:	18 f4       	brcc	.+6      	; 0x90e <__stack+0xf>
 908:	2b 18       	sub	r2, r11
 90a:	02 c0       	rjmp	.+4      	; 0x910 <__stack+0x11>
 90c:	98 2c       	mov	r9, r8
 90e:	21 2c       	mov	r2, r1
 910:	a4 fe       	sbrs	r10, 4
 912:	10 c0       	rjmp	.+32     	; 0x934 <__stack+0x35>
 914:	b6 01       	movw	r22, r12
 916:	80 e3       	ldi	r24, 0x30	; 48
 918:	90 e0       	ldi	r25, 0x00	; 0
 91a:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 91e:	a2 fe       	sbrs	r10, 2
 920:	17 c0       	rjmp	.+46     	; 0x950 <__stack+0x51>
 922:	a1 fc       	sbrc	r10, 1
 924:	03 c0       	rjmp	.+6      	; 0x92c <__stack+0x2d>
 926:	88 e7       	ldi	r24, 0x78	; 120
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	02 c0       	rjmp	.+4      	; 0x930 <__stack+0x31>
 92c:	88 e5       	ldi	r24, 0x58	; 88
 92e:	90 e0       	ldi	r25, 0x00	; 0
 930:	b6 01       	movw	r22, r12
 932:	0c c0       	rjmp	.+24     	; 0x94c <__stack+0x4d>
 934:	8a 2d       	mov	r24, r10
 936:	86 78       	andi	r24, 0x86	; 134
 938:	59 f0       	breq	.+22     	; 0x950 <__stack+0x51>
 93a:	a1 fe       	sbrs	r10, 1
 93c:	02 c0       	rjmp	.+4      	; 0x942 <__stack+0x43>
 93e:	8b e2       	ldi	r24, 0x2B	; 43
 940:	01 c0       	rjmp	.+2      	; 0x944 <__stack+0x45>
 942:	80 e2       	ldi	r24, 0x20	; 32
 944:	a7 fc       	sbrc	r10, 7
 946:	8d e2       	ldi	r24, 0x2D	; 45
 948:	b6 01       	movw	r22, r12
 94a:	90 e0       	ldi	r25, 0x00	; 0
 94c:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 950:	89 14       	cp	r8, r9
 952:	38 f4       	brcc	.+14     	; 0x962 <__stack+0x63>
 954:	b6 01       	movw	r22, r12
 956:	80 e3       	ldi	r24, 0x30	; 48
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 95e:	9a 94       	dec	r9
 960:	f7 cf       	rjmp	.-18     	; 0x950 <__stack+0x51>
 962:	8a 94       	dec	r8
 964:	f3 01       	movw	r30, r6
 966:	e8 0d       	add	r30, r8
 968:	f1 1d       	adc	r31, r1
 96a:	80 81       	ld	r24, Z
 96c:	b6 01       	movw	r22, r12
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 974:	81 10       	cpse	r8, r1
 976:	f5 cf       	rjmp	.-22     	; 0x962 <__stack+0x63>
 978:	22 20       	and	r2, r2
 97a:	09 f4       	brne	.+2      	; 0x97e <__stack+0x7f>
 97c:	42 ce       	rjmp	.-892    	; 0x602 <vfprintf+0x24>
 97e:	b6 01       	movw	r22, r12
 980:	80 e2       	ldi	r24, 0x20	; 32
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	0e 94 e6 04 	call	0x9cc	; 0x9cc <fputc>
 988:	2a 94       	dec	r2
 98a:	f6 cf       	rjmp	.-20     	; 0x978 <__stack+0x79>
 98c:	f6 01       	movw	r30, r12
 98e:	86 81       	ldd	r24, Z+6	; 0x06
 990:	97 81       	ldd	r25, Z+7	; 0x07
 992:	02 c0       	rjmp	.+4      	; 0x998 <__stack+0x99>
 994:	8f ef       	ldi	r24, 0xFF	; 255
 996:	9f ef       	ldi	r25, 0xFF	; 255
 998:	2b 96       	adiw	r28, 0x0b	; 11
 99a:	e2 e1       	ldi	r30, 0x12	; 18
 99c:	0c 94 9c 05 	jmp	0xb38	; 0xb38 <__epilogue_restores__>

000009a0 <strnlen_P>:
 9a0:	fc 01       	movw	r30, r24
 9a2:	05 90       	lpm	r0, Z+
 9a4:	61 50       	subi	r22, 0x01	; 1
 9a6:	70 40       	sbci	r23, 0x00	; 0
 9a8:	01 10       	cpse	r0, r1
 9aa:	d8 f7       	brcc	.-10     	; 0x9a2 <strnlen_P+0x2>
 9ac:	80 95       	com	r24
 9ae:	90 95       	com	r25
 9b0:	8e 0f       	add	r24, r30
 9b2:	9f 1f       	adc	r25, r31
 9b4:	08 95       	ret

000009b6 <strnlen>:
 9b6:	fc 01       	movw	r30, r24
 9b8:	61 50       	subi	r22, 0x01	; 1
 9ba:	70 40       	sbci	r23, 0x00	; 0
 9bc:	01 90       	ld	r0, Z+
 9be:	01 10       	cpse	r0, r1
 9c0:	d8 f7       	brcc	.-10     	; 0x9b8 <strnlen+0x2>
 9c2:	80 95       	com	r24
 9c4:	90 95       	com	r25
 9c6:	8e 0f       	add	r24, r30
 9c8:	9f 1f       	adc	r25, r31
 9ca:	08 95       	ret

000009cc <fputc>:
 9cc:	0f 93       	push	r16
 9ce:	1f 93       	push	r17
 9d0:	cf 93       	push	r28
 9d2:	df 93       	push	r29
 9d4:	fb 01       	movw	r30, r22
 9d6:	23 81       	ldd	r18, Z+3	; 0x03
 9d8:	21 fd       	sbrc	r18, 1
 9da:	03 c0       	rjmp	.+6      	; 0x9e2 <fputc+0x16>
 9dc:	8f ef       	ldi	r24, 0xFF	; 255
 9de:	9f ef       	ldi	r25, 0xFF	; 255
 9e0:	2c c0       	rjmp	.+88     	; 0xa3a <fputc+0x6e>
 9e2:	22 ff       	sbrs	r18, 2
 9e4:	16 c0       	rjmp	.+44     	; 0xa12 <fputc+0x46>
 9e6:	46 81       	ldd	r20, Z+6	; 0x06
 9e8:	57 81       	ldd	r21, Z+7	; 0x07
 9ea:	24 81       	ldd	r18, Z+4	; 0x04
 9ec:	35 81       	ldd	r19, Z+5	; 0x05
 9ee:	42 17       	cp	r20, r18
 9f0:	53 07       	cpc	r21, r19
 9f2:	44 f4       	brge	.+16     	; 0xa04 <fputc+0x38>
 9f4:	a0 81       	ld	r26, Z
 9f6:	b1 81       	ldd	r27, Z+1	; 0x01
 9f8:	9d 01       	movw	r18, r26
 9fa:	2f 5f       	subi	r18, 0xFF	; 255
 9fc:	3f 4f       	sbci	r19, 0xFF	; 255
 9fe:	31 83       	std	Z+1, r19	; 0x01
 a00:	20 83       	st	Z, r18
 a02:	8c 93       	st	X, r24
 a04:	26 81       	ldd	r18, Z+6	; 0x06
 a06:	37 81       	ldd	r19, Z+7	; 0x07
 a08:	2f 5f       	subi	r18, 0xFF	; 255
 a0a:	3f 4f       	sbci	r19, 0xFF	; 255
 a0c:	37 83       	std	Z+7, r19	; 0x07
 a0e:	26 83       	std	Z+6, r18	; 0x06
 a10:	14 c0       	rjmp	.+40     	; 0xa3a <fputc+0x6e>
 a12:	8b 01       	movw	r16, r22
 a14:	ec 01       	movw	r28, r24
 a16:	fb 01       	movw	r30, r22
 a18:	00 84       	ldd	r0, Z+8	; 0x08
 a1a:	f1 85       	ldd	r31, Z+9	; 0x09
 a1c:	e0 2d       	mov	r30, r0
 a1e:	09 95       	icall
 a20:	89 2b       	or	r24, r25
 a22:	e1 f6       	brne	.-72     	; 0x9dc <fputc+0x10>
 a24:	d8 01       	movw	r26, r16
 a26:	16 96       	adiw	r26, 0x06	; 6
 a28:	8d 91       	ld	r24, X+
 a2a:	9c 91       	ld	r25, X
 a2c:	17 97       	sbiw	r26, 0x07	; 7
 a2e:	01 96       	adiw	r24, 0x01	; 1
 a30:	17 96       	adiw	r26, 0x07	; 7
 a32:	9c 93       	st	X, r25
 a34:	8e 93       	st	-X, r24
 a36:	16 97       	sbiw	r26, 0x06	; 6
 a38:	ce 01       	movw	r24, r28
 a3a:	df 91       	pop	r29
 a3c:	cf 91       	pop	r28
 a3e:	1f 91       	pop	r17
 a40:	0f 91       	pop	r16
 a42:	08 95       	ret

00000a44 <__ultoa_invert>:
 a44:	fa 01       	movw	r30, r20
 a46:	aa 27       	eor	r26, r26
 a48:	28 30       	cpi	r18, 0x08	; 8
 a4a:	51 f1       	breq	.+84     	; 0xaa0 <__ultoa_invert+0x5c>
 a4c:	20 31       	cpi	r18, 0x10	; 16
 a4e:	81 f1       	breq	.+96     	; 0xab0 <__ultoa_invert+0x6c>
 a50:	e8 94       	clt
 a52:	6f 93       	push	r22
 a54:	6e 7f       	andi	r22, 0xFE	; 254
 a56:	6e 5f       	subi	r22, 0xFE	; 254
 a58:	7f 4f       	sbci	r23, 0xFF	; 255
 a5a:	8f 4f       	sbci	r24, 0xFF	; 255
 a5c:	9f 4f       	sbci	r25, 0xFF	; 255
 a5e:	af 4f       	sbci	r26, 0xFF	; 255
 a60:	b1 e0       	ldi	r27, 0x01	; 1
 a62:	3e d0       	rcall	.+124    	; 0xae0 <__ultoa_invert+0x9c>
 a64:	b4 e0       	ldi	r27, 0x04	; 4
 a66:	3c d0       	rcall	.+120    	; 0xae0 <__ultoa_invert+0x9c>
 a68:	67 0f       	add	r22, r23
 a6a:	78 1f       	adc	r23, r24
 a6c:	89 1f       	adc	r24, r25
 a6e:	9a 1f       	adc	r25, r26
 a70:	a1 1d       	adc	r26, r1
 a72:	68 0f       	add	r22, r24
 a74:	79 1f       	adc	r23, r25
 a76:	8a 1f       	adc	r24, r26
 a78:	91 1d       	adc	r25, r1
 a7a:	a1 1d       	adc	r26, r1
 a7c:	6a 0f       	add	r22, r26
 a7e:	71 1d       	adc	r23, r1
 a80:	81 1d       	adc	r24, r1
 a82:	91 1d       	adc	r25, r1
 a84:	a1 1d       	adc	r26, r1
 a86:	20 d0       	rcall	.+64     	; 0xac8 <__ultoa_invert+0x84>
 a88:	09 f4       	brne	.+2      	; 0xa8c <__ultoa_invert+0x48>
 a8a:	68 94       	set
 a8c:	3f 91       	pop	r19
 a8e:	2a e0       	ldi	r18, 0x0A	; 10
 a90:	26 9f       	mul	r18, r22
 a92:	11 24       	eor	r1, r1
 a94:	30 19       	sub	r19, r0
 a96:	30 5d       	subi	r19, 0xD0	; 208
 a98:	31 93       	st	Z+, r19
 a9a:	de f6       	brtc	.-74     	; 0xa52 <__ultoa_invert+0xe>
 a9c:	cf 01       	movw	r24, r30
 a9e:	08 95       	ret
 aa0:	46 2f       	mov	r20, r22
 aa2:	47 70       	andi	r20, 0x07	; 7
 aa4:	40 5d       	subi	r20, 0xD0	; 208
 aa6:	41 93       	st	Z+, r20
 aa8:	b3 e0       	ldi	r27, 0x03	; 3
 aaa:	0f d0       	rcall	.+30     	; 0xaca <__ultoa_invert+0x86>
 aac:	c9 f7       	brne	.-14     	; 0xaa0 <__ultoa_invert+0x5c>
 aae:	f6 cf       	rjmp	.-20     	; 0xa9c <__ultoa_invert+0x58>
 ab0:	46 2f       	mov	r20, r22
 ab2:	4f 70       	andi	r20, 0x0F	; 15
 ab4:	40 5d       	subi	r20, 0xD0	; 208
 ab6:	4a 33       	cpi	r20, 0x3A	; 58
 ab8:	18 f0       	brcs	.+6      	; 0xac0 <__ultoa_invert+0x7c>
 aba:	49 5d       	subi	r20, 0xD9	; 217
 abc:	31 fd       	sbrc	r19, 1
 abe:	40 52       	subi	r20, 0x20	; 32
 ac0:	41 93       	st	Z+, r20
 ac2:	02 d0       	rcall	.+4      	; 0xac8 <__ultoa_invert+0x84>
 ac4:	a9 f7       	brne	.-22     	; 0xab0 <__ultoa_invert+0x6c>
 ac6:	ea cf       	rjmp	.-44     	; 0xa9c <__ultoa_invert+0x58>
 ac8:	b4 e0       	ldi	r27, 0x04	; 4
 aca:	a6 95       	lsr	r26
 acc:	97 95       	ror	r25
 ace:	87 95       	ror	r24
 ad0:	77 95       	ror	r23
 ad2:	67 95       	ror	r22
 ad4:	ba 95       	dec	r27
 ad6:	c9 f7       	brne	.-14     	; 0xaca <__ultoa_invert+0x86>
 ad8:	00 97       	sbiw	r24, 0x00	; 0
 ada:	61 05       	cpc	r22, r1
 adc:	71 05       	cpc	r23, r1
 ade:	08 95       	ret
 ae0:	9b 01       	movw	r18, r22
 ae2:	ac 01       	movw	r20, r24
 ae4:	0a 2e       	mov	r0, r26
 ae6:	06 94       	lsr	r0
 ae8:	57 95       	ror	r21
 aea:	47 95       	ror	r20
 aec:	37 95       	ror	r19
 aee:	27 95       	ror	r18
 af0:	ba 95       	dec	r27
 af2:	c9 f7       	brne	.-14     	; 0xae6 <__ultoa_invert+0xa2>
 af4:	62 0f       	add	r22, r18
 af6:	73 1f       	adc	r23, r19
 af8:	84 1f       	adc	r24, r20
 afa:	95 1f       	adc	r25, r21
 afc:	a0 1d       	adc	r26, r0
 afe:	08 95       	ret

00000b00 <__prologue_saves__>:
 b00:	2f 92       	push	r2
 b02:	3f 92       	push	r3
 b04:	4f 92       	push	r4
 b06:	5f 92       	push	r5
 b08:	6f 92       	push	r6
 b0a:	7f 92       	push	r7
 b0c:	8f 92       	push	r8
 b0e:	9f 92       	push	r9
 b10:	af 92       	push	r10
 b12:	bf 92       	push	r11
 b14:	cf 92       	push	r12
 b16:	df 92       	push	r13
 b18:	ef 92       	push	r14
 b1a:	ff 92       	push	r15
 b1c:	0f 93       	push	r16
 b1e:	1f 93       	push	r17
 b20:	cf 93       	push	r28
 b22:	df 93       	push	r29
 b24:	cd b7       	in	r28, 0x3d	; 61
 b26:	de b7       	in	r29, 0x3e	; 62
 b28:	ca 1b       	sub	r28, r26
 b2a:	db 0b       	sbc	r29, r27
 b2c:	0f b6       	in	r0, 0x3f	; 63
 b2e:	f8 94       	cli
 b30:	de bf       	out	0x3e, r29	; 62
 b32:	0f be       	out	0x3f, r0	; 63
 b34:	cd bf       	out	0x3d, r28	; 61
 b36:	09 94       	ijmp

00000b38 <__epilogue_restores__>:
 b38:	2a 88       	ldd	r2, Y+18	; 0x12
 b3a:	39 88       	ldd	r3, Y+17	; 0x11
 b3c:	48 88       	ldd	r4, Y+16	; 0x10
 b3e:	5f 84       	ldd	r5, Y+15	; 0x0f
 b40:	6e 84       	ldd	r6, Y+14	; 0x0e
 b42:	7d 84       	ldd	r7, Y+13	; 0x0d
 b44:	8c 84       	ldd	r8, Y+12	; 0x0c
 b46:	9b 84       	ldd	r9, Y+11	; 0x0b
 b48:	aa 84       	ldd	r10, Y+10	; 0x0a
 b4a:	b9 84       	ldd	r11, Y+9	; 0x09
 b4c:	c8 84       	ldd	r12, Y+8	; 0x08
 b4e:	df 80       	ldd	r13, Y+7	; 0x07
 b50:	ee 80       	ldd	r14, Y+6	; 0x06
 b52:	fd 80       	ldd	r15, Y+5	; 0x05
 b54:	0c 81       	ldd	r16, Y+4	; 0x04
 b56:	1b 81       	ldd	r17, Y+3	; 0x03
 b58:	aa 81       	ldd	r26, Y+2	; 0x02
 b5a:	b9 81       	ldd	r27, Y+1	; 0x01
 b5c:	ce 0f       	add	r28, r30
 b5e:	d1 1d       	adc	r29, r1
 b60:	0f b6       	in	r0, 0x3f	; 63
 b62:	f8 94       	cli
 b64:	de bf       	out	0x3e, r29	; 62
 b66:	0f be       	out	0x3f, r0	; 63
 b68:	cd bf       	out	0x3d, r28	; 61
 b6a:	ed 01       	movw	r28, r26
 b6c:	08 95       	ret

00000b6e <_exit>:
 b6e:	f8 94       	cli

00000b70 <__stop_program>:
 b70:	ff cf       	rjmp	.-2      	; 0xb70 <__stop_program>
