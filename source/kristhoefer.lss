
kristhoefer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000b2c  00000bc0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b2c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010e  0080010e  00000bce  2**0
                  ALLOC
  3 .stab         00001878  00000000  00000000  00000bd0  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000010b3  00000000  00000000  00002448  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000011  00000000  00000000  000034fb  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000350c  2**2
                  CONTENTS, READONLY
  7 .debug_info   000005f4  00000000  00000000  0000354c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000005a2  00000000  00000000  00003b40  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000001a  00000000  00000000  000040e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000208  00000000  00000000  000040fc  2**0
                  CONTENTS, READONLY, DEBUGGING
Contents of section .data:
 800100 00000002 00000000 20020000 0000      ........ .....  
Contents of section .text:
 0000 0c94d600 0c94f300 0c94f300 0c94f300  ................
 0010 0c94f300 0c94f300 0c94f300 0c94f300  ................
 0020 0c94f300 0c94f300 0c94f300 0c94f300  ................
 0030 0c94f300 0c94f300 0c94f300 0c94f300  ................
 0040 0c94f300 0c94f300 0c94f300 0c94f300  ................
 0050 0c94f300 0c94f300 0c94f300 0c94f300  ................
 0060 0c94f300 0c94f300 1f010501 05010501  ................
 0070 05010501 05010501 28010501 05010501  ........(.......
 0080 05010501 05010501 31010501 05010501  ........1.......
 0090 05010501 05010501 3a010501 05010501  ........:.......
 00a0 05010501 05010501 43010501 05010501  ........C.......
 00b0 05010501 05010501 4c010501 05010501  ........L.......
 00c0 05010501 05010501 55010501 05010501  ........U.......
 00d0 05010501 05010501 5e010501 05010501  ........^.......
 00e0 05010501 05010501 67010501 05010501  ........g.......
 00f0 05010501 05010501 70010501 05010501  ........p.......
 0100 05010501 05010501 16014e2f 41202530  ..........N/A %0
 0110 32580a00 4d522044 4154412b 522c204e  2X..MR DATA+R, N
 0120 414b0a00 4d522044 4154412b 522c2041  AK..MR DATA+R, A
 0130 434b0a00 4d522053 4c412b52 2c204e41  CK..MR SLA+R, NA
 0140 4b0a004d 5220534c 412b522c 2041434b  K..MR SLA+R, ACK
 0150 0a004d54 20444154 412b572c 204e414b  ..MT DATA+W, NAK
 0160 0a004d54 20444154 412b572c 2041434b  ..MT DATA+W, ACK
 0170 0a004d54 20534c41 2b572c20 4e414b0a  ..MT SLA+W, NAK.
 0180 004d5420 534c412b 572c2041 434b0a00  .MT SLA+W, ACK..
 0190 4e4f4152 422f4e41 4b0a0052 45535441  NOARB/NAK..RESTA
 01a0 52540a00 53544152 540a0000 11241fbe  RT..START....$..
 01b0 cfefd8e0 debfcdbf 11e0a0e0 b1e0ece2  ................
 01c0 fbe002c0 05900d92 ae30b107 d9f721e0  .........0....!.
 01d0 aee0b1e0 01c01d92 a431b207 e1f70e94  .........1......
 01e0 7c020c94 94050c94 000084e0 8093bc00  |...............
 01f0 1092b900 88e48093 b8000895 482f50e0  ............H/P.
 0200 fa013897 e135f105 68f01f92 8f938ae0  ..8..5..h.......
 0210 91e09f93 8f930e94 a6020f90 0f900f90  ................
 0220 0f900895 ec5cff4f 0c94a002 84e191e0  .....\.O........
 0230 9f938f93 0e94a602 0f900f90 089584ea  ................
 0240 91e09f93 8f930e94 a6020f90 0f900895  ................
 0250 8be991e0 9f938f93 0e94a602 0f900f90  ................
 0260 089581e8 91e09f93 8f930e94 a6020f90  ................
 0270 0f900895 82e791e0 9f938f93 0e94a602  ................
 0280 0f900f90 089582e6 91e09f93 8f930e94  ................
 0290 a6020f90 0f900895 82e591e0 9f938f93  ................
 02a0 0e94a602 0f900f90 089580e9 91e09f93  ................
 02b0 8f930e94 a6020f90 0f900895 83e491e0  ................
 02c0 9f938f93 0e94a602 0f900f90 089584e3  ................
 02d0 91e09f93 8f930e94 a6020f90 0f900895  ................
 02e0 84e291e0 9f938f93 0e94a602 0f900f90  ................
 02f0 089584ea 8093bc00 8091bc00 87fffccf  ................
 0300 089584e9 8093bc00 8091bc00 84fdfccf  ................
 0310 08958091 b900887f 08958e7f 6170682b  ............aph+
 0320 6093bb00 84e88093 bc008091 bc0087ff  `...............
 0330 fccf0895 8093bb00 84e88093 bc008091  ................
 0340 bc0087ff fccf0895 34ea20e8 94e88091  ........4. .....
 0350 b900887f 883199f0 3093bc00 8091bc00  .....1..0.......
 0360 87fffccf 2093bb00 9093bc00 8091bc00  .... ...........
 0370 87fffccf 8091b900 887f8831 69f70895  ...........1i...
 0380 cf93df93 d82fc62f 84ea8093 bc008091  ....././........
 0390 bc0087ff fccf8091 b900887f 0e94fe00  ................
 03a0 80e88093 bb0084e8 8093bc00 8091bc00  ................
 03b0 87fffccf 8091b900 887f0e94 fe00d093  ................
 03c0 bb0084e8 8093bc00 8091bc00 87fffccf  ................
 03d0 8091b900 887f0e94 fe00c093 bb0084e8  ................
 03e0 8093bc00 8091bc00 87fffccf 8091b900  ................
 03f0 887f0e94 fe0084e9 8093bc00 8091bc00  ................
 0400 84fdfccf 34ea20e8 94e88091 b900887f  ....4. .........
 0410 883199f0 3093bc00 8091bc00 87fffccf  .1..0...........
 0420 2093bb00 9093bc00 8091bc00 87fffccf   ...............
 0430 8091b900 887f8831 69f7df91 cf910895  .......1i.......
 0440 cf93c82f 8a3051f0 8091c000 85fffccf  .../.0Q.........
 0450 c093c600 80e090e0 cf910895 60e070e0  ............`.p.
 0460 8de00e94 2002f0cf 1092c500 89e18093  .... ...........
 0470 c4001092 c00088e1 8093c100 86e08093  ................
 0480 c20080e0 91e09093 11018093 10010895  ................
 0490 8091c000 87fffccf 8091c600 08950895  ................
 04a0 cf93c82f 61e080e0 0e94c001 6c2f8eef  .../a.......l/..
 04b0 0e94c001 60e080e0 cf910c94 c0010f93  ....`...........
 04c0 1f93cf93 df93c82f 072f142f d52f0e94  ......././././..
 04d0 c001602f 81e08c0f 0e94c001 612f82e0  ..`/........a/..
 04e0 8c0f0e94 c0016d2f 83e08c0f df91cf91  ......m/........
 04f0 1f910f91 0c94c001 0e94f500 0e943402  ..............4.
 0500 84e60e94 500240ed 57e060e0 70e086e0  ....P.@.W.`.p...
 0510 0e945f02 48ee53e0 60e070e0 8ae00e94  .._.H.S.`.p.....
 0520 5f0240e4 56e060e0 70e08ee0 0e945f02  _.@.V.`.p....._.
 0530 4ced55e0 60e070e0 82e10e94 5f02ffcf  L.U.`.p....._...
 0540 ee0fff1f 0590f491 e02d0994 a0e0b0e0  .........-......
 0550 eceaf2e0 0c946b05 ae01495f 5f4fda01  ......k...I__O..
 0560 6d917d91 ad010ee0 11e0f801 82819381  m.}.............
 0570 dc011396 2c911397 28601396 2c930e94  ....,...(`..,...
 0580 cc02d801 1296ed91 fc911397 2381277f  ............#.'.
 0590 2383e4e0 0c948705 abe0b0e0 e2edf2e0  #...............
 05a0 0c945d05 6c017b01 8a01fc01 17821682  ..].l.{.........
 05b0 838181ff ccc1ce01 01963c01 f6019381  ..........<.....
 05c0 f70193fd 859193ff 81917f01 882309f4  .............#..
 05d0 bac18532 39f493fd 859193ff 81917f01  ...29...........
 05e0 853229f4 b60190e0 0e94c304 e7cf912c  .2)............,
 05f0 212c312c ffe1f315 d8f08b32 79f038f4  !,1,.......2y.8.
 0600 803279f0 8332a1f4 232d2061 1dc08d32  .2y..2..#- a...2
 0610 61f08033 69f4232d 216016c0 832d8260  a..3i.#-!`...-.`
 0620 382ee32d e4603e2e 2ac0f32d f8601dc0  8..-.`>.*..-.`..
 0630 37fc2dc0 20ed280f 2a3040f0 8e32b9f4  7.-. .(.*0@..2..
 0640 36fc81c1 232d2064 322e19c0 36fe06c0  6...#- d2...6...
 0650 8ae0989e 200d1124 922e11c0 eae02e9e  .... ..$........
 0660 200d1124 222ef32d f0623f2e 08c08c36   ..$"..-.b?....6
 0670 21f4832d 8068382e 02c08836 41f4f701  !..-.h8....6A...
 0680 93fd8591 93ff8191 7f018111 b3cf982f  .............../
 0690 9f7d9554 933028f4 0c5f1f4f 9fe39983  .}.T.0(.._.O....
 06a0 0dc08336 31f08337 71f08335 09f059c0  ...61..7q..5..Y.
 06b0 21c0f801 80818983 0e5f1f4f 88248394  !........_.O.$..
 06c0 912c5301 13c02801 f2e04f0e 511cf801  .,S...(...O.Q...
 06d0 a080b180 36fe03c0 692d70e0 02c06fef  ....6...i-p...o.
 06e0 7fefc501 0e94b804 4c018201 f32dff77  ........L....-.w
 06f0 3f2e16c0 280122e0 420e511c f801a080  ?...(.".B.Q.....
 0700 b18036fe 03c0692d 70e002c0 6fef7fef  ..6...i-p...o...
 0710 c5010e94 ad044c01 f32df068 3f2e8201  ......L..-.h?...
 0720 33fc1bc0 822d90e0 88169906 b0f4b601  3....-..........
 0730 80e290e0 0e94c304 2a94f4cf f50137fc  ........*.....7.
 0740 859137fe 81915f01 b60190e0 0e94c304  ..7..._.........
 0750 21102a94 21e0821a 91088114 910471f7  !.*.!.........q.
 0760 e8c08436 11f08936 41f5f801 37fe07c0  ...6...6A...7...
 0770 60817181 82819381 0c5f1f4f 08c06081  `.q......_.O..`.
 0780 7181072e 000c880b 990b0e5f 1f4ff32d  q.........._.O.-
 0790 ff763f2e 97ff09c0 90958095 70956195  .v?.........p.a.
 07a0 7f4f8f4f 9f4ff068 3f2e2ae0 30e0a301  .O.O.O.h?.*.0...
 07b0 0e94ff04 882e8618 45c08537 31f4232d  ........E..71.#-
 07c0 2f7eb22e 2ae030e0 25c0932d 997fb92e  /~..*.0.%..-....
 07d0 8f36c1f0 18f48835 79f0b5c0 803719f0  .6.....5y....7..
 07e0 883721f0 b0c0e92f e061be2e b4fe0dc0  .7!..../.a......
 07f0 fb2df460 bf2e09c0 34fe0ac0 292f2660  .-.`....4...)/&`
 0800 b22e06c0 28e030e0 05c020e1 30e002c0  ....(.0... .0...
 0810 20e132e0 f801b7fe 07c06081 71818281   .2.......`.q...
 0820 93810c5f 1f4f06c0 60817181 80e090e0  ..._.O..`.q.....
 0830 0e5f1f4f a3010e94 ff04882e 8618fb2d  ._.O...........-
 0840 ff773f2e 36fe0dc0 232d2e7f a22e8914  .w?.6...#-......
 0850 58f434fe 0bc032fc 09c0832d 8e7ea82e  X.4...2....-.~..
 0860 05c0b82c a32c03c0 b82c01c0 b92ca4fe  ...,.,...,...,..
 0870 0fc0fe01 e80df11d 80818033 21f49a2d  ...........3!..-
 0880 997ea92e 09c0a2fe 06c0b394 b39404c0  .~..............
 0890 8a2d8678 09f0b394 a3fc11c0 a0fe06c0  .-.x............
 08a0 b21488f4 280c922c 9b180ec0 b21460f4  ....(..,......`.
 08b0 b60180e2 90e00e94 c304b394 f7cfb214  ................
 08c0 18f42b18 02c0982c 212ca4fe 10c0b601  ..+....,!,......
 08d0 80e390e0 0e94c304 a2fe17c0 a1fc03c0  ................
 08e0 88e790e0 02c088e5 90e0b601 0cc08a2d  ...............-
 08f0 867859f0 a1fe02c0 8be201c0 80e2a7fc  .xY.............
 0900 8de2b601 90e00e94 c3048914 38f4b601  ............8...
 0910 80e390e0 0e94c304 9a94f7cf 8a94f301  ................
 0920 e80df11d 8081b601 90e00e94 c3048110  ................
 0930 f5cf2220 09f442ce b60180e2 90e00e94  .." ..B.........
 0940 c3042a94 f6cff601 86819781 02c08fef  ..*.............
 0950 9fef2b96 e2e10c94 7905fc01 05906150  ..+.....y.....aP
 0960 70400110 d8f78095 90958e0f 9f1f0895  p@..............
 0970 fc016150 70400190 0110d8f7 80959095  ..aPp@..........
 0980 8e0f9f1f 08950f93 1f93cf93 df93fb01  ................
 0990 238121fd 03c08fef 9fef2cc0 22ff16c0  #.!.......,."...
 09a0 46815781 24813581 42175307 44f4a081  F.W.$.5.B.S.D...
 09b0 b1819d01 2f5f3f4f 31832083 8c932681  ..../_?O1. ...&.
 09c0 37812f5f 3f4f3783 268314c0 8b01ec01  7./_?O7.&.......
 09d0 fb010084 f185e02d 0995892b e1f6d801  .......-...+....
 09e0 16968d91 9c911797 01961796 9c938e93  ................
 09f0 1697ce01 df91cf91 1f910f91 0895fa01  ................
 0a00 aa272830 51f12031 81f1e894 6f936e7f  .'(0Q. 1....o.n.
 0a10 6e5f7f4f 8f4f9f4f af4fb1e0 3ed0b4e0  n_.O.O.O.O..>...
 0a20 3cd0670f 781f891f 9a1fa11d 680f791f  <.g.x.......h.y.
 0a30 8a1f911d a11d6a0f 711d811d 911da11d  ......j.q.......
 0a40 20d009f4 68943f91 2ae0269f 11243019   ...h.?.*.&..$0.
 0a50 305d3193 def6cf01 0895462f 4770405d  0]1.......F/Gp@]
 0a60 4193b3e0 0fd0c9f7 f6cf462f 4f70405d  A.........F/Op@]
 0a70 4a3318f0 495d31fd 40524193 02d0a9f7  J3..I]1.@RA.....
 0a80 eacfb4e0 a6959795 87957795 6795ba95  ..........w.g...
 0a90 c9f70097 61057105 08959b01 ac010a2e  ....a.q.........
 0aa0 06945795 47953795 2795ba95 c9f7620f  ..W.G.7.'.....b.
 0ab0 731f841f 951fa01d 08952f92 3f924f92  s........./.?.O.
 0ac0 5f926f92 7f928f92 9f92af92 bf92cf92  _.o.............
 0ad0 df92ef92 ff920f93 1f93cf93 df93cdb7  ................
 0ae0 deb7ca1b db0b0fb6 f894debf 0fbecdbf  ................
 0af0 09942a88 39884888 5f846e84 7d848c84  ..*.9.H._.n.}...
 0b00 9b84aa84 b984c884 df80ee80 fd800c81  ................
 0b10 1b81aa81 b981ce0f d11d0fb6 f894debf  ................
 0b20 0fbecdbf ed010895 f894ffcf           ............    
Contents of section .stab:
 0000 01000000 00000902 b3100000 08000000  ................
 0010 64000200 ea010000 01000000 64000200  d...........d...
 0020 ea010000 3f000000 3c000000 00000000  ....?...<.......
 0030 4e000000 80000000 00000000 6e000000  N...........n...
 0040 80000000 00000000 88000000 80000000  ................
 0050 00000000 bf000000 80000000 00000000  ................
 0060 e5000000 80000000 00000000 1a010000  ................
 0070 80000000 00000000 92010000 80000000  ................
 0080 00000000 e8010000 80000000 00000000  ................
 0090 3a020000 80000000 00000000 7f020000  :...............
 00a0 80000000 00000000 a7020000 80000000  ................
 00b0 00000000 d5020000 80000000 00000000  ................
 00c0 ff020000 80000000 00000000 28030000  ............(...
 00d0 80000000 00000000 42030000 80000000  ........B.......
 00e0 00000000 5d030000 80000000 00000000  ....]...........
 00f0 7d030000 80000000 00000000 9e030000  }...............
 0100 80000000 00000000 b9030000 80000000  ................
 0110 00000000 d9030000 80000000 00000000  ................
 0120 fe030000 80000000 00000000 28040000  ............(...
 0130 80000000 00000000 4c040000 80000000  ........L.......
 0140 00000000 75040000 80000000 00000000  ....u...........
 0150 a3040000 80000000 00000000 c9040000  ................
 0160 80000000 00000000 e9040000 80000000  ................
 0170 00000000 0e050000 80000000 00000000  ................
 0180 38050000 80000000 00000000 67050000  8...........g...
 0190 80000000 00000000 90050000 80000000  ................
 01a0 00000000 be050000 80000000 00000000  ................
 01b0 f1050000 80000000 00000000 12060000  ................
 01c0 80000000 00000000 2d060000 80000000  ........-.......
 01d0 00000000 4d060000 80000000 00000000  ....M...........
 01e0 72060000 80000000 00000000 9c060000  r...............
 01f0 80000000 00000000 c0060000 80000000  ................
 0200 00000000 e9060000 80000000 00000000  ................
 0210 17070000 80000000 00000000 3d070000  ............=...
 0220 80000000 00000000 5d070000 80000000  ........].......
 0230 00000000 82070000 80000000 00000000  ................
 0240 ac070000 80000000 00000000 db070000  ................
 0250 80000000 00000000 04080000 80000000  ................
 0260 00000000 32080000 80000000 00000000  ....2...........
 0270 65080000 80000000 00000000 79080000  e...........y...
 0280 82000000 00000000 9e080000 82000000  ................
 0290 00000000 bc080000 82000000 00000000  ................
 02a0 e0080000 82000000 250f0000 00090000  ........%.......
 02b0 82000000 00000000 28090000 82000000  ........(.......
 02c0 3bb80000 46090000 80007d00 00000000  ;...F.....}.....
 02d0 5b090000 80007e00 00000000 71090000  [.....~.....q...
 02e0 80007f00 00000000 86090000 80008000  ................
 02f0 00000000 9c090000 80008100 00000000  ................
 0300 b1090000 80008200 00000000 c7090000  ................
 0310 80008400 00000000 dc090000 80008500  ................
 0320 00000000 f2090000 80009200 00000000  ................
 0330 080a0000 80009700 00000000 200a0000  ............ ...
 0340 8000a300 00000000 3b0a0000 8000a800  ........;.......
 0350 00000000 570a0000 8000ad00 00000000  ....W...........
 0360 730a0000 8000b200 00000000 900a0000  s...............
 0370 8000b700 00000000 ac0a0000 8000bc00  ................
 0380 00000000 c90a0000 8000c400 00000000  ................
 0390 e50a0000 8000cb00 00000000 020b0000  ................
 03a0 8000d900 00000000 1c0b0000 8000de00  ................
 03b0 00000000 370b0000 8000e300 00000000  ....7...........
 03c0 520b0000 8000e800 00000000 6e0b0000  R...........n...
 03d0 8000ed00 00000000 890b0000 8000f200  ................
 03e0 00000000 a50b0000 8000fa00 00000000  ................
 03f0 c00b0000 80000101 00000000 dc0b0000  ................
 0400 80001501 00000000 f30b0000 80001a01  ................
 0410 00000000 00000000 a2000000 00000000  ................
 0420 00000000 a2000000 00000000 0b0c0000  ................
 0430 80004d00 00000000 250c0000 80005100  ..M.....%.....Q.
 0440 00000000 00000000 a2000000 00000000  ................
 0450 00000000 a2000000 00000000 400c0000  ............@...
 0460 82000000 6e130000 600c0000 8000f400  ....n...`.......
 0470 00000000 00000000 a2000000 00000000  ................
 0480 00000000 a2000000 00000000 00000000  ................
 0490 a2000000 00000000 ae0c0000 82000000  ................
 04a0 00000000 d20c0000 82000000 d8040000  ................
 04b0 fa0c0000 8000d800 00000000 00000000  ................
 04c0 a2000000 00000000 00000000 a2000000  ................
 04d0 00000000 0e0d0000 82000000 85330000  .............3..
 04e0 2b0d0000 82000000 900e0000 530d0000  +...........S...
 04f0 80002800 00000000 790d0000 80006200  ..(.....y.....b.
 0500 00000000 00000000 a2000000 00000000  ................
 0510 900d0000 80000000 00000000 5a0e0000  ............Z...
 0520 80001501 00000000 6e0e0000 8000b603  ........n.......
 0530 00000000 00000000 a2000000 00000000  ................
 0540 830e0000 24001000 f8040000 00000000  ....$...........
 0550 2e000000 f8040000 00000000 44001000  ............D...
 0560 00000000 00000000 44001200 00000000  ........D.......
 0570 00000000 44001300 04000000 00000000  ....D...........
 0580 44001500 08000000 00000000 44001700  D...........D...
 0590 0e000000 00000000 44001800 1c000000  ........D.......
 05a0 00000000 44001900 2a000000 00000000  ....D...*.......
 05b0 44001a00 38000000 00000000 24000000  D...8.......$...
 05c0 48000000 00000000 4e000000 40050000  H.......N...@...
 05d0 00000000 64000000 ea010000 08000000  ....d...........
 05e0 64000200 ea010000 8f0e0000 64000200  d...........d...
 05f0 ea010000 3f000000 3c000000 00000000  ....?...<.......
 0600 4e000000 80000000 00000000 6e000000  N...........n...
 0610 80000000 00000000 88000000 80000000  ................
 0620 00000000 bf000000 80000000 00000000  ................
 0630 e5000000 80000000 00000000 1a010000  ................
 0640 80000000 00000000 92010000 80000000  ................
 0650 00000000 e8010000 80000000 00000000  ................
 0660 3a020000 80000000 00000000 7f020000  :...............
 0670 80000000 00000000 a7020000 80000000  ................
 0680 00000000 d5020000 80000000 00000000  ................
 0690 ff020000 80000000 00000000 28030000  ............(...
 06a0 80000000 00000000 42030000 80000000  ........B.......
 06b0 00000000 5d030000 80000000 00000000  ....]...........
 06c0 7d030000 80000000 00000000 9e030000  }...............
 06d0 80000000 00000000 b9030000 80000000  ................
 06e0 00000000 d9030000 80000000 00000000  ................
 06f0 fe030000 80000000 00000000 28040000  ............(...
 0700 80000000 00000000 4c040000 80000000  ........L.......
 0710 00000000 75040000 80000000 00000000  ....u...........
 0720 a3040000 80000000 00000000 c9040000  ................
 0730 80000000 00000000 e9040000 80000000  ................
 0740 00000000 0e050000 80000000 00000000  ................
 0750 38050000 80000000 00000000 67050000  8...........g...
 0760 80000000 00000000 90050000 80000000  ................
 0770 00000000 be050000 80000000 00000000  ................
 0780 f1050000 80000000 00000000 12060000  ................
 0790 80000000 00000000 2d060000 80000000  ........-.......
 07a0 00000000 4d060000 80000000 00000000  ....M...........
 07b0 72060000 80000000 00000000 9c060000  r...............
 07c0 80000000 00000000 c0060000 80000000  ................
 07d0 00000000 e9060000 80000000 00000000  ................
 07e0 17070000 80000000 00000000 3d070000  ............=...
 07f0 80000000 00000000 5d070000 80000000  ........].......
 0800 00000000 82070000 80000000 00000000  ................
 0810 ac070000 80000000 00000000 db070000  ................
 0820 80000000 00000000 04080000 80000000  ................
 0830 00000000 32080000 80000000 00000000  ....2...........
 0840 65080000 80000000 00000000 9e080000  e...............
 0850 c2000000 00000000 bc080000 c2000000  ................
 0860 00000000 e0080000 c2000000 250f0000  ............%...
 0870 00090000 c2000000 00000000 28090000  ............(...
 0880 c2000000 3bb80000 400c0000 c2000000  ....;...@.......
 0890 6e130000 ae0c0000 c2000000 00000000  n...............
 08a0 d20c0000 c2000000 d8040000 0e0d0000  ................
 08b0 c2000000 85330000 2b0d0000 c2000000  .....3..+.......
 08c0 900e0000 950e0000 24000a00 ea010000  ........$.......
 08d0 00000000 2e000000 ea010000 00000000  ................
 08e0 44000a00 00000000 00000000 44001500  D...........D...
 08f0 00000000 00000000 44001600 06000000  ........D.......
 0900 00000000 44001800 0a000000 00000000  ....D...........
 0910 24000000 12000000 00000000 4e000000  $...........N...
 0920 fc010000 a60e0000 24001b00 fc010000  ........$.......
 0930 c40e0000 40001b00 18000000 00000000  ....@...........
 0940 2e000000 fc010000 00000000 44001b00  ............D...
 0950 00000000 00000000 44001f00 00000000  ........D.......
 0960 00000000 44004400 0e000000 00000000  ....D.D.........
 0970 44004500 1e000000 00000000 44001f00  D.E.........D...
 0980 28000000 00000000 44004100 30000000  (.......D.A.0...
 0990 00000000 44004200 3c000000 00000000  ....D.B.<.......
 09a0 44002100 42000000 00000000 44002200  D.!.B.......D.".
 09b0 4e000000 00000000 44002400 54000000  N.......D.$.T...
 09c0 00000000 44002500 60000000 00000000  ....D.%.`.......
 09d0 44002b00 66000000 00000000 44002c00  D.+.f.......D.,.
 09e0 72000000 00000000 44002e00 78000000  r.......D...x...
 09f0 00000000 44002f00 84000000 00000000  ....D./.........
 0a00 44003100 8a000000 00000000 44003200  D.1.........D.2.
 0a10 96000000 00000000 44003400 9c000000  ........D.4.....
 0a20 00000000 44003500 a8000000 00000000  ....D.5.........
 0a30 44002700 ae000000 00000000 44002800  D.'.........D.(.
 0a40 ba000000 00000000 44003800 c0000000  ........D.8.....
 0a50 00000000 44003900 cc000000 00000000  ....D.9.........
 0a60 44003b00 d2000000 00000000 44003c00  D.;.........D.<.
 0a70 de000000 00000000 44003e00 e4000000  ........D.>.....
 0a80 00000000 44003f00 f0000000 00000000  ....D.?.........
 0a90 24000000 f6000000 00000000 4e000000  $...........N...
 0aa0 f2020000 d20e0000 24004900 f2020000  ........$.I.....
 0ab0 00000000 2e000000 f2020000 00000000  ................
 0ac0 44004900 00000000 00000000 44005100  D.I.........D.Q.
 0ad0 00000000 00000000 44005300 06000000  ........D.S.....
 0ae0 00000000 44005400 0e000000 00000000  ....D.T.........
 0af0 24000000 10000000 00000000 4e000000  $...........N...
 0b00 02030000 e40e0000 24005600 02030000  ........$.V.....
 0b10 00000000 2e000000 02030000 00000000  ................
 0b20 44005600 00000000 00000000 44005f00  D.V.........D._.
 0b30 00000000 00000000 44006100 06000000  ........D.a.....
 0b40 00000000 44006200 0e000000 00000000  ....D.b.........
 0b50 24000000 10000000 00000000 4e000000  $...........N...
 0b60 12030000 f50e0000 24006400 12030000  ........$.d.....
 0b70 00000000 2e000000 12030000 00000000  ................
 0b80 44006400 00000000 00000000 44006b00  D.d.........D.k.
 0b90 00000000 00000000 44006e00 04000000  ........D.n.....
 0ba0 00000000 24000000 08000000 00000000  ....$...........
 0bb0 4e000000 1a030000 0b0f0000 24007000  N...........$.p.
 0bc0 1a030000 210f0000 40007000 18000000  ....!...@.p.....
 0bd0 2d0f0000 40007000 16000000 00000000  -...@.p.........
 0be0 2e000000 1a030000 00000000 44007000  ............D.p.
 0bf0 00000000 00000000 44007d00 00000000  ........D.}.....
 0c00 00000000 44007f00 0a000000 00000000  ....D...........
 0c10 44008100 10000000 00000000 44008200  D...........D...
 0c20 18000000 00000000 24000000 1a000000  ........$.......
 0c30 00000000 4e000000 34030000 3b0f0000  ....N...4...;...
 0c40 24008400 34030000 510f0000 40008400  $...4...Q...@...
 0c50 18000000 00000000 2e000000 34030000  ............4...
 0c60 00000000 44008400 00000000 00000000  ....D...........
 0c70 44008d00 00000000 00000000 44008f00  D...........D...
 0c80 04000000 00000000 44009100 0a000000  ........D.......
 0c90 00000000 44009200 12000000 00000000  ....D...........
 0ca0 24000000 14000000 00000000 4e000000  $...........N...
 0cb0 48030000 5d0f0000 24009600 48030000  H...]...$...H...
 0cc0 00000000 2e000000 48030000 00000000  ........H.......
 0cd0 44009600 00000000 00000000 44005100  D...........D.Q.
 0ce0 00000000 00000000 44007d00 02000000  ........D.}.....
 0cf0 00000000 44007f00 04000000 00000000  ....D...........
 0d00 44006b00 06000000 00000000 44009e00  D.k.........D...
 0d10 0a000000 00000000 44005100 10000000  ........D.Q.....
 0d20 00000000 44005300 14000000 00000000  ....D.S.........
 0d30 44007d00 1c000000 00000000 44007f00  D.}.........D...
 0d40 20000000 00000000 44008100 24000000   .......D...$...
 0d50 00000000 44006b00 2c000000 00000000  ....D.k.,.......
 0d60 44009e00 30000000 00000000 4400a200  D...0.......D...
 0d70 36000000 00000000 24000000 38000000  6.......$...8...
 0d80 00000000 4e000000 80030000 7f0f0000  ....N...........
 0d90 2400a400 80030000 920f0000 4000a400  $...........@...
 0da0 1d000000 510f0000 4000a400 1c000000  ....Q...@.......
 0db0 00000000 2e000000 80030000 00000000  ................
 0dc0 4400a400 00000000 00000000 44005100  D...........D.Q.
 0dd0 08000000 00000000 44005300 0e000000  ........D.S.....
 0de0 00000000 44006b00 16000000 00000000  ....D.k.........
 0df0 4400af00 1a000000 00000000 44007d00  D...........D.}.
 0e00 20000000 00000000 44007f00 26000000   .......D...&...
 0e10 00000000 44008100 2c000000 00000000  ....D...,.......
 0e20 44006b00 34000000 00000000 4400b100  D.k.4.......D...
 0e30 38000000 00000000 44008d00 3e000000  8.......D...>...
 0e40 00000000 44008f00 42000000 00000000  ....D...B.......
 0e50 44009100 48000000 00000000 44006b00  D...H.......D.k.
 0e60 50000000 00000000 4400b400 54000000  P.......D...T...
 0e70 00000000 44008d00 5a000000 00000000  ....D...Z.......
 0e80 44008f00 5e000000 00000000 44009100  D...^.......D...
 0e90 64000000 00000000 44006b00 6c000000  d.......D.k.l...
 0ea0 00000000 4400b700 70000000 00000000  ....D...p.......
 0eb0 44005f00 76000000 00000000 44006100  D._.v.......D.a.
 0ec0 7c000000 00000000 44005100 84000000  |.......D.Q.....
 0ed0 00000000 44007d00 86000000 00000000  ....D.}.........
 0ee0 44007f00 88000000 00000000 44006b00  D...........D.k.
 0ef0 8a000000 00000000 44009e00 8e000000  ........D.......
 0f00 00000000 44005100 94000000 00000000  ....D.Q.........
 0f10 44005300 98000000 00000000 44007d00  D.S.........D.}.
 0f20 a0000000 00000000 44007f00 a4000000  ........D.......
 0f30 00000000 44008100 a8000000 00000000  ....D...........
 0f40 44006b00 b0000000 00000000 44009e00  D.k.........D...
 0f50 b4000000 00000000 4400bd00 ba000000  ........D.......
 0f60 00000000 24000000 c0000000 00000000  ....$...........
 0f70 4e000000 40040000 00000000 64000000  N...@.......d...
 0f80 40040000 08000000 64000200 40040000  @.......d...@...
 0f90 a90f0000 64000200 40040000 3f000000  ....d...@...?...
 0fa0 3c000000 00000000 4e000000 80000000  <.......N.......
 0fb0 00000000 6e000000 80000000 00000000  ....n...........
 0fc0 88000000 80000000 00000000 bf000000  ................
 0fd0 80000000 00000000 e5000000 80000000  ................
 0fe0 00000000 1a010000 80000000 00000000  ................
 0ff0 92010000 80000000 00000000 e8010000  ................
 1000 80000000 00000000 3a020000 80000000  ........:.......
 1010 00000000 7f020000 80000000 00000000  ................
 1020 a7020000 80000000 00000000 d5020000  ................
 1030 80000000 00000000 ff020000 80000000  ................
 1040 00000000 28030000 80000000 00000000  ....(...........
 1050 42030000 80000000 00000000 5d030000  B...........]...
 1060 80000000 00000000 7d030000 80000000  ........}.......
 1070 00000000 9e030000 80000000 00000000  ................
 1080 b9030000 80000000 00000000 d9030000  ................
 1090 80000000 00000000 fe030000 80000000  ................
 10a0 00000000 28040000 80000000 00000000  ....(...........
 10b0 4c040000 80000000 00000000 75040000  L...........u...
 10c0 80000000 00000000 a3040000 80000000  ................
 10d0 00000000 c9040000 80000000 00000000  ................
 10e0 e9040000 80000000 00000000 0e050000  ................
 10f0 80000000 00000000 38050000 80000000  ........8.......
 1100 00000000 67050000 80000000 00000000  ....g...........
 1110 90050000 80000000 00000000 be050000  ................
 1120 80000000 00000000 f1050000 80000000  ................
 1130 00000000 12060000 80000000 00000000  ................
 1140 2d060000 80000000 00000000 4d060000  -...........M...
 1150 80000000 00000000 72060000 80000000  ........r.......
 1160 00000000 9c060000 80000000 00000000  ................
 1170 c0060000 80000000 00000000 e9060000  ................
 1180 80000000 00000000 17070000 80000000  ................
 1190 00000000 3d070000 80000000 00000000  ....=...........
 11a0 5d070000 80000000 00000000 82070000  ]...............
 11b0 80000000 00000000 ac070000 80000000  ................
 11c0 00000000 db070000 80000000 00000000  ................
 11d0 04080000 80000000 00000000 32080000  ............2...
 11e0 80000000 00000000 65080000 80000000  ........e.......
 11f0 00000000 9e080000 c2000000 00000000  ................
 1200 bc080000 c2000000 00000000 e0080000  ................
 1210 c2000000 250f0000 00090000 c2000000  ....%...........
 1220 00000000 28090000 c2000000 3bb80000  ....(.......;...
 1230 400c0000 c2000000 6e130000 0e0d0000  @.......n.......
 1240 c2000000 85330000 2b0d0000 c2000000  .....3..+.......
 1250 900e0000 d20c0000 c2000000 d8040000  ................
 1260 b20f0000 24001300 40040000 c60f0000  ....$...@.......
 1270 40001300 1c000000 d10f0000 40001300  @...........@...
 1280 16000000 00000000 2e000000 40040000  ............@...
 1290 00000000 44001300 00000000 00000000  ....D...........
 12a0 44001400 04000000 00000000 44001700  D...........D...
 12b0 08000000 00000000 44001900 10000000  ........D.......
 12c0 00000000 44001b00 14000000 00000000  ....D...........
 12d0 44001500 1c000000 00000000 24000000  D...........$...
 12e0 28000000 00000000 4e000000 68040000  (.......N...h...
 12f0 e70f0000 24000900 68040000 00000000  ....$...h.......
 1300 2e000000 68040000 00000000 44000900  ....h.......D...
 1310 00000000 00000000 44000a00 00000000  ........D.......
 1320 00000000 44000b00 04000000 00000000  ....D...........
 1330 44000c00 0a000000 00000000 44000d00  D...........D...
 1340 0e000000 00000000 44000e00 14000000  ........D.......
 1350 00000000 44001000 1a000000 00000000  ....D...........
 1360 24000000 28000000 00000000 4e000000  $...(.......N...
 1370 90040000 f90f0000 24001d00 90040000  ........$.......
 1380 00000000 2e000000 90040000 00000000  ................
 1390 44001d00 00000000 00000000 44001e00  D...........D...
 13a0 00000000 00000000 44002000 08000000  ........D. .....
 13b0 00000000 44002100 0c000000 00000000  ....D.!.........
 13c0 24000000 0e000000 00000000 4e000000  $...........N...
 13d0 9e040000 0d100000 26000700 00018000  ........&.......
 13e0 00000000 64000000 9e040000 08000000  ....d...........
 13f0 64000200 9e040000 20100000 64000200  d....... ...d...
 1400 9e040000 3f000000 3c000000 00000000  ....?...<.......
 1410 4e000000 80000000 00000000 6e000000  N...........n...
 1420 80000000 00000000 88000000 80000000  ................
 1430 00000000 bf000000 80000000 00000000  ................
 1440 e5000000 80000000 00000000 1a010000  ................
 1450 80000000 00000000 92010000 80000000  ................
 1460 00000000 e8010000 80000000 00000000  ................
 1470 3a020000 80000000 00000000 7f020000  :...............
 1480 80000000 00000000 a7020000 80000000  ................
 1490 00000000 d5020000 80000000 00000000  ................
 14a0 ff020000 80000000 00000000 28030000  ............(...
 14b0 80000000 00000000 42030000 80000000  ........B.......
 14c0 00000000 5d030000 80000000 00000000  ....]...........
 14d0 7d030000 80000000 00000000 9e030000  }...............
 14e0 80000000 00000000 b9030000 80000000  ................
 14f0 00000000 d9030000 80000000 00000000  ................
 1500 fe030000 80000000 00000000 28040000  ............(...
 1510 80000000 00000000 4c040000 80000000  ........L.......
 1520 00000000 75040000 80000000 00000000  ....u...........
 1530 a3040000 80000000 00000000 c9040000  ................
 1540 80000000 00000000 e9040000 80000000  ................
 1550 00000000 0e050000 80000000 00000000  ................
 1560 38050000 80000000 00000000 67050000  8...........g...
 1570 80000000 00000000 90050000 80000000  ................
 1580 00000000 be050000 80000000 00000000  ................
 1590 f1050000 80000000 00000000 12060000  ................
 15a0 80000000 00000000 2d060000 80000000  ........-.......
 15b0 00000000 4d060000 80000000 00000000  ....M...........
 15c0 72060000 80000000 00000000 9c060000  r...............
 15d0 80000000 00000000 c0060000 80000000  ................
 15e0 00000000 e9060000 80000000 00000000  ................
 15f0 17070000 80000000 00000000 3d070000  ............=...
 1600 80000000 00000000 5d070000 80000000  ........].......
 1610 00000000 82070000 80000000 00000000  ................
 1620 ac070000 80000000 00000000 db070000  ................
 1630 80000000 00000000 04080000 80000000  ................
 1640 00000000 32080000 80000000 00000000  ....2...........
 1650 65080000 80000000 00000000 2a100000  e...........*...
 1660 82000000 00000000 34100000 82000000  ........4.......
 1670 00000000 3a100000 82000000 00000000  ....:...........
 1680 ae0c0000 c2000000 00000000 e0080000  ................
 1690 c2000000 250f0000 00090000 c2000000  ....%...........
 16a0 00000000 28090000 c2000000 3bb80000  ....(.......;...
 16b0 d20c0000 c2000000 d8040000 9e080000  ................
 16c0 c2000000 00000000 400c0000 c2000000  ........@.......
 16d0 6e130000 0e0d0000 c2000000 85330000  n............3..
 16e0 2b0d0000 c2000000 900e0000 00000000  +...............
 16f0 a2000000 00000000 00000000 a2000000  ................
 1700 00000000 00000000 a2000000 00000000  ................
 1710 43100000 24000300 9e040000 00000000  C...$...........
 1720 2e000000 9e040000 00000000 44000300  ............D...
 1730 00000000 00000000 24000000 02000000  ........$.......
 1740 00000000 4e000000 a0040000 58100000  ....N.......X...
 1750 24000700 a0040000 76100000 40000700  $.......v...@...
 1760 1c000000 00000000 2e000000 a0040000  ................
 1770 00000000 44000700 00000000 00000000  ....D...........
 1780 44000700 00000000 00000000 44000f00  D...........D...
 1790 04000000 00000000 44001000 0c000000  ........D.......
 17a0 00000000 44001100 14000000 00000000  ....D...........
 17b0 44001200 18000000 00000000 44001100  D...........D...
 17c0 1a000000 00000000 24000000 1e000000  ........$.......
 17d0 00000000 4e000000 be040000 87100000  ....N...........
 17e0 24001400 be040000 9f100000 40001400  $...........@...
 17f0 1c000000 00000000 2e000000 be040000  ................
 1800 00000000 44001400 00000000 00000000  ....D...........
 1810 44001900 10000000 00000000 44001a00  D...........D...
 1820 14000000 00000000 44001c00 1e000000  ........D.......
 1830 00000000 44001d00 28000000 00000000  ....D...(.......
 1840 44001e00 2e000000 00000000 44001d00  D...........D...
 1850 36000000 00000000 24000000 3a000000  6.......$...:...
 1860 00000000 4e000000 f8040000 00000000  ....N...........
 1870 64000000 f8040000                    d.......        
Contents of section .stabstr:
 0000 006d6169 6e2e6300 2f2f6d6e 742f632f  .main.c.//mnt/c/
 0010 55736572 732f5573 65723132 332f6769  Users/User123/gi
 0020 742f4b72 69737468 6f656665 722d526f  t/Kristhoefer-Ro
 0030 626f7469 63732f73 6f757263 652f0067  botics/source/.g
 0040 6363325f 636f6d70 696c6564 2e00696e  cc2_compiled..in
 0050 743a7428 302c3129 3d722830 2c31293b  t:t(0,1)=r(0,1);
 0060 2d333237 36383b33 32373637 3b006368  -32768;32767;.ch
 0070 61723a74 28302c32 293d7228 302c3229  ar:t(0,2)=r(0,2)
 0080 3b303b31 32373b00 6c6f6e67 20696e74  ;0;127;.long int
 0090 3a742830 2c33293d 40733332 3b722830  :t(0,3)=@s32;r(0
 00a0 2c33293b 30323030 30303030 30303030  ,3);020000000000
 00b0 3b303137 37373737 37373737 373b0075  ;017777777777;.u
 00c0 6e736967 6e656420 696e743a 7428302c  nsigned int:t(0,
 00d0 34293d72 28302c34 293b303b 30313737  4)=r(0,4);0;0177
 00e0 3737373b 006c6f6e 6720756e 7369676e  777;.long unsign
 00f0 65642069 6e743a74 28302c35 293d4073  ed int:t(0,5)=@s
 0100 33323b72 28302c35 293b303b 30333737  32;r(0,5);0;0377
 0110 37373737 37373737 3b005f5f 696e7431  77777777;.__int1
 0120 32383a74 28302c36 293d4073 3132383b  28:t(0,6)=@s128;
 0130 7228302c 36293b30 32303030 30303030  r(0,6);020000000
 0140 30303030 30303030 30303030 30303030  0000000000000000
 0150 30303030 30303030 30303030 30303030  0000000000000000
 0160 3030303b 30313737 37373737 37373737  000;017777777777
 0170 37373737 37373737 37373737 37373737  7777777777777777
 0180 37373737 37373737 37373737 37373737  7777777777777777
 0190 3b005f5f 696e7431 32382075 6e736967  ;.__int128 unsig
 01a0 6e65643a 7428302c 37293d40 73313238  ned:t(0,7)=@s128
 01b0 3b722830 2c37293b 303b3033 37373737  ;r(0,7);0;037777
 01c0 37373737 37373737 37373737 37373737  7777777777777777
 01d0 37373737 37373737 37373737 37373737  7777777777777777
 01e0 37373737 37373b00 6c6f6e67 206c6f6e  777777;.long lon
 01f0 6720696e 743a7428 302c3829 3d407336  g int:t(0,8)=@s6
 0200 343b7228 302c3829 3b303130 30303030  4;r(0,8);0100000
 0210 30303030 30303030 30303030 30303030  0000000000000000
 0220 3b303037 37373737 37373737 37373737  ;007777777777777
 0230 37373737 37373737 3b006c6f 6e67206c  77777777;.long l
 0240 6f6e6720 756e7369 676e6564 20696e74  ong unsigned int
 0250 3a742830 2c39293d 40733634 3b722830  :t(0,9)=@s64;r(0
 0260 2c39293b 303b3031 37373737 37373737  ,9);0;0177777777
 0270 37373737 37373737 37373737 373b0073  7777777777777;.s
 0280 686f7274 20696e74 3a742830 2c313029  hort int:t(0,10)
 0290 3d722830 2c313029 3b2d3332 3736383b  =r(0,10);-32768;
 02a0 33323736 373b0073 686f7274 20756e73  32767;.short uns
 02b0 69676e65 6420696e 743a7428 302c3131  igned int:t(0,11
 02c0 293d7228 302c3131 293b303b 30313737  )=r(0,11);0;0177
 02d0 3737373b 00736967 6e656420 63686172  777;.signed char
 02e0 3a742830 2c313229 3d407338 3b722830  :t(0,12)=@s8;r(0
 02f0 2c313229 3b2d3132 383b3132 373b0075  ,12);-128;127;.u
 0300 6e736967 6e656420 63686172 3a742830  nsigned char:t(0
 0310 2c313329 3d407338 3b722830 2c313329  ,13)=@s8;r(0,13)
 0320 3b303b32 35353b00 666c6f61 743a7428  ;0;255;.float:t(
 0330 302c3134 293d7228 302c3129 3b343b30  0,14)=r(0,1);4;0
 0340 3b00646f 75626c65 3a742830 2c313529  ;.double:t(0,15)
 0350 3d722830 2c31293b 343b303b 006c6f6e  =r(0,1);4;0;.lon
 0360 6720646f 75626c65 3a742830 2c313629  g double:t(0,16)
 0370 3d722830 2c31293b 343b303b 0073686f  =r(0,1);4;0;.sho
 0380 7274205f 46726163 743a7428 302c3137  rt _Fract:t(0,17
 0390 293d7228 302c3129 3b313b30 3b005f46  )=r(0,1);1;0;._F
 03a0 72616374 3a742830 2c313829 3d722830  ract:t(0,18)=r(0
 03b0 2c31293b 323b303b 006c6f6e 67205f46  ,1);2;0;.long _F
 03c0 72616374 3a742830 2c313929 3d722830  ract:t(0,19)=r(0
 03d0 2c31293b 343b303b 006c6f6e 67206c6f  ,1);4;0;.long lo
 03e0 6e67205f 46726163 743a7428 302c3230  ng _Fract:t(0,20
 03f0 293d7228 302c3129 3b383b30 3b00756e  )=r(0,1);8;0;.un
 0400 7369676e 65642073 686f7274 205f4672  signed short _Fr
 0410 6163743a 7428302c 3231293d 7228302c  act:t(0,21)=r(0,
 0420 31293b31 3b303b00 756e7369 676e6564  1);1;0;.unsigned
 0430 205f4672 6163743a 7428302c 3232293d   _Fract:t(0,22)=
 0440 7228302c 31293b32 3b303b00 756e7369  r(0,1);2;0;.unsi
 0450 676e6564 206c6f6e 67205f46 72616374  gned long _Fract
 0460 3a742830 2c323329 3d722830 2c31293b  :t(0,23)=r(0,1);
 0470 343b303b 00756e73 69676e65 64206c6f  4;0;.unsigned lo
 0480 6e67206c 6f6e6720 5f467261 63743a74  ng long _Fract:t
 0490 28302c32 34293d72 28302c31 293b383b  (0,24)=r(0,1);8;
 04a0 303b005f 53617420 73686f72 74205f46  0;._Sat short _F
 04b0 72616374 3a742830 2c323529 3d722830  ract:t(0,25)=r(0
 04c0 2c31293b 313b303b 005f5361 74205f46  ,1);1;0;._Sat _F
 04d0 72616374 3a742830 2c323629 3d722830  ract:t(0,26)=r(0
 04e0 2c31293b 323b303b 005f5361 74206c6f  ,1);2;0;._Sat lo
 04f0 6e67205f 46726163 743a7428 302c3237  ng _Fract:t(0,27
 0500 293d7228 302c3129 3b343b30 3b005f53  )=r(0,1);4;0;._S
 0510 6174206c 6f6e6720 6c6f6e67 205f4672  at long long _Fr
 0520 6163743a 7428302c 3238293d 7228302c  act:t(0,28)=r(0,
 0530 31293b38 3b303b00 5f536174 20756e73  1);8;0;._Sat uns
 0540 69676e65 64207368 6f727420 5f467261  igned short _Fra
 0550 63743a74 28302c32 39293d72 28302c31  ct:t(0,29)=r(0,1
 0560 293b313b 303b005f 53617420 756e7369  );1;0;._Sat unsi
 0570 676e6564 205f4672 6163743a 7428302c  gned _Fract:t(0,
 0580 3330293d 7228302c 31293b32 3b303b00  30)=r(0,1);2;0;.
 0590 5f536174 20756e73 69676e65 64206c6f  _Sat unsigned lo
 05a0 6e67205f 46726163 743a7428 302c3331  ng _Fract:t(0,31
 05b0 293d7228 302c3129 3b343b30 3b005f53  )=r(0,1);4;0;._S
 05c0 61742075 6e736967 6e656420 6c6f6e67  at unsigned long
 05d0 206c6f6e 67205f46 72616374 3a742830   long _Fract:t(0
 05e0 2c333229 3d722830 2c31293b 383b303b  ,32)=r(0,1);8;0;
 05f0 0073686f 7274205f 41636375 6d3a7428  .short _Accum:t(
 0600 302c3333 293d7228 302c3129 3b323b30  0,33)=r(0,1);2;0
 0610 3b005f41 6363756d 3a742830 2c333429  ;._Accum:t(0,34)
 0620 3d722830 2c31293b 343b303b 006c6f6e  =r(0,1);4;0;.lon
 0630 67205f41 6363756d 3a742830 2c333529  g _Accum:t(0,35)
 0640 3d722830 2c31293b 383b303b 006c6f6e  =r(0,1);8;0;.lon
 0650 67206c6f 6e67205f 41636375 6d3a7428  g long _Accum:t(
 0660 302c3336 293d7228 302c3129 3b383b30  0,36)=r(0,1);8;0
 0670 3b00756e 7369676e 65642073 686f7274  ;.unsigned short
 0680 205f4163 63756d3a 7428302c 3337293d   _Accum:t(0,37)=
 0690 7228302c 31293b32 3b303b00 756e7369  r(0,1);2;0;.unsi
 06a0 676e6564 205f4163 63756d3a 7428302c  gned _Accum:t(0,
 06b0 3338293d 7228302c 31293b34 3b303b00  38)=r(0,1);4;0;.
 06c0 756e7369 676e6564 206c6f6e 67205f41  unsigned long _A
 06d0 6363756d 3a742830 2c333929 3d722830  ccum:t(0,39)=r(0
 06e0 2c31293b 383b303b 00756e73 69676e65  ,1);8;0;.unsigne
 06f0 64206c6f 6e67206c 6f6e6720 5f416363  d long long _Acc
 0700 756d3a74 28302c34 30293d72 28302c31  um:t(0,40)=r(0,1
 0710 293b383b 303b005f 53617420 73686f72  );8;0;._Sat shor
 0720 74205f41 6363756d 3a742830 2c343129  t _Accum:t(0,41)
 0730 3d722830 2c31293b 323b303b 005f5361  =r(0,1);2;0;._Sa
 0740 74205f41 6363756d 3a742830 2c343229  t _Accum:t(0,42)
 0750 3d722830 2c31293b 343b303b 005f5361  =r(0,1);4;0;._Sa
 0760 74206c6f 6e67205f 41636375 6d3a7428  t long _Accum:t(
 0770 302c3433 293d7228 302c3129 3b383b30  0,43)=r(0,1);8;0
 0780 3b005f53 6174206c 6f6e6720 6c6f6e67  ;._Sat long long
 0790 205f4163 63756d3a 7428302c 3434293d   _Accum:t(0,44)=
 07a0 7228302c 31293b38 3b303b00 5f536174  r(0,1);8;0;._Sat
 07b0 20756e73 69676e65 64207368 6f727420   unsigned short 
 07c0 5f416363 756d3a74 28302c34 35293d72  _Accum:t(0,45)=r
 07d0 28302c31 293b323b 303b005f 53617420  (0,1);2;0;._Sat 
 07e0 756e7369 676e6564 205f4163 63756d3a  unsigned _Accum:
 07f0 7428302c 3436293d 7228302c 31293b34  t(0,46)=r(0,1);4
 0800 3b303b00 5f536174 20756e73 69676e65  ;0;._Sat unsigne
 0810 64206c6f 6e67205f 41636375 6d3a7428  d long _Accum:t(
 0820 302c3437 293d7228 302c3129 3b383b30  0,47)=r(0,1);8;0
 0830 3b005f53 61742075 6e736967 6e656420  ;._Sat unsigned 
 0840 6c6f6e67 206c6f6e 67205f41 6363756d  long long _Accum
 0850 3a742830 2c343829 3d722830 2c31293b  :t(0,48)=r(0,1);
 0860 383b303b 00766f69 643a7428 302c3439  8;0;.void:t(0,49
 0870 293d2830 2c343929 002f7573 722f6c69  )=(0,49)./usr/li
 0880 622f6176 722f696e 636c7564 652f6176  b/avr/include/av
 0890 722f696e 74657272 7570742e 68002f75  r/interrupt.h./u
 08a0 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 08b0 64652f61 76722f69 6f2e6800 2f757372  de/avr/io.h./usr
 08c0 2f6c6962 2f617672 2f696e63 6c756465  /lib/avr/include
 08d0 2f617672 2f736672 5f646566 732e6800  /avr/sfr_defs.h.
 08e0 2f757372 2f6c6962 2f617672 2f696e63  /usr/lib/avr/inc
 08f0 6c756465 2f696e74 74797065 732e6800  lude/inttypes.h.
 0900 2f757372 2f6c6962 2f676363 2f617672  /usr/lib/gcc/avr
 0910 2f352e34 2e302f69 6e636c75 64652f73  /5.4.0/include/s
 0920 7464696e 742e6800 2f757372 2f6c6962  tdint.h./usr/lib
 0930 2f617672 2f696e63 6c756465 2f737464  /avr/include/std
 0940 696e742e 6800696e 74385f74 3a742836  int.h.int8_t:t(6
 0950 2c31293d 28302c31 32290075 696e7438  ,1)=(0,12).uint8
 0960 5f743a74 28362c32 293d2830 2c313329  _t:t(6,2)=(0,13)
 0970 00696e74 31365f74 3a742836 2c33293d  .int16_t:t(6,3)=
 0980 28302c31 29007569 6e743136 5f743a74  (0,1).uint16_t:t
 0990 28362c34 293d2830 2c342900 696e7433  (6,4)=(0,4).int3
 09a0 325f743a 7428362c 35293d28 302c3329  2_t:t(6,5)=(0,3)
 09b0 0075696e 7433325f 743a7428 362c3629  .uint32_t:t(6,6)
 09c0 3d28302c 35290069 6e743634 5f743a74  =(0,5).int64_t:t
 09d0 28362c37 293d2830 2c382900 75696e74  (6,7)=(0,8).uint
 09e0 36345f74 3a742836 2c38293d 28302c39  64_t:t(6,8)=(0,9
 09f0 2900696e 74707472 5f743a74 28362c39  ).intptr_t:t(6,9
 0a00 293d2836 2c332900 75696e74 7074725f  )=(6,3).uintptr_
 0a10 743a7428 362c3130 293d2836 2c342900  t:t(6,10)=(6,4).
 0a20 696e745f 6c656173 74385f74 3a742836  int_least8_t:t(6
 0a30 2c313129 3d28362c 31290075 696e745f  ,11)=(6,1).uint_
 0a40 6c656173 74385f74 3a742836 2c313229  least8_t:t(6,12)
 0a50 3d28362c 32290069 6e745f6c 65617374  =(6,2).int_least
 0a60 31365f74 3a742836 2c313329 3d28362c  16_t:t(6,13)=(6,
 0a70 33290075 696e745f 6c656173 7431365f  3).uint_least16_
 0a80 743a7428 362c3134 293d2836 2c342900  t:t(6,14)=(6,4).
 0a90 696e745f 6c656173 7433325f 743a7428  int_least32_t:t(
 0aa0 362c3135 293d2836 2c352900 75696e74  6,15)=(6,5).uint
 0ab0 5f6c6561 73743332 5f743a74 28362c31  _least32_t:t(6,1
 0ac0 36293d28 362c3629 00696e74 5f6c6561  6)=(6,6).int_lea
 0ad0 73743634 5f743a74 28362c31 37293d28  st64_t:t(6,17)=(
 0ae0 362c3729 0075696e 745f6c65 61737436  6,7).uint_least6
 0af0 345f743a 7428362c 3138293d 28362c38  4_t:t(6,18)=(6,8
 0b00 2900696e 745f6661 7374385f 743a7428  ).int_fast8_t:t(
 0b10 362c3139 293d2836 2c312900 75696e74  6,19)=(6,1).uint
 0b20 5f666173 74385f74 3a742836 2c323029  _fast8_t:t(6,20)
 0b30 3d28362c 32290069 6e745f66 61737431  =(6,2).int_fast1
 0b40 365f743a 7428362c 3231293d 28362c33  6_t:t(6,21)=(6,3
 0b50 29007569 6e745f66 61737431 365f743a  ).uint_fast16_t:
 0b60 7428362c 3232293d 28362c34 2900696e  t(6,22)=(6,4).in
 0b70 745f6661 73743332 5f743a74 28362c32  t_fast32_t:t(6,2
 0b80 33293d28 362c3529 0075696e 745f6661  3)=(6,5).uint_fa
 0b90 73743332 5f743a74 28362c32 34293d28  st32_t:t(6,24)=(
 0ba0 362c3629 00696e74 5f666173 7436345f  6,6).int_fast64_
 0bb0 743a7428 362c3235 293d2836 2c372900  t:t(6,25)=(6,7).
 0bc0 75696e74 5f666173 7436345f 743a7428  uint_fast64_t:t(
 0bd0 362c3236 293d2836 2c382900 696e746d  6,26)=(6,8).intm
 0be0 61785f74 3a742836 2c323729 3d28362c  ax_t:t(6,27)=(6,
 0bf0 37290075 696e746d 61785f74 3a742836  7).uintmax_t:t(6
 0c00 2c323829 3d28362c 38290069 6e745f66  ,28)=(6,8).int_f
 0c10 61727074 725f743a 7428342c 31293d28  arptr_t:t(4,1)=(
 0c20 362c3529 0075696e 745f6661 72707472  6,5).uint_farptr
 0c30 5f743a74 28342c32 293d2836 2c362900  _t:t(4,2)=(6,6).
 0c40 2f757372 2f6c6962 2f617672 2f696e63  /usr/lib/avr/inc
 0c50 6c756465 2f617672 2f667573 652e6800  lude/avr/fuse.h.
 0c60 5f5f6675 73655f74 3a742837 2c31293d  __fuse_t:t(7,1)=
 0c70 28372c32 293d7333 6c6f773a 28302c31  (7,2)=s3low:(0,1
 0c80 33292c30 2c383b68 6967683a 28302c31  3),0,8;high:(0,1
 0c90 33292c38 2c383b65 7874656e 6465643a  3),8,8;extended:
 0ca0 28302c31 33292c31 362c383b 3b002f75  (0,13),16,8;;./u
 0cb0 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 0cc0 64652f61 76722f70 676d7370 6163652e  de/avr/pgmspace.
 0cd0 68002f75 73722f6c 69622f67 63632f61  h./usr/lib/gcc/a
 0ce0 76722f35 2e342e30 2f696e63 6c756465  vr/5.4.0/include
 0cf0 2f737464 6465662e 68007369 7a655f74  /stddef.h.size_t
 0d00 3a742839 2c31293d 28302c34 29002f75  :t(9,1)=(0,4)./u
 0d10 73722f6c 69622f61 76722f69 6e636c75  sr/lib/avr/inclu
 0d20 64652f73 7464696f 2e68002f 7573722f  de/stdio.h./usr/
 0d30 6c69622f 6763632f 6176722f 352e342e  lib/gcc/avr/5.4.
 0d40 302f696e 636c7564 652f7374 64617267  0/include/stdarg
 0d50 2e68005f 5f676e75 635f7661 5f6c6973  .h.__gnuc_va_lis
 0d60 743a7428 31312c31 293d2831 312c3229  t:t(11,1)=(11,2)
 0d70 3d2a2830 2c343929 0076615f 6c697374  =*(0,49).va_list
 0d80 3a742831 312c3329 3d283131 2c312900  :t(11,3)=(11,1).
 0d90 5f5f6669 6c653a54 2831302c 31293d73  __file:T(10,1)=s
 0da0 31346275 663a2831 302c3229 3d2a2830  14buf:(10,2)=*(0
 0db0 2c32292c 302c3136 3b756e67 65743a28  ,2),0,16;unget:(
 0dc0 302c3133 292c3136 2c383b66 6c616773  0,13),16,8;flags
 0dd0 3a28362c 32292c32 342c383b 73697a65  :(6,2),24,8;size
 0de0 3a28302c 31292c33 322c3136 3b6c656e  :(0,1),32,16;len
 0df0 3a28302c 31292c34 382c3136 3b707574  :(0,1),48,16;put
 0e00 3a283130 2c33293d 2a283130 2c34293d  :(10,3)=*(10,4)=
 0e10 6628302c 31292c36 342c3136 3b676574  f(0,1),64,16;get
 0e20 3a283130 2c35293d 2a283130 2c36293d  :(10,5)=*(10,6)=
 0e30 6628302c 31292c38 302c3136 3b756461  f(0,1),80,16;uda
 0e40 74613a28 31302c37 293d2a28 302c3439  ta:(10,7)=*(0,49
 0e50 292c3936 2c31363b 3b004649 4c453a74  ),96,16;;.FILE:t
 0e60 2831302c 38293d28 31302c31 29006670  (10,8)=(10,1).fp
 0e70 6f735f74 3a742831 302c3929 3d28302c  os_t:t(10,9)=(0,
 0e80 3829006d 61696e3a 4628302c 31290069  8).main:F(0,1).i
 0e90 32632e63 00693263 5f696e69 743a4628  2c.c.i2c_init:F(
 0ea0 302c3439 29006932 635f6d65 616e696e  0,49).i2c_meanin
 0eb0 6766756c 5f737461 7475733a 4628302c  gful_status:F(0,
 0ec0 34392900 73746174 75733a50 28352c32  49).status:P(5,2
 0ed0 29006932 635f7374 6172743a 4628302c  ).i2c_start:F(0,
 0ee0 34392900 6932635f 73746f70 3a462830  49).i2c_stop:F(0
 0ef0 2c343929 00693263 5f676574 5f737461  ,49).i2c_get_sta
 0f00 7475733a 4628352c 32290069 32635f78  tus:F(5,2).i2c_x
 0f10 6d69745f 61646472 3a462830 2c343929  mit_addr:F(0,49)
 0f20 00616464 723a5028 352c3229 00693263  .addr:P(5,2).i2c
 0f30 5f72773a 5028352c 32290069 32635f78  _rw:P(5,2).i2c_x
 0f40 6d69745f 62797465 3a462830 2c343929  mit_byte:F(0,49)
 0f50 00627974 653a5028 352c3229 00776169  .byte:P(5,2).wai
 0f60 745f756e 74696c5f 77726974 655f636f  t_until_write_co
 0f70 6d706c65 74653a46 28302c34 39290077  mplete:F(0,49).w
 0f80 72697465 5f627974 653a4628 302c3439  rite_byte:F(0,49
 0f90 2900636f 6e74726f 6c526567 69737465  ).controlRegiste
 0fa0 723a5028 352c3229 00736572 69616c2e  r:P(5,2).serial.
 0fb0 63007561 72745f70 75746368 61723a46  c.uart_putchar:F
 0fc0 28302c31 29006368 723a5028 302c3229  (0,1).chr:P(0,2)
 0fd0 00737472 65616d3a 5028302c 3530293d  .stream:P(0,50)=
 0fe0 2a28372c 38290075 6172745f 696e6974  *(7,8).uart_init
 0ff0 3a462830 2c343929 00756172 745f6765  :F(0,49).uart_ge
 1000 74636861 723a4628 302c3229 00756172  tchar:F(0,2).uar
 1010 745f7374 646f7574 3a532837 2c382900  t_stdout:S(7,8).
 1020 70636139 3638352e 63007063 61393638  pca9685.c.pca968
 1030 352e6800 6932632e 68007365 7269616c  5.h.i2c.h.serial
 1040 2e680070 63613936 38355f69 6e69743a  .h.pca9685_init:
 1050 4628302c 34392900 70636139 3638355f  F(0,49).pca9685_
 1060 7365745f 70726573 63616c65 723a4628  set_prescaler:F(
 1070 302c3439 29007072 65736361 6c65723a  0,49).prescaler:
 1080 5028372c 32290070 63613936 38355f73  P(7,2).pca9685_s
 1090 65745f70 776d3a46 28302c34 39290073  et_pwm:F(0,49).s
 10a0 6572766f 41646472 6573733a 5028372c  ervoAddress:P(7,
 10b0 322900                               2).             
Contents of section .comment:
 0000 4743433a 2028474e 55292035 2e342e30  GCC: (GNU) 5.4.0
 0010 00                                   .               
Contents of section .note.gnu.avr.deviceinfo:
 0000 04000000 2d000000 01000000 41565200  ....-.......AVR.
 0010 00000000 00800000 00010000 00080000  ................
 0020 00000000 00040000 08000000 01000000  ................
 0030 0061746d 65676133 32387000 00000000  .atmega328p.....
Contents of section .debug_info:
 0000 f0050000 02000000 00000401 00000000  ................
 0010 00000000 020f0000 00010803 17000000  ................
 0020 02070414 00000005 1b000000 ff030006  ................
 0030 20000000 00002200 00000105 03000081   .....".........
 0040 00072900 00000000 14000000 010503c6  ..).............
 0050 00800008 2e000000 00001400 00000105  ................
 0060 03c00080 00093500 00000000 14000000  ......5.........
 0070 010503c1 0080000a 3c000000 00001400  ........<.......
 0080 00000105 03c20080 000b4300 00000000  ..........C.....
 0090 1b000000 010503c4 0080000c 49000000  ............I...
 00a0 00001400 00000105 03bd0080 000d4f00  ..............O.
 00b0 00000000 14000000 010503b8 0080000e  ................
 00c0 54000000 00001400 00000105 03bc0080  T...............
 00d0 000f5900 00000000 14000000 010503b9  ..Y.............
 00e0 00800010 5e000000 00001400 00000105  ....^...........
 00f0 03bb0080 00116300 00000000 14000000  ......c.........
 0100 010503ba 00800012 68000000 00001400  ........h.......
 0110 00000105 036f0080 00136f00 00000000  .....o....o.....
 0120 14000000 01050336 00800014 75000000  .......6....u...
 0130 00001400 00000105 03800080 00157c00  ..............|.
 0140 00000000 14000000 01050381 00800016  ................
 0150 83000000 00001400 00000105 03820080  ................
 0160 00178a00 00000000 1b000000 01050384  ................
 0170 00800018 90000000 00001b00 00000105  ................
 0180 03880080 00199600 00000000 1b000000  ................
 0190 0105038a 0080001a 9c000000 00001b00  ................
 01a0 00000105 03860080 001ba100 00000000  ................
 01b0 14000000 01050343 0080001c a7000000  .......C........
 01c0 00001400 00000105 03700080 001dae00  .........p......
 01d0 00000000 14000000 01050337 0080001e  ...........7....
 01e0 b4000000 00001400 00000105 03b00080  ................
 01f0 001fbb00 00000000 14000000 010503b1  ................
 0200 00800020 c2000000 00001400 00000105  ... ............
 0210 03b20080 0021c800 00000000 14000000  .....!..........
 0220 010503b4 00800022 ce000000 00001400  ......."........
 0230 00000105 03b30080 0023d400 00000000  .........#......
 0240 14000000 010503b6 00800024 d9000000  ...........$....
 0250 00001400 00000105 03430080 0025df00  .........C...%..
 0260 00000000 14000000 0105037c 00800026  ...........|...&
 0270 e5000000 00001b00 00000105 03780080  .............x..
 0280 0027e900 00000000 14000000 0105037a  .'.............z
 0290 00800028 f0000000 00001400 00000105  ...(............
 02a0 037b0080 0029f700 00000000 14000000  .{...)..........
 02b0 0105037e 0080002a fd000000 00001400  ...~...*........
 02c0 00000105 03500080 002b0201 00000000  .....P...+......
 02d0 14000000 0105037f 0080002c 08010000  ...........,....
 02e0 00001400 00000105 03250080 002d0e01  .........%...-..
 02f0 00000000 14000000 01050324 0080002e  ...........$....
 0300 13010000 00001400 00000105 03230080  .............#..
 0310 002f1801 00000000 14000000 01050328  ./.............(
 0320 00800030 1e010000 00001400 00000105  ...0............
 0330 03270080 00312301 00000000 14000000  .'...1#.........
 0340 01050326 00800032 28010000 00001400  ...&...2(.......
 0350 00000105 032b0080 00332e01 00000000  .....+...3......
 0360 14000000 0105032a 00800034 33010000  .......*...43...
 0370 00001400 00000105 03290080 00353801  .........)...58.
 0380 00000000 14000000 01050348 00800036  ...........H...6
 0390 3e010000 00001400 00000105 03470080  >............G..
 03a0 00374401 00000000 14000000 01050346  .7D............F
 03b0 00800038 4a010000 00001400 00000105  ...8J...........
 03c0 03450080 00395101 00000000 14000000  .E...9Q.........
 03d0 01050344 0080003a 58010000 00001400  ...D...:X.......
 03e0 00000105 036e0080 003b5f01 00000000  .....n...;_.....
 03f0 14000000 01050335 0080003c 65010000  .......5...<e...
 0400 00001400 00000105 03430080 003d6b01  .........C...=k.
 0410 00000000 14000000 01050369 0080003e  ...........i...>
 0420 71010000 00001400 00000105 033d0080  q............=..
 0430 003f7701 00000000 14000000 0105033c  .?w............<
 0440 00800040 7c010000 00001400 00000105  ...@|...........
 0450 03680080 00418201 00000000 14000000  .h...A..........
 0460 0105036d 00800042 89010000 00001400  ...m...B........
 0470 00000105 036c0080 00439001 00000000  .....l...C......
 0480 14000000 0105036b 00800044 97010000  .......k...D....
 0490 00001400 00000105 033b0080 00459d01  .........;...E..
 04a0 00000000 14000000 0105034e 00800046  ...........N...F
 04b0 a2010000 00001400 00000105 034d0080  .............M..
 04c0 0047a701 00000000 14000000 0105034c  .G.............L
 04d0 00800048 ac010000 00001400 00000105  ...H............
 04e0 03600080 0049b301 00000000 14000000  .`...I..........
 04f0 01050364 0080004a b7010000 00001400  ...d...J........
 0500 00000105 03660080 004bbe01 00000000  .....f...K......
 0510 14000000 01050361 0080004c c4010000  .......a...L....
 0520 00001400 00000105 035f0080 004dc901  ........._...M..
 0530 00000000 1b000000 0105035d 0080004e  ...........]...N
 0540 cc010000 00001400 00000105 03570080  .............W..
 0550 004fd301 00000000 14000000 01050355  .O.............U
 0560 00800050 d9010000 00001400 00000105  ...P............
 0570 03540080 0051df01 00000000 14000000  .T...Q..........
 0580 01050353 00800052 e4010000 00001400  ...S...R........
 0590 00000105 034b0080 0053eb01 00000000  .....K...S......
 05a0 14000000 0105034a 00800054 f2010000  .......J...T....
 05b0 00001400 00000105 033e0080 0055f901  .........>...U..
 05c0 00000000 1b000000 01050341 00800056  ...........A...V
 05d0 fe010000 00001400 00000105 03400080  .............@..
 05e0 00570302 00000000 14000000 0105033f  .W.............?
 05f0 00800000                             ....            
Contents of section .debug_abbrev:
 0000 01110125 0e100600 00022400 030e0b0b  ...%......$.....
 0010 3e0b0000 03240003 0e0b0b3e 0b000004  >....$.....>....
 0020 01014913 00000521 0049132f 05000006  ..I....!.I./....
 0030 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0040 07340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0050 00083400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0060 00000934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0070 0a00000a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0080 020a0000 0b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 0090 0c020a00 000c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 00a0 3f0c020a 00000d34 00030e3a 0b3b0b49  ?......4...:.;.I
 00b0 133f0c02 0a00000e 3400030e 3a0b3b0b  .?......4...:.;.
 00c0 49133f0c 020a0000 0f340003 0e3a0b3b  I.?......4...:.;
 00d0 0b49133f 0c020a00 00103400 030e3a0b  .I.?......4...:.
 00e0 3b0b4913 3f0c020a 00001134 00030e3a  ;.I.?......4...:
 00f0 0b3b0b49 133f0c02 0a000012 3400030e  .;.I.?......4...
 0100 3a0b3b0b 49133f0c 020a0000 13340003  :.;.I.?......4..
 0110 0e3a0b3b 0b49133f 0c020a00 00143400  .:.;.I.?......4.
 0120 030e3a0b 3b0b4913 3f0c020a 00001534  ..:.;.I.?......4
 0130 00030e3a 0b3b0b49 133f0c02 0a000016  ...:.;.I.?......
 0140 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0150 17340003 0e3a0b3b 0b49133f 0c020a00  .4...:.;.I.?....
 0160 00183400 030e3a0b 3b0b4913 3f0c020a  ..4...:.;.I.?...
 0170 00001934 00030e3a 0b3b0b49 133f0c02  ...4...:.;.I.?..
 0180 0a00001a 3400030e 3a0b3b0b 49133f0c  ....4...:.;.I.?.
 0190 020a0000 1b340003 0e3a0b3b 0b49133f  .....4...:.;.I.?
 01a0 0c020a00 001c3400 030e3a0b 3b0b4913  ......4...:.;.I.
 01b0 3f0c020a 00001d34 00030e3a 0b3b0b49  ?......4...:.;.I
 01c0 133f0c02 0a00001e 3400030e 3a0b3b0b  .?......4...:.;.
 01d0 49133f0c 020a0000 1f340003 0e3a0b3b  I.?......4...:.;
 01e0 0b49133f 0c020a00 00203400 030e3a0b  .I.?..... 4...:.
 01f0 3b0b4913 3f0c020a 00002134 00030e3a  ;.I.?.....!4...:
 0200 0b3b0b49 133f0c02 0a000022 3400030e  .;.I.?....."4...
 0210 3a0b3b0b 49133f0c 020a0000 23340003  :.;.I.?.....#4..
 0220 0e3a0b3b 0b49133f 0c020a00 00243400  .:.;.I.?.....$4.
 0230 030e3a0b 3b0b4913 3f0c020a 00002534  ..:.;.I.?.....%4
 0240 00030e3a 0b3b0b49 133f0c02 0a000026  ...:.;.I.?.....&
 0250 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0260 27340003 0e3a0b3b 0b49133f 0c020a00  '4...:.;.I.?....
 0270 00283400 030e3a0b 3b0b4913 3f0c020a  .(4...:.;.I.?...
 0280 00002934 00030e3a 0b3b0b49 133f0c02  ..)4...:.;.I.?..
 0290 0a00002a 3400030e 3a0b3b0b 49133f0c  ...*4...:.;.I.?.
 02a0 020a0000 2b340003 0e3a0b3b 0b49133f  ....+4...:.;.I.?
 02b0 0c020a00 002c3400 030e3a0b 3b0b4913  .....,4...:.;.I.
 02c0 3f0c020a 00002d34 00030e3a 0b3b0b49  ?.....-4...:.;.I
 02d0 133f0c02 0a00002e 3400030e 3a0b3b0b  .?......4...:.;.
 02e0 49133f0c 020a0000 2f340003 0e3a0b3b  I.?...../4...:.;
 02f0 0b49133f 0c020a00 00303400 030e3a0b  .I.?.....04...:.
 0300 3b0b4913 3f0c020a 00003134 00030e3a  ;.I.?.....14...:
 0310 0b3b0b49 133f0c02 0a000032 3400030e  .;.I.?.....24...
 0320 3a0b3b0b 49133f0c 020a0000 33340003  :.;.I.?.....34..
 0330 0e3a0b3b 0b49133f 0c020a00 00343400  .:.;.I.?.....44.
 0340 030e3a0b 3b0b4913 3f0c020a 00003534  ..:.;.I.?.....54
 0350 00030e3a 0b3b0b49 133f0c02 0a000036  ...:.;.I.?.....6
 0360 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0370 37340003 0e3a0b3b 0b49133f 0c020a00  74...:.;.I.?....
 0380 00383400 030e3a0b 3b0b4913 3f0c020a  .84...:.;.I.?...
 0390 00003934 00030e3a 0b3b0b49 133f0c02  ..94...:.;.I.?..
 03a0 0a00003a 3400030e 3a0b3b0b 49133f0c  ...:4...:.;.I.?.
 03b0 020a0000 3b340003 0e3a0b3b 0b49133f  ....;4...:.;.I.?
 03c0 0c020a00 003c3400 030e3a0b 3b0b4913  .....<4...:.;.I.
 03d0 3f0c020a 00003d34 00030e3a 0b3b0b49  ?.....=4...:.;.I
 03e0 133f0c02 0a00003e 3400030e 3a0b3b0b  .?.....>4...:.;.
 03f0 49133f0c 020a0000 3f340003 0e3a0b3b  I.?.....?4...:.;
 0400 0b49133f 0c020a00 00403400 030e3a0b  .I.?.....@4...:.
 0410 3b0b4913 3f0c020a 00004134 00030e3a  ;.I.?.....A4...:
 0420 0b3b0b49 133f0c02 0a000042 3400030e  .;.I.?.....B4...
 0430 3a0b3b0b 49133f0c 020a0000 43340003  :.;.I.?.....C4..
 0440 0e3a0b3b 0b49133f 0c020a00 00443400  .:.;.I.?.....D4.
 0450 030e3a0b 3b0b4913 3f0c020a 00004534  ..:.;.I.?.....E4
 0460 00030e3a 0b3b0b49 133f0c02 0a000046  ...:.;.I.?.....F
 0470 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0480 47340003 0e3a0b3b 0b49133f 0c020a00  G4...:.;.I.?....
 0490 00483400 030e3a0b 3b0b4913 3f0c020a  .H4...:.;.I.?...
 04a0 00004934 00030e3a 0b3b0b49 133f0c02  ..I4...:.;.I.?..
 04b0 0a00004a 3400030e 3a0b3b0b 49133f0c  ...J4...:.;.I.?.
 04c0 020a0000 4b340003 0e3a0b3b 0b49133f  ....K4...:.;.I.?
 04d0 0c020a00 004c3400 030e3a0b 3b0b4913  .....L4...:.;.I.
 04e0 3f0c020a 00004d34 00030e3a 0b3b0b49  ?.....M4...:.;.I
 04f0 133f0c02 0a00004e 3400030e 3a0b3b0b  .?.....N4...:.;.
 0500 49133f0c 020a0000 4f340003 0e3a0b3b  I.?.....O4...:.;
 0510 0b49133f 0c020a00 00503400 030e3a0b  .I.?.....P4...:.
 0520 3b0b4913 3f0c020a 00005134 00030e3a  ;.I.?.....Q4...:
 0530 0b3b0b49 133f0c02 0a000052 3400030e  .;.I.?.....R4...
 0540 3a0b3b0b 49133f0c 020a0000 53340003  :.;.I.?.....S4..
 0550 0e3a0b3b 0b49133f 0c020a00 00543400  .:.;.I.?.....T4.
 0560 030e3a0b 3b0b4913 3f0c020a 00005534  ..:.;.I.?.....U4
 0570 00030e3a 0b3b0b49 133f0c02 0a000056  ...:.;.I.?.....V
 0580 3400030e 3a0b3b0b 49133f0c 020a0000  4...:.;.I.?.....
 0590 57340003 0e3a0b3b 0b49133f 0c020a00  W4...:.;.I.?....
 05a0 0000                                 ..              
Contents of section .debug_line:
 0000 16000000 02001000 00000201 fb0e0a00  ................
 0010 01010101 00000001 0000               ..........      
Contents of section .debug_str:
 0000 6176722d 6c696263 20322e30 2e300075  avr-libc 2.0.0.u
 0010 696e7438 5f740075 696e7431 365f7400  int8_t.uint16_t.
 0020 5f5f6565 70726f6d 00554452 30005543  __eeprom.UDR0.UC
 0030 53523041 00554353 52304200 55435352  SR0A.UCSR0B.UCSR
 0040 30430055 42525230 00545741 4d520054  0C.UBRR0.TWAMR.T
 0050 57425200 54574352 00545753 52005457  WBR.TWCR.TWSR.TW
 0060 44520054 57415200 54494d53 4b310054  DR.TWAR.TIMSK1.T
 0070 49465231 00544343 52314100 54434352  IFR1.TCCR1A.TCCR
 0080 31420054 43435231 43005443 4e543100  1B.TCCR1C.TCNT1.
 0090 4f435231 41004f43 52314200 49435231  OCR1A.OCR1B.ICR1
 00a0 00475443 43520054 494d534b 32005449  .GTCCR.TIMSK2.TI
 00b0 46523200 54434352 32410054 43435232  FR2.TCCR2A.TCCR2
 00c0 42005443 4e543200 4f435232 42004f43  B.TCNT2.OCR2B.OC
 00d0 52324100 41535352 00475443 43520041  R2A.ASSR.GTCCR.A
 00e0 444d5558 00414443 00414443 53524100  DMUX.ADC.ADCSRA.
 00f0 41444353 52420044 49445230 00414353  ADCSRB.DIDR0.ACS
 0100 52004449 44523100 504f5254 42004444  R.DIDR1.PORTB.DD
 0110 52420050 494e4200 504f5254 43004444  RB.PINB.PORTC.DD
 0120 52430050 494e4300 504f5254 44004444  RC.PINC.PORTD.DD
 0130 52440050 494e4400 4f435230 42004f43  RD.PIND.OCR0B.OC
 0140 52304100 54434e54 30005443 43523042  R0A.TCNT0.TCCR0B
 0150 00544343 52304100 54494d53 4b300054  .TCCR0A.TIMSK0.T
 0160 49465230 00475443 43520045 49435241  IFR0.GTCCR.EICRA
 0170 0045494d 534b0045 49465200 50434943  .EIMSK.EIFR.PCIC
 0180 52005043 4d534b32 0050434d 534b3100  R.PCMSK2.PCMSK1.
 0190 50434d53 4b300050 43494652 00535044  PCMSK0.PCIFR.SPD
 01a0 52005350 53520053 50435200 57445443  R.SPSR.SPCR.WDTC
 01b0 53520050 5252004f 53434341 4c00434c  SR.PRR.OSCCAL.CL
 01c0 4b505200 53524547 00535000 53504d43  KPR.SREG.SP.SPMC
 01d0 5352004d 43554352 004d4355 53520053  SR.MCUCR.MCUSR.S
 01e0 4d435200 4750494f 52320047 50494f52  MCR.GPIOR2.GPIOR
 01f0 31004750 494f5230 00454541 52004545  1.GPIOR0.EEAR.EE
 0200 44520045 45435200                    DR.EECR.        

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__ctors_end>
   4:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
   8:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
   c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  10:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  14:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  18:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  1c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  20:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  24:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  28:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  2c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  30:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  34:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  38:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  3c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  40:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  44:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  48:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  4c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  50:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  54:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  58:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  5c:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  60:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  64:	0c 94 f3 00 	jmp	0x1e6	; 0x1e6 <__bad_interrupt>
  68:	1f 01       	movw	r2, r30
  6a:	05 01       	movw	r0, r10
  6c:	05 01       	movw	r0, r10
  6e:	05 01       	movw	r0, r10
  70:	05 01       	movw	r0, r10
  72:	05 01       	movw	r0, r10
  74:	05 01       	movw	r0, r10
  76:	05 01       	movw	r0, r10
  78:	28 01       	movw	r4, r16
  7a:	05 01       	movw	r0, r10
  7c:	05 01       	movw	r0, r10
  7e:	05 01       	movw	r0, r10
  80:	05 01       	movw	r0, r10
  82:	05 01       	movw	r0, r10
  84:	05 01       	movw	r0, r10
  86:	05 01       	movw	r0, r10
  88:	31 01       	movw	r6, r2
  8a:	05 01       	movw	r0, r10
  8c:	05 01       	movw	r0, r10
  8e:	05 01       	movw	r0, r10
  90:	05 01       	movw	r0, r10
  92:	05 01       	movw	r0, r10
  94:	05 01       	movw	r0, r10
  96:	05 01       	movw	r0, r10
  98:	3a 01       	movw	r6, r20
  9a:	05 01       	movw	r0, r10
  9c:	05 01       	movw	r0, r10
  9e:	05 01       	movw	r0, r10
  a0:	05 01       	movw	r0, r10
  a2:	05 01       	movw	r0, r10
  a4:	05 01       	movw	r0, r10
  a6:	05 01       	movw	r0, r10
  a8:	43 01       	movw	r8, r6
  aa:	05 01       	movw	r0, r10
  ac:	05 01       	movw	r0, r10
  ae:	05 01       	movw	r0, r10
  b0:	05 01       	movw	r0, r10
  b2:	05 01       	movw	r0, r10
  b4:	05 01       	movw	r0, r10
  b6:	05 01       	movw	r0, r10
  b8:	4c 01       	movw	r8, r24
  ba:	05 01       	movw	r0, r10
  bc:	05 01       	movw	r0, r10
  be:	05 01       	movw	r0, r10
  c0:	05 01       	movw	r0, r10
  c2:	05 01       	movw	r0, r10
  c4:	05 01       	movw	r0, r10
  c6:	05 01       	movw	r0, r10
  c8:	55 01       	movw	r10, r10
  ca:	05 01       	movw	r0, r10
  cc:	05 01       	movw	r0, r10
  ce:	05 01       	movw	r0, r10
  d0:	05 01       	movw	r0, r10
  d2:	05 01       	movw	r0, r10
  d4:	05 01       	movw	r0, r10
  d6:	05 01       	movw	r0, r10
  d8:	5e 01       	movw	r10, r28
  da:	05 01       	movw	r0, r10
  dc:	05 01       	movw	r0, r10
  de:	05 01       	movw	r0, r10
  e0:	05 01       	movw	r0, r10
  e2:	05 01       	movw	r0, r10
  e4:	05 01       	movw	r0, r10
  e6:	05 01       	movw	r0, r10
  e8:	67 01       	movw	r12, r14
  ea:	05 01       	movw	r0, r10
  ec:	05 01       	movw	r0, r10
  ee:	05 01       	movw	r0, r10
  f0:	05 01       	movw	r0, r10
  f2:	05 01       	movw	r0, r10
  f4:	05 01       	movw	r0, r10
  f6:	05 01       	movw	r0, r10
  f8:	70 01       	movw	r14, r0
  fa:	05 01       	movw	r0, r10
  fc:	05 01       	movw	r0, r10
  fe:	05 01       	movw	r0, r10
 100:	05 01       	movw	r0, r10
 102:	05 01       	movw	r0, r10
 104:	05 01       	movw	r0, r10
 106:	05 01       	movw	r0, r10
 108:	16 01       	movw	r2, r12

0000010a <__trampolines_end>:
 10a:	4e 2f       	mov	r20, r30
 10c:	41 20       	and	r4, r1
 10e:	25 30       	cpi	r18, 0x05	; 5
 110:	32 58       	subi	r19, 0x82	; 130
 112:	0a 00       	.word	0x000a	; ????

00000114 <__c.2286>:
 114:	4d 52 20 44 41 54 41 2b 52 2c 20 4e 41 4b 0a 00     MR DATA+R, NAK..

00000124 <__c.2283>:
 124:	4d 52 20 44 41 54 41 2b 52 2c 20 41 43 4b 0a 00     MR DATA+R, ACK..

00000134 <__c.2280>:
 134:	4d 52 20 53 4c 41 2b 52 2c 20 4e 41 4b 0a 00        MR SLA+R, NAK..

00000143 <__c.2277>:
 143:	4d 52 20 53 4c 41 2b 52 2c 20 41 43 4b 0a 00        MR SLA+R, ACK..

00000152 <__c.2274>:
 152:	4d 54 20 44 41 54 41 2b 57 2c 20 4e 41 4b 0a 00     MT DATA+W, NAK..

00000162 <__c.2271>:
 162:	4d 54 20 44 41 54 41 2b 57 2c 20 41 43 4b 0a 00     MT DATA+W, ACK..

00000172 <__c.2268>:
 172:	4d 54 20 53 4c 41 2b 57 2c 20 4e 41 4b 0a 00        MT SLA+W, NAK..

00000181 <__c.2265>:
 181:	4d 54 20 53 4c 41 2b 57 2c 20 41 43 4b 0a 00        MT SLA+W, ACK..

00000190 <__c.2262>:
 190:	4e 4f 41 52 42 2f 4e 41 4b 0a 00                    NOARB/NAK..

0000019b <__c.2259>:
 19b:	52 45 53 54 41 52 54 0a 00                          RESTART..

000001a4 <__c.2255>:
 1a4:	53 54 41 52 54 0a 00 00                             START...

000001ac <__ctors_end>:
 1ac:	11 24       	eor	r1, r1
 1ae:	1f be       	out	0x3f, r1	; 63
 1b0:	cf ef       	ldi	r28, 0xFF	; 255
 1b2:	d8 e0       	ldi	r29, 0x08	; 8
 1b4:	de bf       	out	0x3e, r29	; 62
 1b6:	cd bf       	out	0x3d, r28	; 61

000001b8 <__do_copy_data>:
 1b8:	11 e0       	ldi	r17, 0x01	; 1
 1ba:	a0 e0       	ldi	r26, 0x00	; 0
 1bc:	b1 e0       	ldi	r27, 0x01	; 1
 1be:	ec e2       	ldi	r30, 0x2C	; 44
 1c0:	fb e0       	ldi	r31, 0x0B	; 11
 1c2:	02 c0       	rjmp	.+4      	; 0x1c8 <__do_copy_data+0x10>
 1c4:	05 90       	lpm	r0, Z+
 1c6:	0d 92       	st	X+, r0
 1c8:	ae 30       	cpi	r26, 0x0E	; 14
 1ca:	b1 07       	cpc	r27, r17
 1cc:	d9 f7       	brne	.-10     	; 0x1c4 <__do_copy_data+0xc>

000001ce <__do_clear_bss>:
 1ce:	21 e0       	ldi	r18, 0x01	; 1
 1d0:	ae e0       	ldi	r26, 0x0E	; 14
 1d2:	b1 e0       	ldi	r27, 0x01	; 1
 1d4:	01 c0       	rjmp	.+2      	; 0x1d8 <.do_clear_bss_start>

000001d6 <.do_clear_bss_loop>:
 1d6:	1d 92       	st	X+, r1

000001d8 <.do_clear_bss_start>:
 1d8:	a4 31       	cpi	r26, 0x14	; 20
 1da:	b2 07       	cpc	r27, r18
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <.do_clear_bss_loop>
 1de:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <main>
 1e2:	0c 94 94 05 	jmp	0xb28	; 0xb28 <_exit>

000001e6 <__bad_interrupt>:
 1e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ea <i2c_init>:
		Calculation for TWBR:
			SCLfreq = F_CPU / (16 + (2 * TWBR * Prescaler))
			100 000 = 16 000 000 / (16 + (2 * TWBR * 1)
			TWBR = 72 = 0x48
	*/
	TWCR = (1 << TWEN);
 1ea:	84 e0       	ldi	r24, 0x04	; 4
 1ec:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
	TWSR = 0x00;
 1f0:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>

	TWBR = 0x48;
 1f4:	88 e4       	ldi	r24, 0x48	; 72
 1f6:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__DATA_REGION_ORIGIN__+0x58>
 1fa:	08 95       	ret

000001fc <i2c_meaningful_status>:

void i2c_meaningful_status(uint8_t status) {
	/*
		Status of the TWI logic
	*/
	switch (status) {
 1fc:	48 2f       	mov	r20, r24
 1fe:	50 e0       	ldi	r21, 0x00	; 0
 200:	fa 01       	movw	r30, r20
 202:	38 97       	sbiw	r30, 0x08	; 8
 204:	e1 35       	cpi	r30, 0x51	; 81
 206:	f1 05       	cpc	r31, r1
 208:	68 f0       	brcs	.+26     	; 0x224 <i2c_meaningful_status+0x28>
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
		break;
	default:
		printf_P(PSTR("N/A %02X\n"), status);
 20a:	1f 92       	push	r1
 20c:	8f 93       	push	r24
 20e:	8a e0       	ldi	r24, 0x0A	; 10
 210:	91 e0       	ldi	r25, 0x01	; 1
 212:	9f 93       	push	r25
 214:	8f 93       	push	r24
 216:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 21a:	0f 90       	pop	r0
 21c:	0f 90       	pop	r0
 21e:	0f 90       	pop	r0
 220:	0f 90       	pop	r0
 222:	08 95       	ret

void i2c_meaningful_status(uint8_t status) {
	/*
		Status of the TWI logic
	*/
	switch (status) {
 224:	ec 5c       	subi	r30, 0xCC	; 204
 226:	ff 4f       	sbci	r31, 0xFF	; 255
 228:	0c 94 a0 02 	jmp	0x540	; 0x540 <__tablejump2__>
		break;
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
		break;
	case 0x58: // DATA received, NAK sent
		printf_P(PSTR("MR DATA+R, NAK\n"));
 22c:	84 e1       	ldi	r24, 0x14	; 20
 22e:	91 e0       	ldi	r25, 0x01	; 1
 230:	9f 93       	push	r25
 232:	8f 93       	push	r24
 234:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 238:	0f 90       	pop	r0
 23a:	0f 90       	pop	r0
 23c:	08 95       	ret
	/*
		Status of the TWI logic
	*/
	switch (status) {
	case 0x08: // START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("START\n"));
 23e:	84 ea       	ldi	r24, 0xA4	; 164
 240:	91 e0       	ldi	r25, 0x01	; 1
 242:	9f 93       	push	r25
 244:	8f 93       	push	r24
 246:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 24a:	0f 90       	pop	r0
 24c:	0f 90       	pop	r0
 24e:	08 95       	ret
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
 250:	8b e9       	ldi	r24, 0x9B	; 155
 252:	91 e0       	ldi	r25, 0x01	; 1
 254:	9f 93       	push	r25
 256:	8f 93       	push	r24
 258:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 25c:	0f 90       	pop	r0
 25e:	0f 90       	pop	r0
 260:	08 95       	ret
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
		break;
		// MASTER TRANSMIT
	case 0x18: // SLA+W transmitted, ACK received
		printf_P(PSTR("MT SLA+W, ACK\n"));
 262:	81 e8       	ldi	r24, 0x81	; 129
 264:	91 e0       	ldi	r25, 0x01	; 1
 266:	9f 93       	push	r25
 268:	8f 93       	push	r24
 26a:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 26e:	0f 90       	pop	r0
 270:	0f 90       	pop	r0
 272:	08 95       	ret
	case 0x20: // SLA+W transmitted, NAK received
		printf_P(PSTR("MT SLA+W, NAK\n"));
 274:	82 e7       	ldi	r24, 0x72	; 114
 276:	91 e0       	ldi	r25, 0x01	; 1
 278:	9f 93       	push	r25
 27a:	8f 93       	push	r24
 27c:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 280:	0f 90       	pop	r0
 282:	0f 90       	pop	r0
 284:	08 95       	ret
	case 0x28: // DATA transmitted, ACK received
		printf_P(PSTR("MT DATA+W, ACK\n"));
 286:	82 e6       	ldi	r24, 0x62	; 98
 288:	91 e0       	ldi	r25, 0x01	; 1
 28a:	9f 93       	push	r25
 28c:	8f 93       	push	r24
 28e:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 292:	0f 90       	pop	r0
 294:	0f 90       	pop	r0
 296:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
 298:	82 e5       	ldi	r24, 0x52	; 82
 29a:	91 e0       	ldi	r25, 0x01	; 1
 29c:	9f 93       	push	r25
 29e:	8f 93       	push	r24
 2a0:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 2a4:	0f 90       	pop	r0
 2a6:	0f 90       	pop	r0
 2a8:	08 95       	ret
		break;
	case 0x10: // repeated START transmitted, proceed to load SLA+W/R
		printf_P(PSTR("RESTART\n"));
		break;
	case 0x38: // NAK or DATA ARBITRATION LOST
		printf_P(PSTR("NOARB/NAK\n"));
 2aa:	80 e9       	ldi	r24, 0x90	; 144
 2ac:	91 e0       	ldi	r25, 0x01	; 1
 2ae:	9f 93       	push	r25
 2b0:	8f 93       	push	r24
 2b2:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 2b6:	0f 90       	pop	r0
 2b8:	0f 90       	pop	r0
 2ba:	08 95       	ret
	case 0x30: // DATA transmitted, NAK received
		printf_P(PSTR("MT DATA+W, NAK\n"));
		break;
		// MASTER RECEIVE
	case 0x40: // SLA+R transmitted, ACK received
		printf_P(PSTR("MR SLA+R, ACK\n"));
 2bc:	83 e4       	ldi	r24, 0x43	; 67
 2be:	91 e0       	ldi	r25, 0x01	; 1
 2c0:	9f 93       	push	r25
 2c2:	8f 93       	push	r24
 2c4:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 2c8:	0f 90       	pop	r0
 2ca:	0f 90       	pop	r0
 2cc:	08 95       	ret
	case 0x48: // SLA+R transmitted, NAK received
		printf_P(PSTR("MR SLA+R, NAK\n"));
 2ce:	84 e3       	ldi	r24, 0x34	; 52
 2d0:	91 e0       	ldi	r25, 0x01	; 1
 2d2:	9f 93       	push	r25
 2d4:	8f 93       	push	r24
 2d6:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 2da:	0f 90       	pop	r0
 2dc:	0f 90       	pop	r0
 2de:	08 95       	ret
	case 0x50: // DATA received, ACK sent
		printf_P(PSTR("MR DATA+R, ACK\n"));
 2e0:	84 e2       	ldi	r24, 0x24	; 36
 2e2:	91 e0       	ldi	r25, 0x01	; 1
 2e4:	9f 93       	push	r25
 2e6:	8f 93       	push	r24
 2e8:	0e 94 a6 02 	call	0x54c	; 0x54c <printf_P>
		break;
 2ec:	0f 90       	pop	r0
 2ee:	0f 90       	pop	r0
 2f0:	08 95       	ret

000002f2 <i2c_start>:
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 2f2:	84 ea       	ldi	r24, 0xA4	; 164
 2f4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 2f8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 2fc:	87 ff       	sbrs	r24, 7
 2fe:	fc cf       	rjmp	.-8      	; 0x2f8 <i2c_start+0x6>
}
 300:	08 95       	ret

00000302 <i2c_stop>:
		TWSTO bit set in TWCR register generates a stop condition on the 2-wire serial bus.
		After stop condition is executed the TWSTO bit is clearead automatically.

		Await until TWSTO bit is cleared
	*/
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 302:	84 e9       	ldi	r24, 0x94	; 148
 304:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while ((TWCR & (1 << TWSTO)));
 308:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 30c:	84 fd       	sbrc	r24, 4
 30e:	fc cf       	rjmp	.-8      	; 0x308 <i2c_stop+0x6>
}
 310:	08 95       	ret

00000312 <i2c_get_status>:
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 312:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>

	return status;
}
 316:	88 7f       	andi	r24, 0xF8	; 248
 318:	08 95       	ret

0000031a <i2c_xmit_addr>:
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (addr & 0xfe) | (i2c_rw & 0x01);
 31a:	8e 7f       	andi	r24, 0xFE	; 254
 31c:	61 70       	andi	r22, 0x01	; 1
 31e:	68 2b       	or	r22, r24
 320:	60 93 bb 00 	sts	0x00BB, r22	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 324:	84 e8       	ldi	r24, 0x84	; 132
 326:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 32a:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 32e:	87 ff       	sbrs	r24, 7
 330:	fc cf       	rjmp	.-8      	; 0x32a <i2c_xmit_addr+0x10>
}
 332:	08 95       	ret

00000334 <i2c_xmit_byte>:

		Assign TWDR register with byte to send

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/
	TWDR = byte;
 334:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 338:	84 e8       	ldi	r24, 0x84	; 132
 33a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 33e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 342:	87 ff       	sbrs	r24, 7
 344:	fc cf       	rjmp	.-8      	; 0x33e <i2c_xmit_byte+0xa>
}
 346:	08 95       	ret

00000348 <wait_until_write_complete>:
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 348:	34 ea       	ldi	r19, 0xA4	; 164
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (addr & 0xfe) | (i2c_rw & 0x01);
 34a:	20 e8       	ldi	r18, 0x80	; 128

	TWCR = (1 << TWINT) | (1 << TWEN);
 34c:	94 e8       	ldi	r25, 0x84	; 132
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 34e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 352:	88 7f       	andi	r24, 0xF8	; 248
 354:	88 31       	cpi	r24, 0x18	; 24
 356:	99 f0       	breq	.+38     	; 0x37e <wait_until_write_complete+0x36>
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 358:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 35c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 360:	87 ff       	sbrs	r24, 7
 362:	fc cf       	rjmp	.-8      	; 0x35c <wait_until_write_complete+0x14>
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (addr & 0xfe) | (i2c_rw & 0x01);
 364:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 368:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 36c:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 370:	87 ff       	sbrs	r24, 7
 372:	fc cf       	rjmp	.-8      	; 0x36c <wait_until_write_complete+0x24>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 374:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 378:	88 7f       	andi	r24, 0xF8	; 248
 37a:	88 31       	cpi	r24, 0x18	; 24
 37c:	69 f7       	brne	.-38     	; 0x358 <wait_until_write_complete+0x10>
		i2c_start();
		i2c_xmit_addr(0x80, I2C_W);
	}
}
 37e:	08 95       	ret

00000380 <write_byte>:

void write_byte(uint8_t controlRegister, uint8_t byte) {
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	d8 2f       	mov	r29, r24
 386:	c6 2f       	mov	r28, r22
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 388:	84 ea       	ldi	r24, 0xA4	; 164
 38a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 38e:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 392:	87 ff       	sbrs	r24, 7
 394:	fc cf       	rjmp	.-8      	; 0x38e <write_byte+0xe>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 396:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		Transmit the byte to write

		Stop communication and make sure device is finished with writing.
	*/
	i2c_start();
	i2c_meaningful_status(i2c_get_status());	// START
 39a:	88 7f       	andi	r24, 0xF8	; 248
 39c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <i2c_meaningful_status>
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (addr & 0xfe) | (i2c_rw & 0x01);
 3a0:	80 e8       	ldi	r24, 0x80	; 128
 3a2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 3a6:	84 e8       	ldi	r24, 0x84	; 132
 3a8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 3ac:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3b0:	87 ff       	sbrs	r24, 7
 3b2:	fc cf       	rjmp	.-8      	; 0x3ac <write_byte+0x2c>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 3b4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		Stop communication and make sure device is finished with writing.
	*/
	i2c_start();
	i2c_meaningful_status(i2c_get_status());	// START
	i2c_xmit_addr(0x80, I2C_W);					// should be 0x80 but try 0x40 aswell
	i2c_meaningful_status(i2c_get_status());	// MT SLA + W, ACK
 3b8:	88 7f       	andi	r24, 0xF8	; 248
 3ba:	0e 94 fe 00 	call	0x1fc	; 0x1fc <i2c_meaningful_status>

		Assign TWDR register with byte to send

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/
	TWDR = byte;
 3be:	d0 93 bb 00 	sts	0x00BB, r29	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 3c2:	84 e8       	ldi	r24, 0x84	; 132
 3c4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 3c8:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3cc:	87 ff       	sbrs	r24, 7
 3ce:	fc cf       	rjmp	.-8      	; 0x3c8 <write_byte+0x48>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 3d0:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
	i2c_meaningful_status(i2c_get_status());	// START
	i2c_xmit_addr(0x80, I2C_W);					// should be 0x80 but try 0x40 aswell
	i2c_meaningful_status(i2c_get_status());	// MT SLA + W, ACK

	i2c_xmit_byte(controlRegister);				
	i2c_meaningful_status(i2c_get_status());	// MT DATA+W, ACK
 3d4:	88 7f       	andi	r24, 0xF8	; 248
 3d6:	0e 94 fe 00 	call	0x1fc	; 0x1fc <i2c_meaningful_status>

		Assign TWDR register with byte to send

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/
	TWDR = byte;
 3da:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 3de:	84 e8       	ldi	r24, 0x84	; 132
 3e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 3e4:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 3e8:	87 ff       	sbrs	r24, 7
 3ea:	fc cf       	rjmp	.-8      	; 0x3e4 <write_byte+0x64>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 3ec:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>

	i2c_xmit_byte(controlRegister);				
	i2c_meaningful_status(i2c_get_status());	// MT DATA+W, ACK

	i2c_xmit_byte(byte);
	i2c_meaningful_status(i2c_get_status());	// MT DATA+W, ACK
 3f0:	88 7f       	andi	r24, 0xF8	; 248
 3f2:	0e 94 fe 00 	call	0x1fc	; 0x1fc <i2c_meaningful_status>
		TWSTO bit set in TWCR register generates a stop condition on the 2-wire serial bus.
		After stop condition is executed the TWSTO bit is clearead automatically.

		Await until TWSTO bit is cleared
	*/
	TWCR = (1 << TWINT) | (1 << TWSTO) | (1 << TWEN);
 3f6:	84 e9       	ldi	r24, 0x94	; 148
 3f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while ((TWCR & (1 << TWSTO)));
 3fc:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 400:	84 fd       	sbrc	r24, 4
 402:	fc cf       	rjmp	.-8      	; 0x3fc <write_byte+0x7c>
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 404:	34 ea       	ldi	r19, 0xA4	; 164
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (addr & 0xfe) | (i2c_rw & 0x01);
 406:	20 e8       	ldi	r18, 0x80	; 128

	TWCR = (1 << TWINT) | (1 << TWEN);
 408:	94 e8       	ldi	r25, 0x84	; 132
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 40a:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 40e:	88 7f       	andi	r24, 0xF8	; 248
 410:	88 31       	cpi	r24, 0x18	; 24
 412:	99 f0       	breq	.+38     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
		TWSTA bit set in TWCR register to generate start condition, will be cleared in i2c_xmit_addr
		TWINT bit set in TWCR register clears the flag and starts the operation of TWI

		Await until TWI has finished its current job AKA TWINT bit is set
	*/
	TWCR = (1 << TWINT) | (1 << TWSTA) | (1 << TWEN);
 414:	30 93 bc 00 	sts	0x00BC, r19	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 418:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 41c:	87 ff       	sbrs	r24, 7
 41e:	fc cf       	rjmp	.-8      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
		TWEN bit set in TWCR register to enable SCL and SDA pins and enabling TWI operation

		Await until TWI has finished its current job AKA TWINT bit is set and ACK/NACK pulse has been sent
	*/

	TWDR = (addr & 0xfe) | (i2c_rw & 0x01);
 420:	20 93 bb 00 	sts	0x00BB, r18	; 0x8000bb <__DATA_REGION_ORIGIN__+0x5b>

	TWCR = (1 << TWINT) | (1 << TWEN);
 424:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>

	while (!(TWCR & (1 << TWINT)));
 428:	80 91 bc 00 	lds	r24, 0x00BC	; 0x8000bc <__DATA_REGION_ORIGIN__+0x5c>
 42c:	87 ff       	sbrs	r24, 7
 42e:	fc cf       	rjmp	.-8      	; 0x428 <__LOCK_REGION_LENGTH__+0x28>
		Bits TWS3-7 in TWSR register reflect the status of the TWI logic
		Bits 0-2 are clearead to 0 in TWSR.
		status variabel is assigned value of TWSR.
	*/
	uint8_t status;
	status = TWSR & 0xF8;
 430:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__DATA_REGION_ORIGIN__+0x59>
		cycle is complete, the device will return the ACK and the master can then proceed
		with the next Read or Write command.

		Await until SLAW+W transmitted and ACK received.
	*/
	while (i2c_get_status() != 0x18) {
 434:	88 7f       	andi	r24, 0xF8	; 248
 436:	88 31       	cpi	r24, 0x18	; 24
 438:	69 f7       	brne	.-38     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>

	i2c_stop();
	
	wait_until_write_complete();
	
 43a:	df 91       	pop	r29
 43c:	cf 91       	pop	r28
 43e:	08 95       	ret

00000440 <uart_putchar>:
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);

	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE* stream) {
 440:	cf 93       	push	r28
 442:	c8 2f       	mov	r28, r24
	if (chr == '\n') {
 444:	8a 30       	cpi	r24, 0x0A	; 10
 446:	51 f0       	breq	.+20     	; 0x45c <uart_putchar+0x1c>
		uart_putchar('\r', NULL);
	}
	while (!(UCSR0A & (1 << UDRE0)))
 448:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 44c:	85 ff       	sbrs	r24, 5
 44e:	fc cf       	rjmp	.-8      	; 0x448 <uart_putchar+0x8>
		;
	UDR0 = chr;
 450:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 454:	80 e0       	ldi	r24, 0x00	; 0
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	cf 91       	pop	r28
 45a:	08 95       	ret
	stdout = &uart_stdout;
}

int uart_putchar(char chr, FILE* stream) {
	if (chr == '\n') {
		uart_putchar('\r', NULL);
 45c:	60 e0       	ldi	r22, 0x00	; 0
 45e:	70 e0       	ldi	r23, 0x00	; 0
 460:	8d e0       	ldi	r24, 0x0D	; 13
 462:	0e 94 20 02 	call	0x440	; 0x440 <uart_putchar>
 466:	f0 cf       	rjmp	.-32     	; 0x448 <uart_putchar+0x8>

00000468 <uart_init>:
#include "serial.h"

static FILE uart_stdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

void uart_init(void) {
	UBRR0H = (unsigned char)(UBRR >> 8);
 468:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (unsigned char)(UBRR);
 46c:	89 e1       	ldi	r24, 0x19	; 25
 46e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0A = 0;
 472:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
	UCSR0B = (1 << TXEN0 | 1 << RXEN0);
 476:	88 e1       	ldi	r24, 0x18	; 24
 478:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1 << UCSZ01 | 1 << UCSZ00);
 47c:	86 e0       	ldi	r24, 0x06	; 6
 47e:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>

	stdout = &uart_stdout;
 482:	80 e0       	ldi	r24, 0x00	; 0
 484:	91 e0       	ldi	r25, 0x01	; 1
 486:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
 48a:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>
 48e:	08 95       	ret

00000490 <uart_getchar>:
	UDR0 = chr;
	return 0;
}

char uart_getchar(void) {
	while (!(UCSR0A & (1 << RXC0)))
 490:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 494:	87 ff       	sbrs	r24, 7
 496:	fc cf       	rjmp	.-8      	; 0x490 <uart_getchar>
		;
	return UDR0;
 498:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
}
 49c:	08 95       	ret

0000049e <pca9685_init>:
#include "pca9685.h"

void pca9685_init() {
 49e:	08 95       	ret

000004a0 <pca9685_set_prescaler>:

}

void pca9685_set_prescaler(uint8_t prescaler) {
 4a0:	cf 93       	push	r28
 4a2:	c8 2f       	mov	r28, r24
	0x79 = 121 = (25 Mhz / (4096 * 50)) - 1  // 50 hz
	0x64 = 100 = (25 Mhz / (4096 * 60)) -1 // 60 hz

	Sleep mode enabled and after changing prescaler disabled for continous normal operation
*/
	write_byte(PCA9685_MODE1, 0x01);
 4a4:	61 e0       	ldi	r22, 0x01	; 1
 4a6:	80 e0       	ldi	r24, 0x00	; 0
 4a8:	0e 94 c0 01 	call	0x380	; 0x380 <write_byte>
	write_byte(PCA9685_PRESCALE, prescaler);
 4ac:	6c 2f       	mov	r22, r28
 4ae:	8e ef       	ldi	r24, 0xFE	; 254
 4b0:	0e 94 c0 01 	call	0x380	; 0x380 <write_byte>
	write_byte(PCA9685_MODE1, 0x00);
 4b4:	60 e0       	ldi	r22, 0x00	; 0
 4b6:	80 e0       	ldi	r24, 0x00	; 0
}
 4b8:	cf 91       	pop	r28

	Sleep mode enabled and after changing prescaler disabled for continous normal operation
*/
	write_byte(PCA9685_MODE1, 0x01);
	write_byte(PCA9685_PRESCALE, prescaler);
	write_byte(PCA9685_MODE1, 0x00);
 4ba:	0c 94 c0 01 	jmp	0x380	; 0x380 <write_byte>

000004be <pca9685_set_pwm>:
 4be:	0f 93       	push	r16
 4c0:	1f 93       	push	r17
 4c2:	cf 93       	push	r28
 4c4:	df 93       	push	r29
 4c6:	c8 2f       	mov	r28, r24
 4c8:	07 2f       	mov	r16, r23
 4ca:	14 2f       	mov	r17, r20
 4cc:	d5 2f       	mov	r29, r21
 4ce:	0e 94 c0 01 	call	0x380	; 0x380 <write_byte>
 4d2:	60 2f       	mov	r22, r16
 4d4:	81 e0       	ldi	r24, 0x01	; 1
 4d6:	8c 0f       	add	r24, r28
 4d8:	0e 94 c0 01 	call	0x380	; 0x380 <write_byte>
 4dc:	61 2f       	mov	r22, r17
 4de:	82 e0       	ldi	r24, 0x02	; 2
 4e0:	8c 0f       	add	r24, r28
 4e2:	0e 94 c0 01 	call	0x380	; 0x380 <write_byte>
 4e6:	6d 2f       	mov	r22, r29
 4e8:	83 e0       	ldi	r24, 0x03	; 3
 4ea:	8c 0f       	add	r24, r28
 4ec:	df 91       	pop	r29
 4ee:	cf 91       	pop	r28
 4f0:	1f 91       	pop	r17
 4f2:	0f 91       	pop	r16
 4f4:	0c 94 c0 01 	jmp	0x380	; 0x380 <write_byte>

000004f8 <main>:



int main(void) {
	uint8_t prescalerValue = 0x64;
	i2c_init();
 4f8:	0e 94 f5 00 	call	0x1ea	; 0x1ea <i2c_init>
	uart_init();
 4fc:	0e 94 34 02 	call	0x468	; 0x468 <uart_init>

	pca9685_set_prescaler(prescalerValue);
 500:	84 e6       	ldi	r24, 0x64	; 100
 502:	0e 94 50 02 	call	0x4a0	; 0x4a0 <pca9685_set_prescaler>
	
	pca9685_set_pwm(bottomServo, 0, 0x7D0);
 506:	40 ed       	ldi	r20, 0xD0	; 208
 508:	57 e0       	ldi	r21, 0x07	; 7
 50a:	60 e0       	ldi	r22, 0x00	; 0
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	86 e0       	ldi	r24, 0x06	; 6
 510:	0e 94 5f 02 	call	0x4be	; 0x4be <pca9685_set_pwm>
	pca9685_set_pwm(horizontalServo, 0, 0x3E8);
 514:	48 ee       	ldi	r20, 0xE8	; 232
 516:	53 e0       	ldi	r21, 0x03	; 3
 518:	60 e0       	ldi	r22, 0x00	; 0
 51a:	70 e0       	ldi	r23, 0x00	; 0
 51c:	8a e0       	ldi	r24, 0x0A	; 10
 51e:	0e 94 5f 02 	call	0x4be	; 0x4be <pca9685_set_pwm>
	pca9685_set_pwm(verticalServo, 0, 0x640);
 522:	40 e4       	ldi	r20, 0x40	; 64
 524:	56 e0       	ldi	r21, 0x06	; 6
 526:	60 e0       	ldi	r22, 0x00	; 0
 528:	70 e0       	ldi	r23, 0x00	; 0
 52a:	8e e0       	ldi	r24, 0x0E	; 14
 52c:	0e 94 5f 02 	call	0x4be	; 0x4be <pca9685_set_pwm>
	pca9685_set_pwm(clawServo, 0, 0x5DC);
 530:	4c ed       	ldi	r20, 0xDC	; 220
 532:	55 e0       	ldi	r21, 0x05	; 5
 534:	60 e0       	ldi	r22, 0x00	; 0
 536:	70 e0       	ldi	r23, 0x00	; 0
 538:	82 e1       	ldi	r24, 0x12	; 18
 53a:	0e 94 5f 02 	call	0x4be	; 0x4be <pca9685_set_pwm>
 53e:	ff cf       	rjmp	.-2      	; 0x53e <main+0x46>

00000540 <__tablejump2__>:
 540:	ee 0f       	add	r30, r30
 542:	ff 1f       	adc	r31, r31
 544:	05 90       	lpm	r0, Z+
 546:	f4 91       	lpm	r31, Z
 548:	e0 2d       	mov	r30, r0
 54a:	09 94       	ijmp

0000054c <printf_P>:
 54c:	a0 e0       	ldi	r26, 0x00	; 0
 54e:	b0 e0       	ldi	r27, 0x00	; 0
 550:	ec ea       	ldi	r30, 0xAC	; 172
 552:	f2 e0       	ldi	r31, 0x02	; 2
 554:	0c 94 6b 05 	jmp	0xad6	; 0xad6 <__prologue_saves__+0x1c>
 558:	ae 01       	movw	r20, r28
 55a:	49 5f       	subi	r20, 0xF9	; 249
 55c:	5f 4f       	sbci	r21, 0xFF	; 255
 55e:	da 01       	movw	r26, r20
 560:	6d 91       	ld	r22, X+
 562:	7d 91       	ld	r23, X+
 564:	ad 01       	movw	r20, r26
 566:	0e e0       	ldi	r16, 0x0E	; 14
 568:	11 e0       	ldi	r17, 0x01	; 1
 56a:	f8 01       	movw	r30, r16
 56c:	82 81       	ldd	r24, Z+2	; 0x02
 56e:	93 81       	ldd	r25, Z+3	; 0x03
 570:	dc 01       	movw	r26, r24
 572:	13 96       	adiw	r26, 0x03	; 3
 574:	2c 91       	ld	r18, X
 576:	13 97       	sbiw	r26, 0x03	; 3
 578:	28 60       	ori	r18, 0x08	; 8
 57a:	13 96       	adiw	r26, 0x03	; 3
 57c:	2c 93       	st	X, r18
 57e:	0e 94 cc 02 	call	0x598	; 0x598 <vfprintf>
 582:	d8 01       	movw	r26, r16
 584:	12 96       	adiw	r26, 0x02	; 2
 586:	ed 91       	ld	r30, X+
 588:	fc 91       	ld	r31, X
 58a:	13 97       	sbiw	r26, 0x03	; 3
 58c:	23 81       	ldd	r18, Z+3	; 0x03
 58e:	27 7f       	andi	r18, 0xF7	; 247
 590:	23 83       	std	Z+3, r18	; 0x03
 592:	e4 e0       	ldi	r30, 0x04	; 4
 594:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__epilogue_restores__+0x1c>

00000598 <vfprintf>:
 598:	ab e0       	ldi	r26, 0x0B	; 11
 59a:	b0 e0       	ldi	r27, 0x00	; 0
 59c:	e2 ed       	ldi	r30, 0xD2	; 210
 59e:	f2 e0       	ldi	r31, 0x02	; 2
 5a0:	0c 94 5d 05 	jmp	0xaba	; 0xaba <__prologue_saves__>
 5a4:	6c 01       	movw	r12, r24
 5a6:	7b 01       	movw	r14, r22
 5a8:	8a 01       	movw	r16, r20
 5aa:	fc 01       	movw	r30, r24
 5ac:	17 82       	std	Z+7, r1	; 0x07
 5ae:	16 82       	std	Z+6, r1	; 0x06
 5b0:	83 81       	ldd	r24, Z+3	; 0x03
 5b2:	81 ff       	sbrs	r24, 1
 5b4:	cc c1       	rjmp	.+920    	; 0x94e <__stack+0x4f>
 5b6:	ce 01       	movw	r24, r28
 5b8:	01 96       	adiw	r24, 0x01	; 1
 5ba:	3c 01       	movw	r6, r24
 5bc:	f6 01       	movw	r30, r12
 5be:	93 81       	ldd	r25, Z+3	; 0x03
 5c0:	f7 01       	movw	r30, r14
 5c2:	93 fd       	sbrc	r25, 3
 5c4:	85 91       	lpm	r24, Z+
 5c6:	93 ff       	sbrs	r25, 3
 5c8:	81 91       	ld	r24, Z+
 5ca:	7f 01       	movw	r14, r30
 5cc:	88 23       	and	r24, r24
 5ce:	09 f4       	brne	.+2      	; 0x5d2 <vfprintf+0x3a>
 5d0:	ba c1       	rjmp	.+884    	; 0x946 <__stack+0x47>
 5d2:	85 32       	cpi	r24, 0x25	; 37
 5d4:	39 f4       	brne	.+14     	; 0x5e4 <vfprintf+0x4c>
 5d6:	93 fd       	sbrc	r25, 3
 5d8:	85 91       	lpm	r24, Z+
 5da:	93 ff       	sbrs	r25, 3
 5dc:	81 91       	ld	r24, Z+
 5de:	7f 01       	movw	r14, r30
 5e0:	85 32       	cpi	r24, 0x25	; 37
 5e2:	29 f4       	brne	.+10     	; 0x5ee <vfprintf+0x56>
 5e4:	b6 01       	movw	r22, r12
 5e6:	90 e0       	ldi	r25, 0x00	; 0
 5e8:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 5ec:	e7 cf       	rjmp	.-50     	; 0x5bc <vfprintf+0x24>
 5ee:	91 2c       	mov	r9, r1
 5f0:	21 2c       	mov	r2, r1
 5f2:	31 2c       	mov	r3, r1
 5f4:	ff e1       	ldi	r31, 0x1F	; 31
 5f6:	f3 15       	cp	r31, r3
 5f8:	d8 f0       	brcs	.+54     	; 0x630 <vfprintf+0x98>
 5fa:	8b 32       	cpi	r24, 0x2B	; 43
 5fc:	79 f0       	breq	.+30     	; 0x61c <vfprintf+0x84>
 5fe:	38 f4       	brcc	.+14     	; 0x60e <vfprintf+0x76>
 600:	80 32       	cpi	r24, 0x20	; 32
 602:	79 f0       	breq	.+30     	; 0x622 <vfprintf+0x8a>
 604:	83 32       	cpi	r24, 0x23	; 35
 606:	a1 f4       	brne	.+40     	; 0x630 <vfprintf+0x98>
 608:	23 2d       	mov	r18, r3
 60a:	20 61       	ori	r18, 0x10	; 16
 60c:	1d c0       	rjmp	.+58     	; 0x648 <vfprintf+0xb0>
 60e:	8d 32       	cpi	r24, 0x2D	; 45
 610:	61 f0       	breq	.+24     	; 0x62a <vfprintf+0x92>
 612:	80 33       	cpi	r24, 0x30	; 48
 614:	69 f4       	brne	.+26     	; 0x630 <vfprintf+0x98>
 616:	23 2d       	mov	r18, r3
 618:	21 60       	ori	r18, 0x01	; 1
 61a:	16 c0       	rjmp	.+44     	; 0x648 <vfprintf+0xb0>
 61c:	83 2d       	mov	r24, r3
 61e:	82 60       	ori	r24, 0x02	; 2
 620:	38 2e       	mov	r3, r24
 622:	e3 2d       	mov	r30, r3
 624:	e4 60       	ori	r30, 0x04	; 4
 626:	3e 2e       	mov	r3, r30
 628:	2a c0       	rjmp	.+84     	; 0x67e <vfprintf+0xe6>
 62a:	f3 2d       	mov	r31, r3
 62c:	f8 60       	ori	r31, 0x08	; 8
 62e:	1d c0       	rjmp	.+58     	; 0x66a <vfprintf+0xd2>
 630:	37 fc       	sbrc	r3, 7
 632:	2d c0       	rjmp	.+90     	; 0x68e <vfprintf+0xf6>
 634:	20 ed       	ldi	r18, 0xD0	; 208
 636:	28 0f       	add	r18, r24
 638:	2a 30       	cpi	r18, 0x0A	; 10
 63a:	40 f0       	brcs	.+16     	; 0x64c <vfprintf+0xb4>
 63c:	8e 32       	cpi	r24, 0x2E	; 46
 63e:	b9 f4       	brne	.+46     	; 0x66e <vfprintf+0xd6>
 640:	36 fc       	sbrc	r3, 6
 642:	81 c1       	rjmp	.+770    	; 0x946 <__stack+0x47>
 644:	23 2d       	mov	r18, r3
 646:	20 64       	ori	r18, 0x40	; 64
 648:	32 2e       	mov	r3, r18
 64a:	19 c0       	rjmp	.+50     	; 0x67e <vfprintf+0xe6>
 64c:	36 fe       	sbrs	r3, 6
 64e:	06 c0       	rjmp	.+12     	; 0x65c <vfprintf+0xc4>
 650:	8a e0       	ldi	r24, 0x0A	; 10
 652:	98 9e       	mul	r9, r24
 654:	20 0d       	add	r18, r0
 656:	11 24       	eor	r1, r1
 658:	92 2e       	mov	r9, r18
 65a:	11 c0       	rjmp	.+34     	; 0x67e <vfprintf+0xe6>
 65c:	ea e0       	ldi	r30, 0x0A	; 10
 65e:	2e 9e       	mul	r2, r30
 660:	20 0d       	add	r18, r0
 662:	11 24       	eor	r1, r1
 664:	22 2e       	mov	r2, r18
 666:	f3 2d       	mov	r31, r3
 668:	f0 62       	ori	r31, 0x20	; 32
 66a:	3f 2e       	mov	r3, r31
 66c:	08 c0       	rjmp	.+16     	; 0x67e <vfprintf+0xe6>
 66e:	8c 36       	cpi	r24, 0x6C	; 108
 670:	21 f4       	brne	.+8      	; 0x67a <vfprintf+0xe2>
 672:	83 2d       	mov	r24, r3
 674:	80 68       	ori	r24, 0x80	; 128
 676:	38 2e       	mov	r3, r24
 678:	02 c0       	rjmp	.+4      	; 0x67e <vfprintf+0xe6>
 67a:	88 36       	cpi	r24, 0x68	; 104
 67c:	41 f4       	brne	.+16     	; 0x68e <vfprintf+0xf6>
 67e:	f7 01       	movw	r30, r14
 680:	93 fd       	sbrc	r25, 3
 682:	85 91       	lpm	r24, Z+
 684:	93 ff       	sbrs	r25, 3
 686:	81 91       	ld	r24, Z+
 688:	7f 01       	movw	r14, r30
 68a:	81 11       	cpse	r24, r1
 68c:	b3 cf       	rjmp	.-154    	; 0x5f4 <vfprintf+0x5c>
 68e:	98 2f       	mov	r25, r24
 690:	9f 7d       	andi	r25, 0xDF	; 223
 692:	95 54       	subi	r25, 0x45	; 69
 694:	93 30       	cpi	r25, 0x03	; 3
 696:	28 f4       	brcc	.+10     	; 0x6a2 <vfprintf+0x10a>
 698:	0c 5f       	subi	r16, 0xFC	; 252
 69a:	1f 4f       	sbci	r17, 0xFF	; 255
 69c:	9f e3       	ldi	r25, 0x3F	; 63
 69e:	99 83       	std	Y+1, r25	; 0x01
 6a0:	0d c0       	rjmp	.+26     	; 0x6bc <vfprintf+0x124>
 6a2:	83 36       	cpi	r24, 0x63	; 99
 6a4:	31 f0       	breq	.+12     	; 0x6b2 <vfprintf+0x11a>
 6a6:	83 37       	cpi	r24, 0x73	; 115
 6a8:	71 f0       	breq	.+28     	; 0x6c6 <vfprintf+0x12e>
 6aa:	83 35       	cpi	r24, 0x53	; 83
 6ac:	09 f0       	breq	.+2      	; 0x6b0 <vfprintf+0x118>
 6ae:	59 c0       	rjmp	.+178    	; 0x762 <vfprintf+0x1ca>
 6b0:	21 c0       	rjmp	.+66     	; 0x6f4 <vfprintf+0x15c>
 6b2:	f8 01       	movw	r30, r16
 6b4:	80 81       	ld	r24, Z
 6b6:	89 83       	std	Y+1, r24	; 0x01
 6b8:	0e 5f       	subi	r16, 0xFE	; 254
 6ba:	1f 4f       	sbci	r17, 0xFF	; 255
 6bc:	88 24       	eor	r8, r8
 6be:	83 94       	inc	r8
 6c0:	91 2c       	mov	r9, r1
 6c2:	53 01       	movw	r10, r6
 6c4:	13 c0       	rjmp	.+38     	; 0x6ec <vfprintf+0x154>
 6c6:	28 01       	movw	r4, r16
 6c8:	f2 e0       	ldi	r31, 0x02	; 2
 6ca:	4f 0e       	add	r4, r31
 6cc:	51 1c       	adc	r5, r1
 6ce:	f8 01       	movw	r30, r16
 6d0:	a0 80       	ld	r10, Z
 6d2:	b1 80       	ldd	r11, Z+1	; 0x01
 6d4:	36 fe       	sbrs	r3, 6
 6d6:	03 c0       	rjmp	.+6      	; 0x6de <vfprintf+0x146>
 6d8:	69 2d       	mov	r22, r9
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	02 c0       	rjmp	.+4      	; 0x6e2 <vfprintf+0x14a>
 6de:	6f ef       	ldi	r22, 0xFF	; 255
 6e0:	7f ef       	ldi	r23, 0xFF	; 255
 6e2:	c5 01       	movw	r24, r10
 6e4:	0e 94 b8 04 	call	0x970	; 0x970 <strnlen>
 6e8:	4c 01       	movw	r8, r24
 6ea:	82 01       	movw	r16, r4
 6ec:	f3 2d       	mov	r31, r3
 6ee:	ff 77       	andi	r31, 0x7F	; 127
 6f0:	3f 2e       	mov	r3, r31
 6f2:	16 c0       	rjmp	.+44     	; 0x720 <vfprintf+0x188>
 6f4:	28 01       	movw	r4, r16
 6f6:	22 e0       	ldi	r18, 0x02	; 2
 6f8:	42 0e       	add	r4, r18
 6fa:	51 1c       	adc	r5, r1
 6fc:	f8 01       	movw	r30, r16
 6fe:	a0 80       	ld	r10, Z
 700:	b1 80       	ldd	r11, Z+1	; 0x01
 702:	36 fe       	sbrs	r3, 6
 704:	03 c0       	rjmp	.+6      	; 0x70c <vfprintf+0x174>
 706:	69 2d       	mov	r22, r9
 708:	70 e0       	ldi	r23, 0x00	; 0
 70a:	02 c0       	rjmp	.+4      	; 0x710 <vfprintf+0x178>
 70c:	6f ef       	ldi	r22, 0xFF	; 255
 70e:	7f ef       	ldi	r23, 0xFF	; 255
 710:	c5 01       	movw	r24, r10
 712:	0e 94 ad 04 	call	0x95a	; 0x95a <strnlen_P>
 716:	4c 01       	movw	r8, r24
 718:	f3 2d       	mov	r31, r3
 71a:	f0 68       	ori	r31, 0x80	; 128
 71c:	3f 2e       	mov	r3, r31
 71e:	82 01       	movw	r16, r4
 720:	33 fc       	sbrc	r3, 3
 722:	1b c0       	rjmp	.+54     	; 0x75a <vfprintf+0x1c2>
 724:	82 2d       	mov	r24, r2
 726:	90 e0       	ldi	r25, 0x00	; 0
 728:	88 16       	cp	r8, r24
 72a:	99 06       	cpc	r9, r25
 72c:	b0 f4       	brcc	.+44     	; 0x75a <vfprintf+0x1c2>
 72e:	b6 01       	movw	r22, r12
 730:	80 e2       	ldi	r24, 0x20	; 32
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 738:	2a 94       	dec	r2
 73a:	f4 cf       	rjmp	.-24     	; 0x724 <vfprintf+0x18c>
 73c:	f5 01       	movw	r30, r10
 73e:	37 fc       	sbrc	r3, 7
 740:	85 91       	lpm	r24, Z+
 742:	37 fe       	sbrs	r3, 7
 744:	81 91       	ld	r24, Z+
 746:	5f 01       	movw	r10, r30
 748:	b6 01       	movw	r22, r12
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 750:	21 10       	cpse	r2, r1
 752:	2a 94       	dec	r2
 754:	21 e0       	ldi	r18, 0x01	; 1
 756:	82 1a       	sub	r8, r18
 758:	91 08       	sbc	r9, r1
 75a:	81 14       	cp	r8, r1
 75c:	91 04       	cpc	r9, r1
 75e:	71 f7       	brne	.-36     	; 0x73c <vfprintf+0x1a4>
 760:	e8 c0       	rjmp	.+464    	; 0x932 <__stack+0x33>
 762:	84 36       	cpi	r24, 0x64	; 100
 764:	11 f0       	breq	.+4      	; 0x76a <vfprintf+0x1d2>
 766:	89 36       	cpi	r24, 0x69	; 105
 768:	41 f5       	brne	.+80     	; 0x7ba <vfprintf+0x222>
 76a:	f8 01       	movw	r30, r16
 76c:	37 fe       	sbrs	r3, 7
 76e:	07 c0       	rjmp	.+14     	; 0x77e <vfprintf+0x1e6>
 770:	60 81       	ld	r22, Z
 772:	71 81       	ldd	r23, Z+1	; 0x01
 774:	82 81       	ldd	r24, Z+2	; 0x02
 776:	93 81       	ldd	r25, Z+3	; 0x03
 778:	0c 5f       	subi	r16, 0xFC	; 252
 77a:	1f 4f       	sbci	r17, 0xFF	; 255
 77c:	08 c0       	rjmp	.+16     	; 0x78e <vfprintf+0x1f6>
 77e:	60 81       	ld	r22, Z
 780:	71 81       	ldd	r23, Z+1	; 0x01
 782:	07 2e       	mov	r0, r23
 784:	00 0c       	add	r0, r0
 786:	88 0b       	sbc	r24, r24
 788:	99 0b       	sbc	r25, r25
 78a:	0e 5f       	subi	r16, 0xFE	; 254
 78c:	1f 4f       	sbci	r17, 0xFF	; 255
 78e:	f3 2d       	mov	r31, r3
 790:	ff 76       	andi	r31, 0x6F	; 111
 792:	3f 2e       	mov	r3, r31
 794:	97 ff       	sbrs	r25, 7
 796:	09 c0       	rjmp	.+18     	; 0x7aa <vfprintf+0x212>
 798:	90 95       	com	r25
 79a:	80 95       	com	r24
 79c:	70 95       	com	r23
 79e:	61 95       	neg	r22
 7a0:	7f 4f       	sbci	r23, 0xFF	; 255
 7a2:	8f 4f       	sbci	r24, 0xFF	; 255
 7a4:	9f 4f       	sbci	r25, 0xFF	; 255
 7a6:	f0 68       	ori	r31, 0x80	; 128
 7a8:	3f 2e       	mov	r3, r31
 7aa:	2a e0       	ldi	r18, 0x0A	; 10
 7ac:	30 e0       	ldi	r19, 0x00	; 0
 7ae:	a3 01       	movw	r20, r6
 7b0:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__ultoa_invert>
 7b4:	88 2e       	mov	r8, r24
 7b6:	86 18       	sub	r8, r6
 7b8:	45 c0       	rjmp	.+138    	; 0x844 <vfprintf+0x2ac>
 7ba:	85 37       	cpi	r24, 0x75	; 117
 7bc:	31 f4       	brne	.+12     	; 0x7ca <vfprintf+0x232>
 7be:	23 2d       	mov	r18, r3
 7c0:	2f 7e       	andi	r18, 0xEF	; 239
 7c2:	b2 2e       	mov	r11, r18
 7c4:	2a e0       	ldi	r18, 0x0A	; 10
 7c6:	30 e0       	ldi	r19, 0x00	; 0
 7c8:	25 c0       	rjmp	.+74     	; 0x814 <vfprintf+0x27c>
 7ca:	93 2d       	mov	r25, r3
 7cc:	99 7f       	andi	r25, 0xF9	; 249
 7ce:	b9 2e       	mov	r11, r25
 7d0:	8f 36       	cpi	r24, 0x6F	; 111
 7d2:	c1 f0       	breq	.+48     	; 0x804 <vfprintf+0x26c>
 7d4:	18 f4       	brcc	.+6      	; 0x7dc <vfprintf+0x244>
 7d6:	88 35       	cpi	r24, 0x58	; 88
 7d8:	79 f0       	breq	.+30     	; 0x7f8 <vfprintf+0x260>
 7da:	b5 c0       	rjmp	.+362    	; 0x946 <__stack+0x47>
 7dc:	80 37       	cpi	r24, 0x70	; 112
 7de:	19 f0       	breq	.+6      	; 0x7e6 <vfprintf+0x24e>
 7e0:	88 37       	cpi	r24, 0x78	; 120
 7e2:	21 f0       	breq	.+8      	; 0x7ec <vfprintf+0x254>
 7e4:	b0 c0       	rjmp	.+352    	; 0x946 <__stack+0x47>
 7e6:	e9 2f       	mov	r30, r25
 7e8:	e0 61       	ori	r30, 0x10	; 16
 7ea:	be 2e       	mov	r11, r30
 7ec:	b4 fe       	sbrs	r11, 4
 7ee:	0d c0       	rjmp	.+26     	; 0x80a <vfprintf+0x272>
 7f0:	fb 2d       	mov	r31, r11
 7f2:	f4 60       	ori	r31, 0x04	; 4
 7f4:	bf 2e       	mov	r11, r31
 7f6:	09 c0       	rjmp	.+18     	; 0x80a <vfprintf+0x272>
 7f8:	34 fe       	sbrs	r3, 4
 7fa:	0a c0       	rjmp	.+20     	; 0x810 <vfprintf+0x278>
 7fc:	29 2f       	mov	r18, r25
 7fe:	26 60       	ori	r18, 0x06	; 6
 800:	b2 2e       	mov	r11, r18
 802:	06 c0       	rjmp	.+12     	; 0x810 <vfprintf+0x278>
 804:	28 e0       	ldi	r18, 0x08	; 8
 806:	30 e0       	ldi	r19, 0x00	; 0
 808:	05 c0       	rjmp	.+10     	; 0x814 <vfprintf+0x27c>
 80a:	20 e1       	ldi	r18, 0x10	; 16
 80c:	30 e0       	ldi	r19, 0x00	; 0
 80e:	02 c0       	rjmp	.+4      	; 0x814 <vfprintf+0x27c>
 810:	20 e1       	ldi	r18, 0x10	; 16
 812:	32 e0       	ldi	r19, 0x02	; 2
 814:	f8 01       	movw	r30, r16
 816:	b7 fe       	sbrs	r11, 7
 818:	07 c0       	rjmp	.+14     	; 0x828 <vfprintf+0x290>
 81a:	60 81       	ld	r22, Z
 81c:	71 81       	ldd	r23, Z+1	; 0x01
 81e:	82 81       	ldd	r24, Z+2	; 0x02
 820:	93 81       	ldd	r25, Z+3	; 0x03
 822:	0c 5f       	subi	r16, 0xFC	; 252
 824:	1f 4f       	sbci	r17, 0xFF	; 255
 826:	06 c0       	rjmp	.+12     	; 0x834 <vfprintf+0x29c>
 828:	60 81       	ld	r22, Z
 82a:	71 81       	ldd	r23, Z+1	; 0x01
 82c:	80 e0       	ldi	r24, 0x00	; 0
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	0e 5f       	subi	r16, 0xFE	; 254
 832:	1f 4f       	sbci	r17, 0xFF	; 255
 834:	a3 01       	movw	r20, r6
 836:	0e 94 ff 04 	call	0x9fe	; 0x9fe <__ultoa_invert>
 83a:	88 2e       	mov	r8, r24
 83c:	86 18       	sub	r8, r6
 83e:	fb 2d       	mov	r31, r11
 840:	ff 77       	andi	r31, 0x7F	; 127
 842:	3f 2e       	mov	r3, r31
 844:	36 fe       	sbrs	r3, 6
 846:	0d c0       	rjmp	.+26     	; 0x862 <vfprintf+0x2ca>
 848:	23 2d       	mov	r18, r3
 84a:	2e 7f       	andi	r18, 0xFE	; 254
 84c:	a2 2e       	mov	r10, r18
 84e:	89 14       	cp	r8, r9
 850:	58 f4       	brcc	.+22     	; 0x868 <vfprintf+0x2d0>
 852:	34 fe       	sbrs	r3, 4
 854:	0b c0       	rjmp	.+22     	; 0x86c <vfprintf+0x2d4>
 856:	32 fc       	sbrc	r3, 2
 858:	09 c0       	rjmp	.+18     	; 0x86c <vfprintf+0x2d4>
 85a:	83 2d       	mov	r24, r3
 85c:	8e 7e       	andi	r24, 0xEE	; 238
 85e:	a8 2e       	mov	r10, r24
 860:	05 c0       	rjmp	.+10     	; 0x86c <vfprintf+0x2d4>
 862:	b8 2c       	mov	r11, r8
 864:	a3 2c       	mov	r10, r3
 866:	03 c0       	rjmp	.+6      	; 0x86e <vfprintf+0x2d6>
 868:	b8 2c       	mov	r11, r8
 86a:	01 c0       	rjmp	.+2      	; 0x86e <vfprintf+0x2d6>
 86c:	b9 2c       	mov	r11, r9
 86e:	a4 fe       	sbrs	r10, 4
 870:	0f c0       	rjmp	.+30     	; 0x890 <vfprintf+0x2f8>
 872:	fe 01       	movw	r30, r28
 874:	e8 0d       	add	r30, r8
 876:	f1 1d       	adc	r31, r1
 878:	80 81       	ld	r24, Z
 87a:	80 33       	cpi	r24, 0x30	; 48
 87c:	21 f4       	brne	.+8      	; 0x886 <vfprintf+0x2ee>
 87e:	9a 2d       	mov	r25, r10
 880:	99 7e       	andi	r25, 0xE9	; 233
 882:	a9 2e       	mov	r10, r25
 884:	09 c0       	rjmp	.+18     	; 0x898 <vfprintf+0x300>
 886:	a2 fe       	sbrs	r10, 2
 888:	06 c0       	rjmp	.+12     	; 0x896 <vfprintf+0x2fe>
 88a:	b3 94       	inc	r11
 88c:	b3 94       	inc	r11
 88e:	04 c0       	rjmp	.+8      	; 0x898 <vfprintf+0x300>
 890:	8a 2d       	mov	r24, r10
 892:	86 78       	andi	r24, 0x86	; 134
 894:	09 f0       	breq	.+2      	; 0x898 <vfprintf+0x300>
 896:	b3 94       	inc	r11
 898:	a3 fc       	sbrc	r10, 3
 89a:	11 c0       	rjmp	.+34     	; 0x8be <vfprintf+0x326>
 89c:	a0 fe       	sbrs	r10, 0
 89e:	06 c0       	rjmp	.+12     	; 0x8ac <vfprintf+0x314>
 8a0:	b2 14       	cp	r11, r2
 8a2:	88 f4       	brcc	.+34     	; 0x8c6 <vfprintf+0x32e>
 8a4:	28 0c       	add	r2, r8
 8a6:	92 2c       	mov	r9, r2
 8a8:	9b 18       	sub	r9, r11
 8aa:	0e c0       	rjmp	.+28     	; 0x8c8 <vfprintf+0x330>
 8ac:	b2 14       	cp	r11, r2
 8ae:	60 f4       	brcc	.+24     	; 0x8c8 <vfprintf+0x330>
 8b0:	b6 01       	movw	r22, r12
 8b2:	80 e2       	ldi	r24, 0x20	; 32
 8b4:	90 e0       	ldi	r25, 0x00	; 0
 8b6:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 8ba:	b3 94       	inc	r11
 8bc:	f7 cf       	rjmp	.-18     	; 0x8ac <vfprintf+0x314>
 8be:	b2 14       	cp	r11, r2
 8c0:	18 f4       	brcc	.+6      	; 0x8c8 <vfprintf+0x330>
 8c2:	2b 18       	sub	r2, r11
 8c4:	02 c0       	rjmp	.+4      	; 0x8ca <vfprintf+0x332>
 8c6:	98 2c       	mov	r9, r8
 8c8:	21 2c       	mov	r2, r1
 8ca:	a4 fe       	sbrs	r10, 4
 8cc:	10 c0       	rjmp	.+32     	; 0x8ee <vfprintf+0x356>
 8ce:	b6 01       	movw	r22, r12
 8d0:	80 e3       	ldi	r24, 0x30	; 48
 8d2:	90 e0       	ldi	r25, 0x00	; 0
 8d4:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 8d8:	a2 fe       	sbrs	r10, 2
 8da:	17 c0       	rjmp	.+46     	; 0x90a <__stack+0xb>
 8dc:	a1 fc       	sbrc	r10, 1
 8de:	03 c0       	rjmp	.+6      	; 0x8e6 <vfprintf+0x34e>
 8e0:	88 e7       	ldi	r24, 0x78	; 120
 8e2:	90 e0       	ldi	r25, 0x00	; 0
 8e4:	02 c0       	rjmp	.+4      	; 0x8ea <vfprintf+0x352>
 8e6:	88 e5       	ldi	r24, 0x58	; 88
 8e8:	90 e0       	ldi	r25, 0x00	; 0
 8ea:	b6 01       	movw	r22, r12
 8ec:	0c c0       	rjmp	.+24     	; 0x906 <__stack+0x7>
 8ee:	8a 2d       	mov	r24, r10
 8f0:	86 78       	andi	r24, 0x86	; 134
 8f2:	59 f0       	breq	.+22     	; 0x90a <__stack+0xb>
 8f4:	a1 fe       	sbrs	r10, 1
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <vfprintf+0x364>
 8f8:	8b e2       	ldi	r24, 0x2B	; 43
 8fa:	01 c0       	rjmp	.+2      	; 0x8fe <vfprintf+0x366>
 8fc:	80 e2       	ldi	r24, 0x20	; 32
 8fe:	a7 fc       	sbrc	r10, 7
 900:	8d e2       	ldi	r24, 0x2D	; 45
 902:	b6 01       	movw	r22, r12
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 90a:	89 14       	cp	r8, r9
 90c:	38 f4       	brcc	.+14     	; 0x91c <__stack+0x1d>
 90e:	b6 01       	movw	r22, r12
 910:	80 e3       	ldi	r24, 0x30	; 48
 912:	90 e0       	ldi	r25, 0x00	; 0
 914:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 918:	9a 94       	dec	r9
 91a:	f7 cf       	rjmp	.-18     	; 0x90a <__stack+0xb>
 91c:	8a 94       	dec	r8
 91e:	f3 01       	movw	r30, r6
 920:	e8 0d       	add	r30, r8
 922:	f1 1d       	adc	r31, r1
 924:	80 81       	ld	r24, Z
 926:	b6 01       	movw	r22, r12
 928:	90 e0       	ldi	r25, 0x00	; 0
 92a:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 92e:	81 10       	cpse	r8, r1
 930:	f5 cf       	rjmp	.-22     	; 0x91c <__stack+0x1d>
 932:	22 20       	and	r2, r2
 934:	09 f4       	brne	.+2      	; 0x938 <__stack+0x39>
 936:	42 ce       	rjmp	.-892    	; 0x5bc <vfprintf+0x24>
 938:	b6 01       	movw	r22, r12
 93a:	80 e2       	ldi	r24, 0x20	; 32
 93c:	90 e0       	ldi	r25, 0x00	; 0
 93e:	0e 94 c3 04 	call	0x986	; 0x986 <fputc>
 942:	2a 94       	dec	r2
 944:	f6 cf       	rjmp	.-20     	; 0x932 <__stack+0x33>
 946:	f6 01       	movw	r30, r12
 948:	86 81       	ldd	r24, Z+6	; 0x06
 94a:	97 81       	ldd	r25, Z+7	; 0x07
 94c:	02 c0       	rjmp	.+4      	; 0x952 <__stack+0x53>
 94e:	8f ef       	ldi	r24, 0xFF	; 255
 950:	9f ef       	ldi	r25, 0xFF	; 255
 952:	2b 96       	adiw	r28, 0x0b	; 11
 954:	e2 e1       	ldi	r30, 0x12	; 18
 956:	0c 94 79 05 	jmp	0xaf2	; 0xaf2 <__epilogue_restores__>

0000095a <strnlen_P>:
 95a:	fc 01       	movw	r30, r24
 95c:	05 90       	lpm	r0, Z+
 95e:	61 50       	subi	r22, 0x01	; 1
 960:	70 40       	sbci	r23, 0x00	; 0
 962:	01 10       	cpse	r0, r1
 964:	d8 f7       	brcc	.-10     	; 0x95c <strnlen_P+0x2>
 966:	80 95       	com	r24
 968:	90 95       	com	r25
 96a:	8e 0f       	add	r24, r30
 96c:	9f 1f       	adc	r25, r31
 96e:	08 95       	ret

00000970 <strnlen>:
 970:	fc 01       	movw	r30, r24
 972:	61 50       	subi	r22, 0x01	; 1
 974:	70 40       	sbci	r23, 0x00	; 0
 976:	01 90       	ld	r0, Z+
 978:	01 10       	cpse	r0, r1
 97a:	d8 f7       	brcc	.-10     	; 0x972 <strnlen+0x2>
 97c:	80 95       	com	r24
 97e:	90 95       	com	r25
 980:	8e 0f       	add	r24, r30
 982:	9f 1f       	adc	r25, r31
 984:	08 95       	ret

00000986 <fputc>:
 986:	0f 93       	push	r16
 988:	1f 93       	push	r17
 98a:	cf 93       	push	r28
 98c:	df 93       	push	r29
 98e:	fb 01       	movw	r30, r22
 990:	23 81       	ldd	r18, Z+3	; 0x03
 992:	21 fd       	sbrc	r18, 1
 994:	03 c0       	rjmp	.+6      	; 0x99c <fputc+0x16>
 996:	8f ef       	ldi	r24, 0xFF	; 255
 998:	9f ef       	ldi	r25, 0xFF	; 255
 99a:	2c c0       	rjmp	.+88     	; 0x9f4 <fputc+0x6e>
 99c:	22 ff       	sbrs	r18, 2
 99e:	16 c0       	rjmp	.+44     	; 0x9cc <fputc+0x46>
 9a0:	46 81       	ldd	r20, Z+6	; 0x06
 9a2:	57 81       	ldd	r21, Z+7	; 0x07
 9a4:	24 81       	ldd	r18, Z+4	; 0x04
 9a6:	35 81       	ldd	r19, Z+5	; 0x05
 9a8:	42 17       	cp	r20, r18
 9aa:	53 07       	cpc	r21, r19
 9ac:	44 f4       	brge	.+16     	; 0x9be <fputc+0x38>
 9ae:	a0 81       	ld	r26, Z
 9b0:	b1 81       	ldd	r27, Z+1	; 0x01
 9b2:	9d 01       	movw	r18, r26
 9b4:	2f 5f       	subi	r18, 0xFF	; 255
 9b6:	3f 4f       	sbci	r19, 0xFF	; 255
 9b8:	31 83       	std	Z+1, r19	; 0x01
 9ba:	20 83       	st	Z, r18
 9bc:	8c 93       	st	X, r24
 9be:	26 81       	ldd	r18, Z+6	; 0x06
 9c0:	37 81       	ldd	r19, Z+7	; 0x07
 9c2:	2f 5f       	subi	r18, 0xFF	; 255
 9c4:	3f 4f       	sbci	r19, 0xFF	; 255
 9c6:	37 83       	std	Z+7, r19	; 0x07
 9c8:	26 83       	std	Z+6, r18	; 0x06
 9ca:	14 c0       	rjmp	.+40     	; 0x9f4 <fputc+0x6e>
 9cc:	8b 01       	movw	r16, r22
 9ce:	ec 01       	movw	r28, r24
 9d0:	fb 01       	movw	r30, r22
 9d2:	00 84       	ldd	r0, Z+8	; 0x08
 9d4:	f1 85       	ldd	r31, Z+9	; 0x09
 9d6:	e0 2d       	mov	r30, r0
 9d8:	09 95       	icall
 9da:	89 2b       	or	r24, r25
 9dc:	e1 f6       	brne	.-72     	; 0x996 <fputc+0x10>
 9de:	d8 01       	movw	r26, r16
 9e0:	16 96       	adiw	r26, 0x06	; 6
 9e2:	8d 91       	ld	r24, X+
 9e4:	9c 91       	ld	r25, X
 9e6:	17 97       	sbiw	r26, 0x07	; 7
 9e8:	01 96       	adiw	r24, 0x01	; 1
 9ea:	17 96       	adiw	r26, 0x07	; 7
 9ec:	9c 93       	st	X, r25
 9ee:	8e 93       	st	-X, r24
 9f0:	16 97       	sbiw	r26, 0x06	; 6
 9f2:	ce 01       	movw	r24, r28
 9f4:	df 91       	pop	r29
 9f6:	cf 91       	pop	r28
 9f8:	1f 91       	pop	r17
 9fa:	0f 91       	pop	r16
 9fc:	08 95       	ret

000009fe <__ultoa_invert>:
 9fe:	fa 01       	movw	r30, r20
 a00:	aa 27       	eor	r26, r26
 a02:	28 30       	cpi	r18, 0x08	; 8
 a04:	51 f1       	breq	.+84     	; 0xa5a <__ultoa_invert+0x5c>
 a06:	20 31       	cpi	r18, 0x10	; 16
 a08:	81 f1       	breq	.+96     	; 0xa6a <__ultoa_invert+0x6c>
 a0a:	e8 94       	clt
 a0c:	6f 93       	push	r22
 a0e:	6e 7f       	andi	r22, 0xFE	; 254
 a10:	6e 5f       	subi	r22, 0xFE	; 254
 a12:	7f 4f       	sbci	r23, 0xFF	; 255
 a14:	8f 4f       	sbci	r24, 0xFF	; 255
 a16:	9f 4f       	sbci	r25, 0xFF	; 255
 a18:	af 4f       	sbci	r26, 0xFF	; 255
 a1a:	b1 e0       	ldi	r27, 0x01	; 1
 a1c:	3e d0       	rcall	.+124    	; 0xa9a <__ultoa_invert+0x9c>
 a1e:	b4 e0       	ldi	r27, 0x04	; 4
 a20:	3c d0       	rcall	.+120    	; 0xa9a <__ultoa_invert+0x9c>
 a22:	67 0f       	add	r22, r23
 a24:	78 1f       	adc	r23, r24
 a26:	89 1f       	adc	r24, r25
 a28:	9a 1f       	adc	r25, r26
 a2a:	a1 1d       	adc	r26, r1
 a2c:	68 0f       	add	r22, r24
 a2e:	79 1f       	adc	r23, r25
 a30:	8a 1f       	adc	r24, r26
 a32:	91 1d       	adc	r25, r1
 a34:	a1 1d       	adc	r26, r1
 a36:	6a 0f       	add	r22, r26
 a38:	71 1d       	adc	r23, r1
 a3a:	81 1d       	adc	r24, r1
 a3c:	91 1d       	adc	r25, r1
 a3e:	a1 1d       	adc	r26, r1
 a40:	20 d0       	rcall	.+64     	; 0xa82 <__ultoa_invert+0x84>
 a42:	09 f4       	brne	.+2      	; 0xa46 <__ultoa_invert+0x48>
 a44:	68 94       	set
 a46:	3f 91       	pop	r19
 a48:	2a e0       	ldi	r18, 0x0A	; 10
 a4a:	26 9f       	mul	r18, r22
 a4c:	11 24       	eor	r1, r1
 a4e:	30 19       	sub	r19, r0
 a50:	30 5d       	subi	r19, 0xD0	; 208
 a52:	31 93       	st	Z+, r19
 a54:	de f6       	brtc	.-74     	; 0xa0c <__ultoa_invert+0xe>
 a56:	cf 01       	movw	r24, r30
 a58:	08 95       	ret
 a5a:	46 2f       	mov	r20, r22
 a5c:	47 70       	andi	r20, 0x07	; 7
 a5e:	40 5d       	subi	r20, 0xD0	; 208
 a60:	41 93       	st	Z+, r20
 a62:	b3 e0       	ldi	r27, 0x03	; 3
 a64:	0f d0       	rcall	.+30     	; 0xa84 <__ultoa_invert+0x86>
 a66:	c9 f7       	brne	.-14     	; 0xa5a <__ultoa_invert+0x5c>
 a68:	f6 cf       	rjmp	.-20     	; 0xa56 <__ultoa_invert+0x58>
 a6a:	46 2f       	mov	r20, r22
 a6c:	4f 70       	andi	r20, 0x0F	; 15
 a6e:	40 5d       	subi	r20, 0xD0	; 208
 a70:	4a 33       	cpi	r20, 0x3A	; 58
 a72:	18 f0       	brcs	.+6      	; 0xa7a <__ultoa_invert+0x7c>
 a74:	49 5d       	subi	r20, 0xD9	; 217
 a76:	31 fd       	sbrc	r19, 1
 a78:	40 52       	subi	r20, 0x20	; 32
 a7a:	41 93       	st	Z+, r20
 a7c:	02 d0       	rcall	.+4      	; 0xa82 <__ultoa_invert+0x84>
 a7e:	a9 f7       	brne	.-22     	; 0xa6a <__ultoa_invert+0x6c>
 a80:	ea cf       	rjmp	.-44     	; 0xa56 <__ultoa_invert+0x58>
 a82:	b4 e0       	ldi	r27, 0x04	; 4
 a84:	a6 95       	lsr	r26
 a86:	97 95       	ror	r25
 a88:	87 95       	ror	r24
 a8a:	77 95       	ror	r23
 a8c:	67 95       	ror	r22
 a8e:	ba 95       	dec	r27
 a90:	c9 f7       	brne	.-14     	; 0xa84 <__ultoa_invert+0x86>
 a92:	00 97       	sbiw	r24, 0x00	; 0
 a94:	61 05       	cpc	r22, r1
 a96:	71 05       	cpc	r23, r1
 a98:	08 95       	ret
 a9a:	9b 01       	movw	r18, r22
 a9c:	ac 01       	movw	r20, r24
 a9e:	0a 2e       	mov	r0, r26
 aa0:	06 94       	lsr	r0
 aa2:	57 95       	ror	r21
 aa4:	47 95       	ror	r20
 aa6:	37 95       	ror	r19
 aa8:	27 95       	ror	r18
 aaa:	ba 95       	dec	r27
 aac:	c9 f7       	brne	.-14     	; 0xaa0 <__ultoa_invert+0xa2>
 aae:	62 0f       	add	r22, r18
 ab0:	73 1f       	adc	r23, r19
 ab2:	84 1f       	adc	r24, r20
 ab4:	95 1f       	adc	r25, r21
 ab6:	a0 1d       	adc	r26, r0
 ab8:	08 95       	ret

00000aba <__prologue_saves__>:
 aba:	2f 92       	push	r2
 abc:	3f 92       	push	r3
 abe:	4f 92       	push	r4
 ac0:	5f 92       	push	r5
 ac2:	6f 92       	push	r6
 ac4:	7f 92       	push	r7
 ac6:	8f 92       	push	r8
 ac8:	9f 92       	push	r9
 aca:	af 92       	push	r10
 acc:	bf 92       	push	r11
 ace:	cf 92       	push	r12
 ad0:	df 92       	push	r13
 ad2:	ef 92       	push	r14
 ad4:	ff 92       	push	r15
 ad6:	0f 93       	push	r16
 ad8:	1f 93       	push	r17
 ada:	cf 93       	push	r28
 adc:	df 93       	push	r29
 ade:	cd b7       	in	r28, 0x3d	; 61
 ae0:	de b7       	in	r29, 0x3e	; 62
 ae2:	ca 1b       	sub	r28, r26
 ae4:	db 0b       	sbc	r29, r27
 ae6:	0f b6       	in	r0, 0x3f	; 63
 ae8:	f8 94       	cli
 aea:	de bf       	out	0x3e, r29	; 62
 aec:	0f be       	out	0x3f, r0	; 63
 aee:	cd bf       	out	0x3d, r28	; 61
 af0:	09 94       	ijmp

00000af2 <__epilogue_restores__>:
 af2:	2a 88       	ldd	r2, Y+18	; 0x12
 af4:	39 88       	ldd	r3, Y+17	; 0x11
 af6:	48 88       	ldd	r4, Y+16	; 0x10
 af8:	5f 84       	ldd	r5, Y+15	; 0x0f
 afa:	6e 84       	ldd	r6, Y+14	; 0x0e
 afc:	7d 84       	ldd	r7, Y+13	; 0x0d
 afe:	8c 84       	ldd	r8, Y+12	; 0x0c
 b00:	9b 84       	ldd	r9, Y+11	; 0x0b
 b02:	aa 84       	ldd	r10, Y+10	; 0x0a
 b04:	b9 84       	ldd	r11, Y+9	; 0x09
 b06:	c8 84       	ldd	r12, Y+8	; 0x08
 b08:	df 80       	ldd	r13, Y+7	; 0x07
 b0a:	ee 80       	ldd	r14, Y+6	; 0x06
 b0c:	fd 80       	ldd	r15, Y+5	; 0x05
 b0e:	0c 81       	ldd	r16, Y+4	; 0x04
 b10:	1b 81       	ldd	r17, Y+3	; 0x03
 b12:	aa 81       	ldd	r26, Y+2	; 0x02
 b14:	b9 81       	ldd	r27, Y+1	; 0x01
 b16:	ce 0f       	add	r28, r30
 b18:	d1 1d       	adc	r29, r1
 b1a:	0f b6       	in	r0, 0x3f	; 63
 b1c:	f8 94       	cli
 b1e:	de bf       	out	0x3e, r29	; 62
 b20:	0f be       	out	0x3f, r0	; 63
 b22:	cd bf       	out	0x3d, r28	; 61
 b24:	ed 01       	movw	r28, r26
 b26:	08 95       	ret

00000b28 <_exit>:
 b28:	f8 94       	cli

00000b2a <__stop_program>:
 b2a:	ff cf       	rjmp	.-2      	; 0xb2a <__stop_program>
